{"file_contents":{"drizzle.config.ts":{"content":"import { defineConfig } from \"drizzle-kit\";\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\"DATABASE_URL, ensure the database is provisioned\");\n}\n\nexport default defineConfig({\n  out: \"./migrations\",\n  schema: \"./shared/schema.ts\",\n  dialect: \"postgresql\",\n  dbCredentials: {\n    url: process.env.DATABASE_URL,\n  },\n});\n","size_bytes":325},"postcss.config.js":{"content":"export default {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n","size_bytes":80},"replit.md":{"content":"# ChillVibes Lifestyle Media Community\n\n## Overview\n\nChillVibes is a comprehensive lifestyle media platform - \"Red Bull meets CNBC\" - combining Tech+Finance and Jiu-Jitsu+Surf content with real-time information updates. The community features AI-powered content generation, user engagement through comments and photo sharing, and monetization through targeted advertising.\n\n**Vision**: A digital lifestyle community spreading chill vibes across technology, finance, adventure sports, and wellness.\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## Recent Enhancements (January 2025)\n\n### Comprehensive Lifestyle Media Platform\n- **Real-time News Integration**: Enhanced content service now fetches real-time tech and finance news via NEWS_API_KEY\n- **Subcategory System**: Added detailed subcategories across all content areas:\n  - **Tech**: AI & Innovation, Blockchain, Mobile Apps\n  - **Finance**: Travel Rewards, Crypto/DeFi, Markets\n  - **Jiu-Jitsu**: Training & Mindset, Destinations, Competitions\n  - **Surf**: Forecasting, Destinations, Conservation, Gear Reviews, Yoga\n- **Advanced Content Generation**: Combines AI-generated original content with real-time news feeds\n- **Enhanced Database Schema**: Added subcategory, realtime flags, source URLs, and tags to articles\n- **Lifestyle-First Approach**: All content filtered through ChillVibes perspective of balanced living\n- **Admin Text Customization**: Site-wide text size and color controls for dynamic styling\n- **Travel Rewards Content**: Comprehensive credit card and travel points section featuring latest 2025 offers including Chase Sapphire Reserve (125,000 points + $500 credit), Citi Strata Elite (190,000 points), and strategic optimization advice\n\n## User Preferences\n\nPreferred communication style: Simple, everyday language.\n\n## System Architecture\n\n### Frontend Architecture\n- **Framework**: React 18 with TypeScript\n- **Routing**: Wouter for client-side routing\n- **Styling**: Tailwind CSS with custom ocean/surf theme\n- **UI Components**: Radix UI primitives with shadcn/ui component library\n- **State Management**: TanStack Query for server state management\n- **Build Tool**: Vite for development and build processes\n\n### Backend Architecture\n- **Runtime**: Node.js with Express.js\n- **Language**: TypeScript with ES modules\n- **API Pattern**: RESTful APIs with JSON responses\n- **File Upload**: Multer middleware for image handling\n- **Development**: Hot reload with Vite integration\n\n### Data Storage Solutions\n- **Database**: PostgreSQL with Drizzle ORM\n- **Provider**: Neon Database (serverless PostgreSQL)\n- **Schema Management**: Drizzle Kit for migrations\n- **In-Memory Storage**: Fallback MemStorage class for development\n- **File Storage**: Local filesystem for uploaded images\n\n## Key Components\n\n### Database Schema\n- **Articles Table**: Stores blog posts with title, content, excerpt, category, images, and metadata\n- **Users Table**: Basic user management (currently minimal implementation)\n- **Categories**: Two main categories - \"tech-finance\" and \"jiu-jitsu-surf\"\n\n### API Endpoints\n- `GET /api/articles` - Retrieve articles with optional category filtering\n- `GET /api/articles/featured` - Get featured articles for homepage\n- `GET /api/articles/:id` - Get single article by ID\n- `POST /api/articles` - Create new article (admin)\n- `PUT /api/articles/:id` - Update existing article (admin)\n- `DELETE /api/articles/:id` - Delete article (admin)\n- `POST /api/upload` - Upload images for articles\n\n### Frontend Pages\n- **Home**: Landing page with featured articles and category navigation\n- **Category**: Filtered article listings by category\n- **Article**: Individual article view with full content\n- **Admin**: Content management interface for creating/editing articles\n- **404**: Custom not found page\n\n### UI Features\n- **Rich Text Editor**: Custom editor with formatting tools for article content\n- **Image Upload**: Drag-and-drop image uploads with preview\n- **Responsive Design**: Mobile-first approach with Tailwind breakpoints\n- **Theme System**: Custom ocean/surf color palette with CSS variables\n- **Loading States**: Skeleton loaders and loading indicators\n\n## Data Flow\n\n1. **Article Creation**: Admin creates articles through rich text editor → Images uploaded to `/uploads` → Article data saved to database\n2. **Content Delivery**: Frontend fetches articles via API → TanStack Query caches responses → Components render with loading/error states\n3. **Navigation**: Wouter handles client-side routing → Dynamic imports for code splitting → SEO-friendly URLs\n4. **Image Serving**: Static file serving from `/uploads` directory → Optimized with error handling\n\n## External Dependencies\n\n### Core Framework Dependencies\n- React ecosystem (React, ReactDOM, React Query)\n- Radix UI component primitives for accessibility\n- Wouter for lightweight routing\n- Drizzle ORM for type-safe database operations\n\n### Development Tools\n- Vite for fast development and building\n- TypeScript for type safety\n- Tailwind CSS for utility-first styling\n- ESBuild for server bundling\n\n### Backend Dependencies\n- Express.js for HTTP server\n- Multer for file uploads\n- Neon Database for PostgreSQL hosting\n- TSX for TypeScript execution\n\n### UI/UX Libraries\n- Date-fns for date formatting\n- Lucide React for icons\n- Class Variance Authority for component variants\n- CLSX for conditional CSS classes\n\n## Deployment Strategy\n\n### Build Process\n- **Frontend**: Vite builds React app to `dist/public` directory\n- **Backend**: ESBuild bundles TypeScript server to `dist/index.js`\n- **Assets**: Static files served from build output\n\n### Environment Configuration\n- `NODE_ENV` for environment detection\n- `DATABASE_URL` for PostgreSQL connection\n- Development/production build differentiation\n\n### File Structure\n- Monorepo structure with `client/`, `server/`, and `shared/` directories\n- Shared TypeScript types and schemas between frontend/backend\n- Centralized configuration files at root level\n\n### Hosting Considerations\n- Designed for deployment on platforms like Replit, Vercel, or similar\n- Static asset serving through Express in production\n- Database migrations handled via Drizzle Kit\n- Environment variable configuration for external services","size_bytes":6276},"tailwind.config.ts":{"content":"import type { Config } from \"tailwindcss\";\n\nexport default {\n  darkMode: [\"class\"],\n  content: [\"./client/index.html\", \"./client/src/**/*.{js,jsx,ts,tsx}\"],\n  theme: {\n    extend: {\n      borderRadius: {\n        lg: \"var(--radius)\",\n        md: \"calc(var(--radius) - 2px)\",\n        sm: \"calc(var(--radius) - 4px)\",\n      },\n      colors: {\n        background: \"var(--background)\",\n        foreground: \"var(--foreground)\",\n        card: {\n          DEFAULT: \"var(--card)\",\n          foreground: \"var(--card-foreground)\",\n        },\n        popover: {\n          DEFAULT: \"var(--popover)\",\n          foreground: \"var(--popover-foreground)\",\n        },\n        primary: {\n          DEFAULT: \"var(--primary)\",\n          foreground: \"var(--primary-foreground)\",\n        },\n        secondary: {\n          DEFAULT: \"var(--secondary)\",\n          foreground: \"var(--secondary-foreground)\",\n        },\n        muted: {\n          DEFAULT: \"var(--muted)\",\n          foreground: \"var(--muted-foreground)\",\n        },\n        accent: {\n          DEFAULT: \"var(--accent)\",\n          foreground: \"var(--accent-foreground)\",\n        },\n        destructive: {\n          DEFAULT: \"var(--destructive)\",\n          foreground: \"var(--destructive-foreground)\",\n        },\n        border: \"var(--border)\",\n        input: \"var(--input)\",\n        ring: \"var(--ring)\",\n        chart: {\n          \"1\": \"var(--chart-1)\",\n          \"2\": \"var(--chart-2)\",\n          \"3\": \"var(--chart-3)\",\n          \"4\": \"var(--chart-4)\",\n          \"5\": \"var(--chart-5)\",\n        },\n        sidebar: {\n          DEFAULT: \"var(--sidebar-background)\",\n          foreground: \"var(--sidebar-foreground)\",\n          primary: \"var(--sidebar-primary)\",\n          \"primary-foreground\": \"var(--sidebar-primary-foreground)\",\n          accent: \"var(--sidebar-accent)\",\n          \"accent-foreground\": \"var(--sidebar-accent-foreground)\",\n          border: \"var(--sidebar-border)\",\n          ring: \"var(--sidebar-ring)\",\n        },\n      },\n      keyframes: {\n        \"accordion-down\": {\n          from: {\n            height: \"0\",\n          },\n          to: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n        },\n        \"accordion-up\": {\n          from: {\n            height: \"var(--radix-accordion-content-height)\",\n          },\n          to: {\n            height: \"0\",\n          },\n        },\n      },\n      animation: {\n        \"accordion-down\": \"accordion-down 0.2s ease-out\",\n        \"accordion-up\": \"accordion-up 0.2s ease-out\",\n      },\n    },\n  },\n  plugins: [require(\"tailwindcss-animate\"), require(\"@tailwindcss/typography\")],\n} satisfies Config;\n","size_bytes":2627},"vite.config.ts":{"content":"import { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport path from \"path\";\nimport runtimeErrorOverlay from \"@replit/vite-plugin-runtime-error-modal\";\n\nexport default defineConfig({\n  plugins: [\n    react(),\n    runtimeErrorOverlay(),\n    ...(process.env.NODE_ENV !== \"production\" &&\n    process.env.REPL_ID !== undefined\n      ? [\n          await import(\"@replit/vite-plugin-cartographer\").then((m) =>\n            m.cartographer(),\n          ),\n        ]\n      : []),\n  ],\n  resolve: {\n    alias: {\n      \"@\": path.resolve(import.meta.dirname, \"client\", \"src\"),\n      \"@shared\": path.resolve(import.meta.dirname, \"shared\"),\n      \"@assets\": path.resolve(import.meta.dirname, \"attached_assets\"),\n    },\n  },\n  root: path.resolve(import.meta.dirname, \"client\"),\n  build: {\n    outDir: path.resolve(import.meta.dirname, \"dist/public\"),\n    emptyOutDir: true,\n  },\n  server: {\n    fs: {\n      strict: true,\n      deny: [\"**/.*\"],\n    },\n  },\n});\n","size_bytes":971},"server/contentService.ts":{"content":"import { nanoid } from \"nanoid\";\n\nexport interface OriginalArticle {\n  id: string;\n  title: string;\n  content: string;\n  excerpt: string;\n  category: \"tech\" | \"finance\" | \"jiu-jitsu\" | \"surf\";\n  subcategory?: string;\n  imageUrl?: string;\n  author: string;\n  isDraft: boolean;\n  isFeatured: boolean;\n  isRealtime: boolean;\n  sourceUrl?: string;\n  tags?: string[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport class ContentService {\n  constructor() {}\n\n  generateTechArticles(): OriginalArticle[] {\n    const techBackgrounds = [\n      \"https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surfer with laptop on beach\n      \"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Ocean waves\n      \"https://images.unsplash.com/photo-1505142468610-359e7d316be0?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"  // Surfboard on sand\n    ];\n    \n    return [\n      {\n        id: nanoid(),\n        title: \"The Future of Decentralized Web: Web3 and Beyond\",\n        excerpt: \"Exploring how blockchain technology is reshaping the internet, from DeFi protocols to decentralized social networks.\",\n        imageUrl: techBackgrounds[0],\n        content: `\n          <h2>The Dawn of Web3</h2>\n          <p>The internet as we know it is evolving. Web3 represents a fundamental shift from centralized platforms to decentralized protocols that put users in control of their data and digital assets.</p>\n          \n          <h3>Core Principles of Web3</h3>\n          <p><strong>Decentralization:</strong> Instead of relying on central servers, Web3 applications run on distributed networks of nodes, making them more resilient and censorship-resistant.</p>\n          \n          <p><strong>User Ownership:</strong> Through blockchain technology, users truly own their digital assets, from cryptocurrency to NFTs to their personal data.</p>\n          \n          <p><strong>Trustless Interactions:</strong> Smart contracts enable automated, trustless transactions without intermediaries.</p>\n          \n          <h3>Real-World Applications</h3>\n          <p>DeFi protocols are already handling billions in transactions, while decentralized social networks like Mastodon and Bluesky are gaining traction as alternatives to traditional platforms.</p>\n          \n          <p>The transition won't happen overnight, but the infrastructure is being built today. As developers, staying informed about Web3 technologies isn't just about following trends—it's about understanding the future of digital interaction.</p>\n        `,\n        category: \"tech\",\n        author: \"ChillVibes Tech Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"AI-Driven Development: Tools That Actually Matter\",\n        excerpt: \"A practical look at AI coding assistants, automated testing, and the tools that are genuinely changing how we build software.\",\n        imageUrl: techBackgrounds[1],\n        content: `\n          <h2>Beyond the Hype: AI Tools That Work</h2>\n          <p>While everyone's talking about AI replacing developers, the reality is more nuanced. AI tools are becoming powerful assistants that enhance productivity rather than replace human creativity.</p>\n          \n          <h3>Code Generation and Completion</h3>\n          <p>Tools like GitHub Copilot and Tabnine have moved beyond simple autocomplete to understanding context and generating meaningful code blocks. The key is learning when to trust AI suggestions and when to write from scratch.</p>\n          \n          <h3>Automated Testing and Debugging</h3>\n          <p>AI-powered testing tools can generate test cases, identify edge cases you might miss, and even suggest fixes for common bugs. This frees developers to focus on architecture and user experience.</p>\n          \n          <h3>Documentation and Code Review</h3>\n          <p>AI can now generate meaningful documentation from code comments and assist in code reviews by flagging potential issues before human reviewers dive in.</p>\n          \n          <h3>The Human Element</h3>\n          <p>The most successful developers aren't those who avoid AI tools, but those who learn to use them effectively while maintaining their problem-solving skills and creative thinking.</p>\n          \n          <p>AI is a tool, not a replacement. Master the tools, but never stop thinking like a developer.</p>\n        `,\n        category: \"tech\",\n        author: \"ChillVibes Tech Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Building Resilient Systems: Lessons from Distributed Architecture\",\n        excerpt: \"How to design systems that gracefully handle failures, scale efficiently, and maintain reliability under pressure.\",\n        imageUrl: techBackgrounds[2],\n        content: `\n          <h2>The Art of System Resilience</h2>\n          <p>In today's always-on world, system downtime isn't just inconvenient—it's costly. Building resilient distributed systems requires thinking beyond happy path scenarios.</p>\n          \n          <h3>Embrace Failure as Normal</h3>\n          <p>Netflix's Chaos Monkey randomly terminates services to test system resilience. This philosophy of \"failing fast and failing often\" helps identify weaknesses before they become critical issues.</p>\n          \n          <h3>Circuit Breaker Pattern</h3>\n          <p>When a service starts failing, circuit breakers prevent cascade failures by temporarily blocking requests to the failing service, allowing it time to recover.</p>\n          \n          <h3>Graceful Degradation</h3>\n          <p>Instead of complete failure, well-designed systems provide reduced functionality. Think of how Twitter still shows cached tweets when real-time updates fail.</p>\n          \n          <h3>Monitoring and Observability</h3>\n          <p>You can't fix what you can't see. Comprehensive logging, metrics, and distributed tracing are essential for understanding system behavior in production.</p>\n          \n          <h3>The Mindset Shift</h3>\n          <p>Resilient systems aren't about preventing all failures—they're about failing gracefully and recovering quickly. This mindset shift changes how you approach system design from the ground up.</p>\n        `,\n        category: \"tech\",\n        author: \"ChillVibes Tech Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  generateFinanceArticles(): OriginalArticle[] {\n    const financeBackgrounds = [\n      \"https://images.unsplash.com/photo-1537519646099-335112b4bd5c?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surfer at golden hour\n      \"https://images.unsplash.com/photo-1530549387789-4c1017266635?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Tropical surf break\n      \"https://images.unsplash.com/photo-1544197150-b99a580bb7a8?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"  // Perfect barrel wave\n    ];\n    \n    return [\n      {\n        id: nanoid(),\n        title: \"DeFi Yield Farming: Strategy Beyond the Hype\",\n        excerpt: \"Understanding the risks and rewards of yield farming in decentralized finance, with practical strategies for different risk profiles.\",\n        imageUrl: financeBackgrounds[0],\n        content: `\n          <h2>Yield Farming: Beyond the Marketing</h2>\n          <p>Yield farming promises high returns, but like any investment strategy, it requires understanding the underlying mechanisms and risks.</p>\n          \n          <h3>How Yield Farming Actually Works</h3>\n          <p>At its core, yield farming involves providing liquidity to decentralized exchanges or lending protocols in exchange for rewards. These rewards come from trading fees, governance tokens, or inflation rewards.</p>\n          \n          <h3>Risk Assessment</h3>\n          <p><strong>Impermanent Loss:</strong> When you provide liquidity to a trading pair, price movements can result in less value than simply holding the tokens.</p>\n          \n          <p><strong>Smart Contract Risk:</strong> Bugs in smart contracts can lead to total loss of funds. Always research the protocol's audit history.</p>\n          \n          <p><strong>Token Risk:</strong> Governance tokens used as rewards can be highly volatile or become worthless.</p>\n          \n          <h3>Strategic Approaches</h3>\n          <p><strong>Conservative:</strong> Stick to established protocols like Uniswap or Compound with proven track records.</p>\n          \n          <p><strong>Balanced:</strong> Diversify across multiple protocols and only invest what you can afford to lose.</p>\n          \n          <p><strong>Aggressive:</strong> Early adoption of new protocols for higher rewards, but with significant risk.</p>\n          \n          <p>Remember: sustainable yields in traditional finance are 3-7% annually. If a DeFi protocol promises 100% APY, ask why and understand the risks.</p>\n        `,\n        category: \"finance\",\n        author: \"ChillVibes Finance Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Personal Finance in the Digital Age: Beyond Traditional Banking\",\n        excerpt: \"How fintech innovations are changing personal finance management, from neobanks to investment apps to cryptocurrency integration.\",\n        imageUrl: financeBackgrounds[1],\n        content: `\n          <h2>Rethinking Personal Finance</h2>\n          <p>Traditional banking is being disrupted by fintech innovations that offer better user experiences, lower fees, and new capabilities.</p>\n          \n          <h3>Neobanks and Digital-First Banking</h3>\n          <p>Banks like Chime, Revolut, and N26 offer banking without physical branches, often with better mobile experiences and lower fees than traditional banks.</p>\n          \n          <h3>Automated Investing and Robo-Advisors</h3>\n          <p>Apps like Betterment and Wealthfront use algorithms to manage portfolios, making investing accessible to people who previously couldn't afford financial advisors.</p>\n          \n          <h3>Cryptocurrency Integration</h3>\n          <p>Many fintech apps now offer cryptocurrency buying, selling, and yield earning alongside traditional financial services. This integration is making crypto more mainstream.</p>\n          \n          <h3>Real-Time Financial Insights</h3>\n          <p>Modern financial apps provide instant spending categorization, budget tracking, and financial health scores that help users make better money decisions.</p>\n          \n          <h3>The Balanced Approach</h3>\n          <p>While fintech offers compelling benefits, don't abandon proven financial principles: emergency funds, diversified investing, and living below your means remain crucial regardless of the technology you use.</p>\n          \n          <p>Use technology to enhance your financial discipline, not to enable risky behavior with gamified interfaces.</p>\n        `,\n        category: \"finance\",\n        author: \"ChillVibes Finance Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Investment Psychology: Why Smart People Make Bad Financial Decisions\",\n        excerpt: \"Exploring cognitive biases that affect investment decisions and practical strategies to overcome emotional investing pitfalls.\",\n        imageUrl: financeBackgrounds[2],\n        content: `\n          <h2>The Mind of an Investor</h2>\n          <p>Technical analysis and fundamental research are important, but investment psychology often determines long-term success more than market knowledge.</p>\n          \n          <h3>Common Cognitive Biases</h3>\n          <p><strong>Loss Aversion:</strong> We feel losses more strongly than equivalent gains, leading to holding losing positions too long and selling winners too early.</p>\n          \n          <p><strong>Confirmation Bias:</strong> We seek information that confirms our existing beliefs and ignore contradictory evidence.</p>\n          \n          <p><strong>Recency Bias:</strong> We overweight recent events when making decisions, leading to buying high after bull runs and selling low after crashes.</p>\n          \n          <h3>Practical Strategies</h3>\n          <p><strong>Systematic Approaches:</strong> Use dollar-cost averaging and rebalancing schedules to remove emotion from timing decisions.</p>\n          \n          <p><strong>Pre-Commitment:</strong> Decide your investment strategy during calm periods and stick to it during volatile times.</p>\n          \n          <p><strong>Diversification:</strong> Spread risk across asset classes, geographies, and time periods to reduce the impact of any single decision.</p>\n          \n          <h3>The Long Game</h3>\n          <p>Successful investing is boring. It's about consistent behavior over decades, not brilliant market timing. Understanding your psychology helps you stay consistent when markets test your resolve.</p>\n          \n          <p>The best investors aren't the smartest—they're the most disciplined.</p>\n        `,\n        category: \"finance\",\n        author: \"ChillVibes Finance Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  generateJiuJitsuArticles(): OriginalArticle[] {\n    const jiuJitsuBackgrounds = [\n      \"https://images.unsplash.com/photo-1570197788417-0e82375c9371?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Peaceful beach meditation spot\n      \"https://images.unsplash.com/photo-1582550945154-019d532d0fa5?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Dawn surf session\n      \"https://images.unsplash.com/photo-1506905925346-21bda4d32df4?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"  // Sunset surf lineup\n    ];\n    \n    return [\n      {\n        id: nanoid(),\n        title: \"The Mental Game: Building Resilience Through Jiu-Jitsu\",\n        excerpt: \"How the mental challenges of Brazilian Jiu-Jitsu translate to stronger resilience, better problem-solving, and emotional regulation in daily life.\",\n        imageUrl: jiuJitsuBackgrounds[0],\n        content: `\n          <h2>More Than Physical Training</h2>\n          <p>Brazilian Jiu-Jitsu is often called \"physical chess\" because it demands strategic thinking under pressure. But the mental benefits extend far beyond the mat.</p>\n          \n          <h3>Embracing Discomfort</h3>\n          <p>BJJ forces you to remain calm while someone is actively trying to submit you. This controlled stress training builds resilience that transfers to work presentations, difficult conversations, and life challenges.</p>\n          \n          <h3>Problem-Solving Under Pressure</h3>\n          <p>Every roll is a series of problems to solve: how to escape this position, how to advance your position, how to set up your next attack. This constant problem-solving sharpens your ability to think clearly under stress.</p>\n          \n          <h3>Ego Management</h3>\n          <p>You'll tap out regularly in BJJ, especially as a beginner. Learning to tap, analyze what went wrong, and try again builds humility and growth mindset that serves you well in professional and personal development.</p>\n          \n          <h3>Emotional Regulation</h3>\n          <p>Panic leads to exhaustion and poor decisions on the mat. BJJ teaches you to recognize emotional escalation and return to calm, controlled breathing and thinking.</p>\n          \n          <h3>The Flow State</h3>\n          <p>Advanced practitioners often describe entering a flow state during rolling—complete presence and responsiveness without overthinking. This mindfulness practice enhances focus and reduces anxiety off the mat.</p>\n          \n          <p>The physical techniques are just the beginning. The mental skills developed through BJJ create a foundation for handling life's challenges with greater calm and clarity.</p>\n        `,\n        category: \"jiu-jitsu\",\n        author: \"ChillVibes Martial Arts Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Building Your Home Training Routine: BJJ Fundamentals\",\n        excerpt: \"Essential solo drills, mobility work, and strength training that complement your mat time and accelerate your Brazilian Jiu-Jitsu progress.\",\n        imageUrl: jiuJitsuBackgrounds[1],\n        content: `\n          <h2>Training Beyond Class Time</h2>\n          <p>While live rolling and instruction are irreplaceable, a structured home training routine can significantly accelerate your BJJ development.</p>\n          \n          <h3>Solo Movement Drills</h3>\n          <p><strong>Shrimping:</strong> Practice hip escapes on both sides for 2-3 minutes daily. This fundamental movement is crucial for most escapes.</p>\n          \n          <p><strong>Technical Stand-ups:</strong> Perfect your base and posture when transitioning from ground to standing.</p>\n          \n          <p><strong>Forward and Backward Rolls:</strong> Build comfort with inverted positions and improve spatial awareness.</p>\n          \n          <h3>Mobility and Flexibility</h3>\n          <p><strong>Hip Flexors:</strong> Tight hip flexors limit guard retention and passing. Daily stretching improves range of motion for guard work.</p>\n          \n          <p><strong>Shoulders:</strong> Shoulder mobility is crucial for grips, submissions, and defensive postures.</p>\n          \n          <p><strong>Neck Strengthening:</strong> Gentle neck exercises help prevent injury and improve comfort when bridging.</p>\n          \n          <h3>Strength Training</h3>\n          <p><strong>Isometric Holds:</strong> Planks, dead hangs, and hollow body holds build the core stability essential for BJJ.</p>\n          \n          <p><strong>Functional Movement:</strong> Turkish get-ups, bear crawls, and animal movements improve movement quality.</p>\n          \n          <h3>Mental Training</h3>\n          <p><strong>Visualization:</strong> Spend 10-15 minutes mentally rehearsing techniques or scenarios from class.</p>\n          \n          <p><strong>Study:</strong> Watch instructional videos to understand concepts, but don't rely on them to replace live instruction.</p>\n          \n          <p>Consistency beats intensity. 15-20 minutes of daily home training will improve your BJJ more than sporadic long sessions.</p>\n        `,\n        category: \"jiu-jitsu\",\n        author: \"ChillVibes Martial Arts Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Competition Mindset: Lessons from the Tournament Circuit\",\n        excerpt: \"How competitive Brazilian Jiu-Jitsu builds character, handles pressure, and develops strategic thinking both on and off the mat.\",\n        imageUrl: jiuJitsuBackgrounds[2],\n        content: `\n          <h2>The Forge of Competition</h2>\n          <p>Competition isn't for everyone, but the lessons learned from testing your skills under pressure create profound personal growth.</p>\n          \n          <h3>Preparation and Process</h3>\n          <p>Successful competitors focus on process over outcome. You can't control whether you win, but you can control your preparation, technique execution, and mental approach.</p>\n          \n          <h3>Managing Pre-Competition Nerves</h3>\n          <p><strong>Visualization:</strong> Mentally rehearse your matches, including potential challenges and your responses.</p>\n          \n          <p><strong>Breathing:</strong> Control your breath to manage anxiety. Box breathing (4-4-4-4 count) helps calm the nervous system.</p>\n          \n          <p><strong>Focus on Fundamentals:</strong> Under pressure, rely on techniques you've drilled thousands of times rather than flashy moves you've hit once.</p>\n          \n          <h3>Learning from Losses</h3>\n          <p>Every loss contains valuable information. Video review helps identify technical errors, but also examine mental lapses, tactical mistakes, and preparation gaps.</p>\n          \n          <h3>Strategic Thinking</h3>\n          <p>Competition forces you to develop game plans, adapt to different opponents, and make quick strategic decisions. These skills translate directly to business strategy and problem-solving.</p>\n          \n          <h3>The Growth Mindset</h3>\n          <p>Competition accelerates learning by providing immediate feedback on your skills. Win or lose, each match teaches something new about your capabilities and areas for improvement.</p>\n          \n          <p>The confidence built through competition—knowing you can perform under pressure—carries into all areas of life where stakes are high and outcomes matter.</p>\n        `,\n        category: \"jiu-jitsu\",\n        author: \"ChillVibes Martial Arts Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  generateSurfArticles(): OriginalArticle[] {\n    const surfBackgrounds = [\n      \"https://images.unsplash.com/photo-1544551763-77ef2d0cfc6c?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Epic surf break aerial view\n      \"https://images.unsplash.com/photo-1483653085484-eb63c9f02547?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surfer in perfect tube\n      \"https://images.unsplash.com/photo-1529659240567-57999e7b376c?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"  // Longboard session at sunset\n    ];\n    \n    return [\n      {\n        id: nanoid(),\n        title: \"Reading the Ocean: A Surfer's Guide to Wave Forecasting\",\n        excerpt: \"Understanding swell direction, wind patterns, and tidal influences to predict optimal surf conditions and find uncrowded sessions.\",\n        imageUrl: surfBackgrounds[0],\n        content: `\n          <h2>The Language of Waves</h2>\n          <p>Great surfers aren't just skilled on their boards—they're students of oceanography, meteorology, and local knowledge.</p>\n          \n          <h3>Understanding Swell</h3>\n          <p><strong>Swell Period:</strong> Longer period swells (12+ seconds) typically produce cleaner, more powerful waves than short-period wind swell.</p>\n          \n          <p><strong>Swell Direction:</strong> Know how different swell directions interact with your local breaks. A southwest swell might be perfect for one spot and terrible for another.</p>\n          \n          <p><strong>Swell Size:</strong> Forecast models show deep water swell size, but local factors like reef depth, bottom contour, and shoreline shape determine actual wave size.</p>\n          \n          <h3>Wind Patterns</h3>\n          <p><strong>Offshore Winds:</strong> Clean up wave faces and hold them up longer, creating ideal surfing conditions.</p>\n          \n          <p><strong>Onshore Winds:</strong> Create choppy, closed-out conditions, but can sometimes improve very small swells.</p>\n          \n          <p><strong>Daily Wind Cycles:</strong> Many coastal areas have predictable daily wind patterns based on land and sea temperature differences.</p>\n          \n          <h3>Tidal Influences</h3>\n          <p>Different breaks work better at different tides. Rocky reef breaks might only work at mid to high tide, while beach breaks might prefer lower tides for shape and power.</p>\n          \n          <h3>Local Knowledge</h3>\n          <p>Spend time observing your local breaks in different conditions. Apps and forecasts provide data, but experience teaches you how that data translates to actual surf quality.</p>\n          \n          <p>The ocean is constantly changing. Developing your ability to read conditions means more good sessions and fewer frustrating paddle-outs.</p>\n        `,\n        category: \"surf\",\n        author: \"ChillVibes Surf Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Surf Fitness: Building Ocean-Ready Strength and Endurance\",\n        excerpt: \"Specific training routines that develop the functional strength, paddle endurance, and flexibility needed for peak surfing performance.\",\n        imageUrl: surfBackgrounds[1],\n        content: `\n          <h2>Training for the Ocean</h2>\n          <p>Surfing demands a unique combination of upper body endurance, core stability, explosive power, and flexibility. Generic fitness doesn't always translate to surf performance.</p>\n          \n          <h3>Paddle Endurance</h3>\n          <p><strong>Swimming:</strong> Nothing replaces actual swimming for paddle fitness. Focus on longer distances with steady effort rather than sprint intervals.</p>\n          \n          <p><strong>Pull-ups and Variations:</strong> Build the pulling strength needed for powerful paddle strokes. Vary grip width and add pauses to build strength through full range of motion.</p>\n          \n          <p><strong>Paddleboard Training:</strong> SUP or prone paddleboard sessions directly translate to surf paddle fitness while improving balance.</p>\n          \n          <h3>Pop-up Power and Agility</h3>\n          <p><strong>Burpees:</strong> The classic surf exercise combines the explosive push-up movement with the squat-to-stand motion of the pop-up.</p>\n          \n          <p><strong>Turkish Get-ups:</strong> Build the complex coordination and strength needed to move efficiently from prone to standing.</p>\n          \n          <p><strong>Balance Training:</strong> Indo boards, balance balls, and single-leg exercises improve proprioception and stability.</p>\n          \n          <h3>Flexibility and Mobility</h3>\n          <p><strong>Shoulder Mobility:</strong> Surfing demands extreme shoulder range of motion. Daily shoulder stretching prevents injury and improves performance.</p>\n          \n          <p><strong>Hip Flexibility:</strong> Open hips allow for better stance variety and turning power. Focus on hip flexors, glutes, and IT bands.</p>\n          \n          <p><strong>Thoracic Spine:</strong> Prolonged paddling can create upper back stiffness. Mobility work keeps your spine healthy and improves paddle stroke efficiency.</p>\n          \n          <h3>Breath Work</h3>\n          <p>Wipeouts happen. Practice breath holds and CO2 tolerance training, but always do breath work safely with supervision.</p>\n          \n          <p>The ocean will test every aspect of your fitness. Train specifically and consistently to maximize your time on the water.</p>\n        `,\n        category: \"surf\",\n        author: \"ChillVibes Surf Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Sustainable Surfing: Protecting the Oceans We Love\",\n        excerpt: \"How the surf community is leading environmental conservation efforts, from local beach cleanups to supporting ocean protection policies.\",\n        imageUrl: surfBackgrounds[2],\n        content: `\n          <h2>Guardians of the Ocean</h2>\n          <p>Surfers have a unique relationship with the ocean. We witness water quality changes, see plastic pollution firsthand, and depend on healthy marine ecosystems for our passion.</p>\n          \n          <h3>Individual Actions</h3>\n          <p><strong>Eco-Friendly Gear:</strong> Choose surfboards made with sustainable materials, reef-safe sunscreen, and wetsuits from companies with environmental commitments.</p>\n          \n          <p><strong>Beach Cleanup:</strong> Organize or join regular beach cleanups. Every piece of plastic removed prevents it from harming marine life.</p>\n          \n          <p><strong>Water Conservation:</strong> Use biodegradable soaps for wetsuit washing and consider installing low-flow shower heads for post-surf rinses.</p>\n          \n          <h3>Community Initiatives</h3>\n          <p><strong>Surfrider Foundation:</strong> Join local chapters working on beach access, water quality monitoring, and plastic pollution reduction.</p>\n          \n          <p><strong>Ocean Advocacy:</strong> Support organizations fighting climate change, marine protected areas, and sustainable fishing practices.</p>\n          \n          <p><strong>Education:</strong> Share knowledge about ocean conservation with other surfers, especially younger generations.</p>\n          \n          <h3>Policy and Systemic Change</h3>\n          <p>Individual actions matter, but systemic change requires policy intervention. Support candidates and legislation that prioritize ocean health and climate action.</p>\n          \n          <h3>The Economics of Conservation</h3>\n          <p>Surf tourism generates billions in economic activity. Healthy oceans and consistent waves are economic assets worth protecting through responsible travel and business practices.</p>\n          \n          <h3>Future Generations</h3>\n          <p>The waves we surf today may look very different due to climate change, sea level rise, and ocean acidification. Our actions now determine what future surfers will inherit.</p>\n          \n          <p>Being a surfer means being an ocean advocate. The stoke we feel riding waves should motivate us to protect the source of that joy.</p>\n        `,\n        category: \"surf\",\n        author: \"ChillVibes Surf Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  generateAllOriginalContent(): OriginalArticle[] {\n    return [\n      ...this.generateTechArticles(),\n      ...this.generateFinanceArticles(),\n      ...this.generateJiuJitsuArticles(),\n      ...this.generateSurfArticles()\n    ];\n  }\n\n  // Generate only 2-3 daily articles per category as requested\n  generateDailyOriginalContent(): OriginalArticle[] {\n    const techArticles = this.generateTechArticles();\n    const financeArticles = this.generateFinanceArticles();\n    const jiuJitsuArticles = this.generateJiuJitsuArticles();\n    const surfArticles = this.generateSurfArticles();\n\n    // Select 2-3 random articles from each category for daily content\n    const dailyTech = this.selectRandomArticles(techArticles, 3);\n    const dailyFinance = this.selectRandomArticles(financeArticles, 2);\n    const dailyJiuJitsu = this.selectRandomArticles(jiuJitsuArticles, 2);\n    const dailySurf = this.selectRandomArticles(surfArticles, 3);\n\n    return [\n      ...dailyTech,\n      ...dailyFinance,\n      ...dailyJiuJitsu,\n      ...dailySurf\n    ];\n  }\n\n  private selectRandomArticles(articles: OriginalArticle[], count: number): OriginalArticle[] {\n    const shuffled = [...articles].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, count);\n  }\n}\n\nexport const contentService = new ContentService();","size_bytes":31501},"server/databaseStorage.ts":{"content":"import { db } from \"./db\";\nimport { eq, desc, and, sql, lt } from \"drizzle-orm\";\nimport { \n  articles, \n  siteSettings, \n  comments, \n  authUsers as users,\n  type Article, \n  type InsertArticle, \n  type SiteSettings, \n  type InsertSiteSettings,\n  type Comment,\n  type InsertComment,\n  type User,\n  type UpsertUser\n} from \"@shared/schema\";\nimport type { IStorage } from \"./storage\";\n\nexport class DatabaseStorage implements IStorage {\n  // User operations\n  async getUser(id: string): Promise<User | undefined> {\n    const [user] = await db.select().from(users).where(eq(users.id, id));\n    return user;\n  }\n\n  async upsertUser(userData: UpsertUser): Promise<User> {\n    const [user] = await db\n      .insert(users)\n      .values(userData)\n      .onConflictDoUpdate({\n        target: users.id,\n        set: {\n          email: userData.email,\n          firstName: userData.firstName,\n          lastName: userData.lastName,\n          profileImageUrl: userData.profileImageUrl,\n          updatedAt: new Date(),\n        },\n      })\n      .returning();\n    return user;\n  }\n\n  // Article operations\n  async getArticles(category?: string, subcategory?: string): Promise<Article[]> {\n    const conditions = [];\n    if (category) {\n      conditions.push(eq(articles.category, category));\n    }\n    if (subcategory) {\n      conditions.push(eq(articles.subcategory, subcategory));\n    }\n    \n    if (conditions.length > 0) {\n      return db.select().from(articles).where(and(...conditions)).orderBy(desc(articles.createdAt));\n    }\n    \n    return db.select().from(articles).orderBy(desc(articles.createdAt));\n  }\n\n  async getArticle(id: string): Promise<Article | undefined> {\n    const [article] = await db.select().from(articles).where(eq(articles.id, id));\n    return article;\n  }\n\n  async createArticle(insertArticle: InsertArticle): Promise<Article> {\n    const [article] = await db\n      .insert(articles)\n      .values(insertArticle)\n      .returning();\n    return article;\n  }\n\n  async updateArticle(id: string, updates: Partial<InsertArticle>): Promise<Article | undefined> {\n    const [article] = await db\n      .update(articles)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(articles.id, id))\n      .returning();\n    return article;\n  }\n\n  async deleteArticle(id: string): Promise<boolean> {\n    const result = await db.delete(articles).where(eq(articles.id, id));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  async getFeaturedArticles(limit: number = 3): Promise<Article[]> {\n    return db\n      .select()\n      .from(articles)\n      .where(eq(articles.isDraft, false))\n      .orderBy(desc(articles.createdAt))\n      .limit(limit);\n  }\n\n  // Comment operations\n  async getComments(articleId: string): Promise<Comment[]> {\n    const result = await db\n      .select({\n        id: comments.id,\n        content: comments.content,\n        imageUrl: comments.imageUrl,\n        createdAt: comments.createdAt,\n        updatedAt: comments.updatedAt,\n        articleId: comments.articleId,\n        userId: comments.userId,\n        authorName: sql<string>`COALESCE(${users.firstName} || ' ' || ${users.lastName}, ${users.email})`.as('authorName'),\n        authorAvatar: users.profileImageUrl,\n      })\n      .from(comments)\n      .leftJoin(users, eq(comments.userId, users.id))\n      .where(eq(comments.articleId, articleId))\n      .orderBy(desc(comments.createdAt));\n    \n    return result;\n  }\n\n  async createComment(insertComment: InsertComment): Promise<Comment> {\n    const [comment] = await db\n      .insert(comments)\n      .values(insertComment)\n      .returning();\n    return comment;\n  }\n\n  async deleteComment(id: string, userId: string): Promise<boolean> {\n    const result = await db\n      .delete(comments)\n      .where(and(eq(comments.id, id), eq(comments.userId, userId)));\n    return (result.rowCount ?? 0) > 0;\n  }\n\n  // Site settings operations\n  async getSiteSettings(): Promise<SiteSettings> {\n    const [settings] = await db\n      .select()\n      .from(siteSettings)\n      .where(eq(siteSettings.id, \"site\"));\n    \n    if (!settings) {\n      // Create default settings if none exist\n      const [newSettings] = await db\n        .insert(siteSettings)\n        .values({\n          id: \"site\",\n          heroBackgroundUrl: \"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"\n        })\n        .returning();\n      return newSettings;\n    }\n    \n    return settings;\n  }\n\n  async updateSiteSettings(updates: Partial<InsertSiteSettings>): Promise<SiteSettings> {\n    const [settings] = await db\n      .update(siteSettings)\n      .set({ ...updates, updatedAt: new Date() })\n      .where(eq(siteSettings.id, \"site\"))\n      .returning();\n    return settings;\n  }\n\n  // News synchronization operations\n  async syncNewsArticles(newsArticles: Article[]): Promise<void> {\n    if (newsArticles.length === 0) return;\n\n    console.log(`Syncing ${newsArticles.length} news articles...`);\n    \n    // Insert new articles in batches to avoid overwhelming the database\n    const batchSize = 10;\n    for (let i = 0; i < newsArticles.length; i += batchSize) {\n      const batch = newsArticles.slice(i, i + batchSize);\n      \n      try {\n        await db.insert(articles).values(batch).onConflictDoUpdate({\n          target: articles.id,\n          set: {\n            title: sql`excluded.title`,\n            content: sql`excluded.content`,\n            excerpt: sql`excluded.excerpt`,\n            imageUrl: sql`excluded.image_url`,\n            updatedAt: new Date(),\n          },\n        });\n      } catch (error) {\n        console.error(`Error inserting news batch ${i / batchSize + 1}:`, error);\n      }\n    }\n\n    console.log(`Successfully synced ${newsArticles.length} news articles`);\n  }\n\n  async clearOldNewsArticles(): Promise<void> {\n    // Clear news articles older than 7 days to keep content fresh\n    const sevenDaysAgo = new Date();\n    sevenDaysAgo.setDate(sevenDaysAgo.getDate() - 7);\n\n    try {\n      const result = await db\n        .delete(articles)\n        .where(lt(articles.createdAt, sevenDaysAgo));\n      \n      console.log(`Cleared ${result.rowCount} old news articles`);\n    } catch (error) {\n      console.error(\"Error clearing old news articles:\", error);\n    }\n  }\n}","size_bytes":6268},"server/db.ts":{"content":"import { Pool, neonConfig } from '@neondatabase/serverless';\nimport { drizzle } from 'drizzle-orm/neon-serverless';\nimport ws from \"ws\";\nimport * as schema from \"@shared/schema\";\n\nneonConfig.webSocketConstructor = ws;\n\nif (!process.env.DATABASE_URL) {\n  throw new Error(\n    \"DATABASE_URL must be set. Did you forget to provision a database?\",\n  );\n}\n\nexport const pool = new Pool({ connectionString: process.env.DATABASE_URL });\nexport const db = drizzle({ client: pool, schema });","size_bytes":482},"server/enhancedContentService.ts":{"content":"import { nanoid } from \"nanoid\";\n\nexport interface OriginalArticle {\n  id: string;\n  title: string;\n  content: string;\n  excerpt: string;\n  category: \"tech\" | \"finance\" | \"jiu-jitsu\" | \"surf\";\n  subcategory?: string;\n  imageUrl?: string;\n  author: string;\n  isDraft: boolean;\n  isFeatured: boolean;\n  isRealtime: boolean;\n  sourceUrl?: string;\n  tags?: string[];\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nexport class EnhancedContentService {\n  private surfBackgrounds = [\n    \"https://images.unsplash.com/photo-1544551763-46a013bb70d5?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surfer with laptop\n    \"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Ocean waves\n    \"https://images.unsplash.com/photo-1505142468610-359e7d316be0?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surfboard on sand\n    \"https://images.unsplash.com/photo-1473116763249-2faaef81ccda?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Surf break\n    \"https://images.unsplash.com/photo-1544551763-77ef2d0cfc6c?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Beach lifestyle\n  ];\n\n  private snowboardingBackgrounds = [\n    \"https://images.unsplash.com/photo-1551698618-1dfe5d97d256?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Snowboarder action\n    \"https://images.unsplash.com/photo-1519315901367-f34ff9154487?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Mountain snowboarding\n    \"https://images.unsplash.com/photo-1418985991508-e47386d96a71?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Snow mountain peaks\n    \"https://images.unsplash.com/photo-1609099222661-615f749c62fa?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Snowboarder jumping\n    \"https://images.unsplash.com/photo-1470219556762-1771e7f9427d?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\", // Snow terrain\n  ];\n\n  constructor() {}\n\n  // Generate real-time news using external API (when available)\n  async fetchRealtimeNews(): Promise<OriginalArticle[]> {\n    if (!process.env.NEWS_API_KEY) {\n      return [];\n    }\n\n    try {\n      const categories = ['technology', 'business', 'sports'];\n      const realtimeArticles: OriginalArticle[] = [];\n\n      for (const apiCategory of categories) {\n        const response = await fetch(\n          `https://newsapi.org/v2/top-headlines?category=${apiCategory}&country=us&apiKey=${process.env.NEWS_API_KEY}&pageSize=5`\n        );\n\n        if (!response.ok) continue;\n\n        const data = await response.json();\n        \n        for (const article of data.articles.slice(0, 2)) {\n          if (!article.title || !article.description) continue;\n\n          const mappedCategory = this.mapApiCategoryToOur(apiCategory, article.title);\n          const subcategory = this.detectSubcategory(mappedCategory, article.title, article.description);\n\n          realtimeArticles.push({\n            id: nanoid(),\n            title: article.title,\n            excerpt: article.description,\n            content: this.generateExpandedContent(article.title, article.description, article.content),\n            category: mappedCategory,\n            subcategory,\n            imageUrl: this.getBackgroundForSubcategory(subcategory),\n            author: \"ChillVibes News\",\n            isDraft: false,\n            isFeatured: Math.random() > 0.8,\n            isRealtime: true,\n            sourceUrl: article.url,\n            tags: this.generateTags(mappedCategory, article.title),\n            createdAt: new Date(),\n            updatedAt: new Date(),\n          });\n        }\n      }\n\n      return realtimeArticles;\n    } catch (error) {\n      console.error('Error fetching real-time news:', error);\n      return [];\n    }\n  }\n\n  private mapApiCategoryToOur(apiCategory: string, title: string): \"tech\" | \"finance\" | \"jiu-jitsu\" | \"surf\" {\n    const lowerTitle = title.toLowerCase();\n    \n    if (lowerTitle.includes('crypto') || lowerTitle.includes('bitcoin') || \n        lowerTitle.includes('finance') || lowerTitle.includes('stock') ||\n        lowerTitle.includes('bank') || lowerTitle.includes('trading')) {\n      return 'finance';\n    }\n    \n    if (lowerTitle.includes('surf') || lowerTitle.includes('wave') || \n        lowerTitle.includes('ocean') || lowerTitle.includes('beach')) {\n      return 'surf';\n    }\n    \n    if (lowerTitle.includes('martial') || lowerTitle.includes('jiu-jitsu') || \n        lowerTitle.includes('bjj') || lowerTitle.includes('mma')) {\n      return 'jiu-jitsu';\n    }\n    \n    return 'tech'; // Default for technology category\n  }\n\n  private detectSubcategory(category: string, title: string, description: string): string | undefined {\n    const text = (title + ' ' + description).toLowerCase();\n    \n    switch (category) {\n      case 'tech':\n        if (text.includes('ai') || text.includes('artificial intelligence')) return 'ai';\n        if (text.includes('crypto') || text.includes('blockchain')) return 'blockchain';\n        if (text.includes('app') || text.includes('mobile')) return 'mobile';\n        return 'innovation';\n        \n      case 'finance':\n        if (text.includes('crypto') || text.includes('bitcoin')) return 'crypto';\n        if (text.includes('credit card') || text.includes('rewards')) return 'travel-rewards';\n        if (text.includes('hotel') || text.includes('airline')) return 'travel';\n        return 'markets';\n        \n      case 'jiu-jitsu':\n        if (text.includes('competition') || text.includes('tournament')) return 'competitions';\n        if (text.includes('gym') || text.includes('academy')) return 'gyms';\n        if (text.includes('athlete') || text.includes('fighter')) return 'athletes';\n        return 'training';\n        \n      case 'surf':\n        if (text.includes('snowboard') || text.includes('snow') || text.includes('mountain')) return 'snowboarding';\n        if (text.includes('yoga') || text.includes('mindfulness')) return 'yoga';\n        if (text.includes('competition') || text.includes('championship')) return 'competitions';\n        if (text.includes('destination') || text.includes('spot')) return 'destinations';\n        if (text.includes('board') || text.includes('gear')) return 'gear';\n        return 'forecasts';\n        \n      default:\n        return undefined;\n    }\n  }\n\n  private getBackgroundForSubcategory(subcategory?: string): string {\n    if (subcategory === 'snowboarding') {\n      return this.snowboardingBackgrounds[Math.floor(Math.random() * this.snowboardingBackgrounds.length)];\n    }\n    return this.surfBackgrounds[Math.floor(Math.random() * this.surfBackgrounds.length)];\n  }\n\n  private generateTags(category: string, title: string): string[] {\n    const commonTags = ['lifestyle', 'chill-vibes'];\n    const text = title.toLowerCase();\n    \n    switch (category) {\n      case 'tech':\n        if (text.includes('ai')) commonTags.push('artificial-intelligence');\n        if (text.includes('crypto')) commonTags.push('cryptocurrency', 'blockchain');\n        if (text.includes('app')) commonTags.push('mobile', 'apps');\n        commonTags.push('technology', 'innovation');\n        break;\n        \n      case 'finance':\n        if (text.includes('crypto')) commonTags.push('cryptocurrency');\n        if (text.includes('credit card')) commonTags.push('travel-rewards', 'points');\n        if (text.includes('stock')) commonTags.push('markets', 'trading');\n        commonTags.push('finance', 'money');\n        break;\n        \n      case 'jiu-jitsu':\n        commonTags.push('martial-arts', 'bjj', 'training', 'mindset');\n        break;\n        \n      case 'surf':\n        commonTags.push('surfing', 'ocean', 'waves', 'adventure');\n        break;\n    }\n    \n    return commonTags;\n  }\n\n  private generateExpandedContent(title: string, excerpt: string, originalContent?: string): string {\n    const intro = `<h2>${title}</h2><p>${excerpt}</p>`;\n    \n    if (originalContent && originalContent.length > 200) {\n      return intro + `<div class=\"content-body\">${originalContent}</div>`;\n    }\n    \n    // Generate lifestyle-focused content expansion\n    const lifestyleContent = `\n      <h3>ChillVibes Perspective</h3>\n      <p>At ChillVibes, we believe this story reflects the intersection of innovation and lifestyle. Whether you're catching waves at dawn or analyzing market trends over coffee, staying informed is part of living the balanced life.</p>\n      \n      <h3>Community Impact</h3>\n      <p>This development resonates with our community's focus on mindful achievement and conscious living. It's about finding opportunities that align with both personal growth and lifestyle values.</p>\n      \n      <p><em>Stay tuned for more updates as this story develops, and share your thoughts in the comments below.</em></p>\n    `;\n    \n    return intro + lifestyleContent;\n  }\n\n  // Enhanced original content with subcategories\n  generateComprehensiveOriginalContent(): OriginalArticle[] {\n    return [\n      ...this.generateTechArticles(),\n      ...this.generateFinanceArticles(), \n      ...this.generateJiuJitsuArticles(),\n      ...this.generateSurfArticles()\n    ];\n  }\n\n  private generateTechArticles(): OriginalArticle[] {\n    return [\n      {\n        id: nanoid(),\n        title: \"Web3 Gaming: The Future of Digital Ownership\",\n        excerpt: \"How blockchain technology is revolutionizing gaming economies and player ownership.\",\n        subcategory: \"blockchain\",\n        content: `\n          <h2>The Gaming Revolution</h2>\n          <p>Web3 gaming represents a fundamental shift from traditional gaming models to player-owned economies where digital assets have real value.</p>\n          \n          <h3>True Digital Ownership</h3>\n          <p>Unlike traditional games where items are locked to platforms, Web3 games use NFTs to represent in-game assets that players truly own and can trade across different games and platforms.</p>\n          \n          <h3>Play-to-Earn Economics</h3>\n          <p>Players can now earn cryptocurrency and valuable NFTs through gameplay, creating new economic opportunities in virtual worlds.</p>\n          \n          <p>The intersection of gaming and lifestyle is becoming more apparent as virtual worlds offer spaces for both entertainment and entrepreneurship.</p>\n        `,\n        imageUrl: this.surfBackgrounds[0],\n        category: \"tech\",\n        author: \"ChillVibes Tech Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"web3\", \"gaming\", \"blockchain\", \"nft\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"AI-Powered Personal Finance: Your Digital Money Coach\",\n        excerpt: \"How artificial intelligence is making sophisticated financial planning accessible to everyone.\",\n        subcategory: \"ai\",\n        content: `\n          <h2>Smart Money Management</h2>\n          <p>AI is democratizing financial planning, bringing sophisticated analysis and personalized recommendations to everyday money management.</p>\n          \n          <h3>Automated Insights</h3>\n          <p>Modern AI apps analyze spending patterns, identify savings opportunities, and provide personalized investment recommendations based on your lifestyle and goals.</p>\n          \n          <h3>Real-Time Optimization</h3>\n          <p>From credit score monitoring to investment rebalancing, AI systems work 24/7 to optimize your financial health while you focus on living your best life.</p>\n        `,\n        imageUrl: this.surfBackgrounds[1],\n        category: \"tech\",\n        author: \"ChillVibes Tech Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"ai\", \"fintech\", \"personal-finance\", \"automation\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  private generateFinanceArticles(): OriginalArticle[] {\n    return [\n      {\n        id: nanoid(),\n        title: \"September 2025: The Best Travel Credit Card Bonuses Ever Offered\",\n        excerpt: \"September 2025 features record-breaking travel credit card bonuses, with the Chase Sapphire Reserve offering its best-ever 125,000 points plus $500 credit, and new cards like Citi Strata Elite providing unprecedented value.\",\n        subcategory: \"travel-rewards\",\n        content: `\n          <h2>🔥 Record-Breaking Welcome Bonuses This Month</h2>\n          <p>September 2025 is shaping up to be one of the most competitive months ever for travel credit card bonuses. Credit card companies are offering unprecedented welcome bonuses, with some reaching the highest values we've ever seen. If you've been waiting for the right time to apply for a premium travel card, now might be your moment.</p>\n          \n          <h3>Top Premium Cards Leading the Charge</h3>\n          <p><strong>Chase Sapphire Reserve</strong> has completely overhauled their offer, now providing 125,000 points plus a $500 travel credit after spending $6,000 in the first three months. With the new annual fee of $795, the card offers up to $2,700 in annual value through various credits and benefits. This represents the best-ever welcome bonus from this prestigious card.</p>\n          <p><strong>Citi Strata Elite</strong>, Citi's newest premium offering, is making a splash with 190,000 points after $6,000 spend in six months. At a $595 annual fee, this card includes American Airlines transfer partnership and represents exceptional value at roughly $1,520 in bonus value.</p>\n          <p><strong>Capital One Venture X</strong> continues to offer solid value with 75,000 miles after $4,000 spend, plus a $300 annual travel credit that helps offset the $395 annual fee, bringing total annual value to $1,388.</p>\n          \n          <h2>💰 Limited-Time Opportunities Ending Soon</h2>\n          <p>Several cards are offering enhanced bonuses that won't last much longer. <strong>Chase Business Cards</strong> are currently offering $900 bonuses - both the Ink Business Cash and Ink Business Unlimited provide this after $6,000 spend in three months. The beauty of these business cards is they can transfer points to travel partners when paired with a personal Sapphire card.</p>\n          <p><strong>Marriott Bonvoy cards</strong> have elevated offers ending September 24, 2025. The Bonvoy Bevy offers 155,000 points after $5,000 spend, while the Bonvoy Brilliant provides 185,000 points after $6,000 spend - representing roughly $1,850 in hotel value.</p>\n          \n          <h2>📈 Strategic Approach by Spend Level</h2>\n          <h3>High Spenders ($6,000+ in 3-6 months)</h3>\n          <p>If you can comfortably meet higher spending requirements, the premium cards offer the best value. The Chase Sapphire Reserve's 125,000 points plus $500 credit, or the Citi Strata Elite's 190,000 points, provide outsized returns on your spending.</p>\n          \n          <h3>Moderate Spenders ($4,000-5,000 in 3 months)</h3>\n          <p>The <strong>Chase Sapphire Preferred</strong> (75,000 points after $5,000 spend, $95 fee) and <strong>Capital One Venture</strong> (75,000 miles after $4,000 spend, $95 fee) offer excellent mid-tier options without the hefty premium annual fees.</p>\n          \n          <h3>Conservative Spenders (Under $4,000)</h3>\n          <p>The <strong>Bank of America Travel Rewards</strong> card offers 60,000 points after $4,000 spend with no annual fee, while the <strong>Chase Freedom Unlimited</strong> provides 20,000 points with easier spending requirements.</p>\n          \n          <h2>⚡ Action Plan for Maximum Value</h2>\n          <p><strong>Timing is Everything</strong> - Many current offers are temporary and could end without notice. The elevated Chase Sapphire Reserve bonus and Marriott offers specifically have end dates approaching.</p>\n          <p><strong>Spending Strategy</strong> - Plan major purchases around application timing. Most bonuses require $4,000-$6,000 spending in 3-6 months, so coordinate with upcoming expenses like home improvements, business expenses, or holiday spending.</p>\n          <p><strong>Application Rules</strong> - Remember Chase's 5/24 rule (no more than 5 cards opened in 24 months) and similar restrictions from other issuers. Apply for the most valuable cards first when you're under these limits.</p>\n          \n          <h2>The Bottom Line</h2>\n          <p>September 2025 represents a golden opportunity for travel rewards enthusiasts. With some of the highest welcome bonuses ever offered, competitive annual fee structures, and expanding benefits, the current market heavily favors consumers. However, these elevated offers won't last forever - credit card bonuses historically cycle up and down based on market conditions and competition.</p>\n          <p>Whether you're a travel rewards veteran or just starting your journey, the current landscape offers options at every spending level and risk tolerance. The key is matching your spending capacity with the right card offer and acting before these historic bonuses disappear.</p>\n        `,\n        imageUrl: this.surfBackgrounds[2],\n        category: \"finance\",\n        author: \"ChillVibes Editorial\",\n        isDraft: false,\n        isFeatured: true,\n        isRealtime: false,\n        tags: [\"credit cards\", \"travel rewards\", \"points\", \"welcome bonuses\", \"chase sapphire\", \"citi\", \"capital one\", \"travel hacking\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Fed Rate Cuts Drive Markets to Record Highs: What It Means for Your Portfolio\",\n        excerpt: \"The Federal Reserve's latest quarter-point rate cut has sent markets soaring to all-time highs, but analysts warn of potential headwinds ahead as economic data shows mixed signals.\",\n        subcategory: \"markets\",\n        content: `\n          <h2>Markets Celebrate Fed's Dovish Turn</h2>\n          <p>The Federal Reserve delivered a widely expected 25 basis point rate cut in September 2025, lowering the benchmark rate to 4%-4.25%. According to <strong>CNBC</strong>, this move sent stocks to record highs, with the S&P 500 closing up 0.48% at 6,631.96 and the Nasdaq jumping 0.94% to 22,470.73.</p>\n          \n          <h3>The Rally That Keeps Going</h3>\n          <p><strong>Bloomberg</strong> reports that markets have rallied an impressive $15 trillion from April 2025 lows, with AI sector momentum particularly strong. Nvidia continues to lead the charge after announcing a potential $100 billion OpenAI investment, highlighting the continued appetite for artificial intelligence plays.</p>\n          \n          <h3>Mixed Economic Signals</h3>\n          <p>While markets celebrate, the underlying economic data tells a more complex story. <strong>CNBC</strong> notes that the economy added just 22,000 jobs in August, well below the 75,000 economists expected. This labor market cooling is exactly what the Fed wanted to see to justify rate cuts, but it raises questions about economic momentum.</p>\n          \n          <h3>Global Growth Upgrade</h3>\n          <p>In a positive development, the OECD upgraded its global economic growth forecast, now expecting 3.2% growth this year compared to the previous 2.9% forecast. As reported by <strong>CNBC</strong>, inflation expectations for the U.S. were also revised down to 2.7% in 2025, providing more room for Fed policy flexibility.</p>\n          \n          <h3>Investment Strategy for the ChillVibes Community</h3>\n          <p>For lifestyle-focused investors, this environment presents both opportunities and risks. The rate cut cycle supports growth assets and risk-taking, perfect for funding adventure pursuits. However, with markets at all-time highs, maintaining some cash reserves for future opportunities makes sense.</p>\n          \n          <p><em>Sources: CNBC Markets, Bloomberg Terminal</em></p>\n        `,\n        imageUrl: this.surfBackgrounds[3],\n        category: \"finance\",\n        author: \"ChillVibes Editorial\",\n        isDraft: false,\n        isFeatured: true,\n        isRealtime: true,\n        sourceUrl: \"https://www.cnbc.com/2025/09/16/stock-market-today-live-updates.html\",\n        tags: [\"federal reserve\", \"interest rates\", \"stock market\", \"investing\", \"economic outlook\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Gold Hits 37th Record High in 2025: Alternative Assets in a Rate-Cut World\",\n        excerpt: \"With gold up over 44% year-to-date and hitting fresh all-time highs, alternative investments are proving their worth as traditional bonds lose their appeal in a falling rate environment.\",\n        subcategory: \"markets\",\n        content: `\n          <h2>The Golden Opportunity</h2>\n          <p>Gold reached a fresh intraday all-time high of $3,824.60 on Tuesday, marking its 37th record close in 2025, according to <strong>CNBC</strong>. With the precious metal already up more than 44% year-to-date, it's becoming clear that alternative assets are having their moment in the spotlight.</p>\n          \n          <h3>Why Gold is Glittering</h3>\n          <p>The Federal Reserve's rate-cutting cycle has made non-yielding assets like gold more attractive. When interest rates fall, the opportunity cost of holding gold decreases, making it a compelling store of value. <strong>Bloomberg</strong> data shows consistent institutional buying as investors seek hedges against potential inflation and currency debasement.</p>\n          \n          <h3>Beyond Traditional Portfolios</h3>\n          <p>For the ChillVibes community, diversification beyond stocks and bonds aligns perfectly with an adventurous lifestyle. Alternative investments like gold, real estate, and even collectibles can provide portfolio stability while you're out exploring the world.</p>\n          \n          <h3>Crypto's Continued Evolution</h3>\n          <p>While gold shines, cryptocurrency markets are showing maturation. The rate cut environment that benefits gold also supports risk assets like Bitcoin, though volatility remains a consideration for lifestyle investors who prioritize stability over maximum returns.</p>\n          \n          <h3>Practical Implementation</h3>\n          <p>Consider allocating 5-10% of your portfolio to alternative assets. Gold ETFs offer easy access without storage concerns, while physical gold provides the ultimate hedge. For digital nomads and adventure seekers, liquid alternatives that don't require physical custody often make the most sense.</p>\n          \n          <p><em>Sources: CNBC Markets, Bloomberg Commodity Desk</em></p>\n        `,\n        imageUrl: this.surfBackgrounds[1],\n        category: \"finance\",\n        author: \"ChillVibes Editorial\",\n        isDraft: false,\n        isFeatured: false,\n        isRealtime: true,\n        sourceUrl: \"https://www.cnbc.com/\",\n        tags: [\"gold\", \"alternative investments\", \"portfolio diversification\", \"commodities\", \"inflation hedge\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Labor Market Cooling: What September's Jobs Data Means for Young Professionals\",\n        excerpt: \"August's disappointing jobs report showing just 22,000 new positions signals a shifting labor market that could impact career strategies for adventure-seeking professionals.\",\n        subcategory: \"markets\",\n        content: `\n          <h2>The Great Deceleration</h2>\n          <p>The Bureau of Labor Statistics delivered a reality check in September, reporting that the economy added just 22,000 jobs in August—significantly below the 75,000 economists polled by <strong>CNBC</strong> had expected. This dramatic slowdown in hiring is reshaping how young professionals should think about career strategy.</p>\n          \n          <h3>Seasonal Hiring Hits Historic Lows</h3>\n          <p>Perhaps most concerning for the lifestyle-focused workforce, <strong>CNBC</strong> reports that seasonal retail hiring is expected to fall to its lowest level since 2009. This signals potential trouble for the upcoming holidays and reflects broader challenges in the job market that could impact flexible work arrangements.</p>\n          \n          <h3>The Stuck Worker Phenomenon</h3>\n          <p>American workers are increasingly feeling stuck in their jobs, a trend that <strong>CNBC</strong> suggests may be costing both individuals and the broader economy. For the ChillVibes community that values flexibility and adventure, this presents both challenges and opportunities.</p>\n          \n          <h3>Strategic Career Moves in a Cooling Market</h3>\n          <p>In this environment, building multiple income streams becomes even more critical. The combination of remote work capabilities and entrepreneurial thinking can provide the flexibility to pursue adventures while maintaining financial stability.</p>\n          \n          <h3>Federal Reserve Response</h3>\n          <p>The cooling labor market is exactly what Fed Chair Jerome Powell needed to see to justify continued rate cuts. <strong>Bloomberg</strong> analysis suggests this could create a more favorable environment for starting businesses or pursuing passion projects, as borrowing costs continue to decline.</p>\n          \n          <h3>Opportunity in Uncertainty</h3>\n          <p>While traditional employment may be tightening, the gig economy and location-independent work continue to grow. For those willing to adapt, a cooling labor market often creates opportunities for innovative career paths that align with adventure-seeking lifestyles.</p>\n          \n          <p><em>Sources: Bureau of Labor Statistics via CNBC, Bloomberg Economics</em></p>\n        `,\n        imageUrl: this.surfBackgrounds[4],\n        category: \"finance\",\n        author: \"ChillVibes Editorial\",\n        isDraft: false,\n        isFeatured: false,\n        isRealtime: true,\n        sourceUrl: \"https://www.cnbc.com/2025/09/04/stock-market-today-live-updates-.html\",\n        tags: [\"jobs report\", \"labor market\", \"career strategy\", \"employment trends\", \"economic data\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  private generateJiuJitsuArticles(): OriginalArticle[] {\n    return [\n      {\n        id: nanoid(),\n        title: \"Mental Flow States: From Jiu-Jitsu Mats to Life Success\",\n        excerpt: \"How martial arts training develops the mindset for peak performance in all areas of life.\",\n        subcategory: \"mindset\",\n        content: `\n          <h2>The Art of Mental Resilience</h2>\n          <p>Jiu-Jitsu teaches more than physical techniques—it develops mental frameworks that translate to success in business, relationships, and personal growth.</p>\n          \n          <h3>Embracing Discomfort</h3>\n          <p>Regular training in uncomfortable positions builds tolerance for challenge and uncertainty, essential skills for entrepreneurship and innovation.</p>\n          \n          <h3>Problem-Solving Under Pressure</h3>\n          <p>Every roll is a chess match requiring real-time problem-solving while managing physical and mental pressure—skills that directly transfer to high-stakes decision making.</p>\n          \n          <h3>Ego Management</h3>\n          <p>Being humbled on the mats regularly teaches the importance of beginner's mind and continuous learning, crucial for personal and professional development.</p>\n        `,\n        imageUrl: this.surfBackgrounds[4],\n        category: \"jiu-jitsu\",\n        author: \"ChillVibes Jiu-Jitsu Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"mindset\", \"flow-state\", \"mental-training\", \"performance\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Top Jiu-Jitsu Destinations: Training Around the World\",\n        excerpt: \"Epic academies and training camps in surf towns and mountain destinations worldwide.\",\n        subcategory: \"destinations\",\n        content: `\n          <h2>Train Where Paradise Meets Performance</h2>\n          <p>Combine your passion for jiu-jitsu with incredible destinations. These academies offer world-class training in lifestyle-focused locations.</p>\n          \n          <h3>Costa Rica: Dominical BJJ</h3>\n          <p>Morning training sessions followed by world-class surfing. This academy perfectly embodies the ChillVibes lifestyle of balancing intense training with natural beauty.</p>\n          \n          <h3>Brazil: Rio de Janeiro</h3>\n          <p>Train at the source with legendary instructors, then enjoy the beach culture and vibrant lifestyle that Brazil offers.</p>\n          \n          <h3>Portugal: Lisbon and Ericeira</h3>\n          <p>Europe's growing jiu-jitsu scene meets incredible surf breaks and affordable living costs.</p>\n        `,\n        imageUrl: this.surfBackgrounds[0],\n        category: \"jiu-jitsu\",\n        author: \"ChillVibes Jiu-Jitsu Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"travel\", \"training-destinations\", \"lifestyle\", \"academies\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  private generateSurfArticles(): OriginalArticle[] {\n    return [\n      {\n        id: nanoid(),\n        title: \"Surf Yoga: Finding Balance Between Wave Riding and Inner Peace\",\n        excerpt: \"How yoga practice enhances surfing performance, prevents injuries, and deepens the connection between mind, body, and ocean.\",\n        subcategory: \"yoga\",\n        content: `\n          <h2>The Perfect Complement to Wave Riding</h2>\n          <p>Yoga and surfing share a deep connection—both practices emphasize breath control, balance, flexibility, and mindful presence. For surfers, yoga isn't just cross-training; it's a pathway to better surfing and a more harmonious relationship with the ocean.</p>\n          \n          <h3>Surf-Specific Yoga Benefits</h3>\n          <p><strong>Enhanced Flexibility:</strong> Yoga opens up tight hips, shoulders, and back muscles that surfing can compress. Poses like pigeon, downward dog, and cobra directly improve your pop-up and maneuverability on the board.</p>\n          <p><strong>Core Strength & Balance:</strong> Standing balance poses and core-focused flows build the stability needed for riding waves. Warrior sequences and boat pose translate directly to maintaining position on your board.</p>\n          <p><strong>Breath Awareness:</strong> Pranayama breathing techniques teach you to stay calm during hold-downs and manage energy during long sessions. Learning to control your breath in yoga helps you handle ocean stress.</p>\n          \n          <h3>Injury Prevention & Recovery</h3>\n          <p>Surfing puts repetitive stress on shoulders, lower back, and knees. A consistent yoga practice addresses these vulnerable areas through gentle strengthening and deep stretching. Yin yoga and restorative poses accelerate recovery between surf sessions.</p>\n          \n          <h3>Mindfulness on the Water</h3>\n          <p>Yoga's meditation practices enhance wave reading and ocean awareness. The same present-moment focus you cultivate on the mat helps you read sets, position yourself perfectly, and flow with the ocean's rhythm rather than fighting it.</p>\n          \n          <h3>Surf Yoga Routines</h3>\n          <p><strong>Pre-Surf Flow (15 minutes):</strong> Sun salutations, hip openers, spinal twists, and shoulder rolls to warm up the body and prepare for paddling.</p>\n          <p><strong>Post-Surf Recovery (20 minutes):</strong> Gentle forward folds, pigeon pose, legs-up-the-wall, and savasana to release tension and restore energy.</p>\n          \n          <h3>Beachside Yoga Communities</h3>\n          <p>Surf destinations worldwide now offer sunrise yoga sessions on the beach, combining practice with ocean views. From Bali to Costa Rica, Portugal to Byron Bay, surf yoga retreats create spaces where wave riders can deepen both practices simultaneously.</p>\n          \n          <h2>The Lifestyle Connection</h2>\n          <p>For the ChillVibes community, yoga and surfing together represent the ultimate lifestyle balance—the active pursuit of waves combined with the inner cultivation of peace. Both teach us to flow with forces beyond our control, find stillness amid movement, and respect the power of nature.</p>\n          <p>Whether you're holding a tree pose at dawn before paddling out, or practicing beach yoga between sessions, integrating these disciplines creates a holistic approach to ocean living that nurtures body, mind, and spirit.</p>\n        `,\n        imageUrl: this.surfBackgrounds[3],\n        category: \"surf\",\n        author: \"ChillVibes Wellness Team\",\n        isDraft: false,\n        isFeatured: true,\n        isRealtime: false,\n        tags: [\"yoga\", \"surf-yoga\", \"flexibility\", \"mindfulness\", \"injury-prevention\", \"wellness\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"Sustainable Surfing: Ocean Conservation Meets Wave Riding\",\n        excerpt: \"How the surf community is leading environmental conservation efforts while pursuing their passion.\",\n        subcategory: \"conservation\",\n        content: `\n          <h2>Protecting Our Playground</h2>\n          <p>Surfers have always been ocean guardians, and today's community is pioneering innovative conservation efforts to protect the waves and waters we love.</p>\n          \n          <h3>Eco-Friendly Surfboard Innovation</h3>\n          <p>From recycled foam cores to bio-based resins, surfboard manufacturers are developing sustainable alternatives to traditional toxic materials.</p>\n          \n          <h3>Beach Cleanup Technology</h3>\n          <p>Apps now coordinate cleanup efforts, track pollution data, and gamify environmental action, making conservation accessible and engaging for the next generation.</p>\n          \n          <h3>Carbon-Neutral Surf Travel</h3>\n          <p>Surf tourism is evolving with carbon offset programs and eco-lodges that minimize environmental impact while maximizing stoke.</p>\n        `,\n        imageUrl: this.surfBackgrounds[1],\n        category: \"surf\",\n        author: \"ChillVibes Surf Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"conservation\", \"sustainability\", \"environment\", \"eco-surfing\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"AI Wave Forecasting: The Future of Surf Prediction\",\n        excerpt: \"How machine learning is revolutionizing surf forecasting accuracy and helping surfers score perfect sessions.\",\n        subcategory: \"forecasting\",\n        content: `\n          <h2>Precision Wave Prediction</h2>\n          <p>Artificial intelligence is transforming surf forecasting from educated guessing to precise science, helping surfers optimize their time in the water.</p>\n          \n          <h3>Machine Learning Models</h3>\n          <p>AI systems analyze vast datasets including wind patterns, swell directions, tidal influences, and bathymetry to predict wave quality with unprecedented accuracy.</p>\n          \n          <h3>Real-Time Optimization</h3>\n          <p>Smart algorithms now provide hour-by-hour predictions, helping surfers time their sessions for optimal conditions and avoid blown-out or flat periods.</p>\n          \n          <h3>Crowd Prediction</h3>\n          <p>Advanced models even predict lineup crowds, helping surfers find less crowded alternatives for better sessions.</p>\n        `,\n        imageUrl: this.surfBackgrounds[2],\n        category: \"surf\",\n        author: \"ChillVibes Surf Team\",\n        isDraft: false,\n        isFeatured: Math.random() > 0.7,\n        isRealtime: false,\n        tags: [\"forecasting\", \"ai\", \"wave-prediction\", \"technology\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      },\n      {\n        id: nanoid(),\n        title: \"2024-25 Snowboarding Season: Top Destinations, Latest Gear, and Must-Watch Athletes\",\n        excerpt: \"Your complete guide to this winter's best snowboarding destinations, cutting-edge equipment, and the athletes shaping the sport's future.\",\n        subcategory: \"snowboarding\",\n        content: `\n          <h2>Epic Winter Awaits: The Ultimate Snowboarding Season Preview</h2>\n          <p>As the 2024-25 winter season approaches, snowboarders worldwide are gearing up for epic powder days, fresh terrain, and groundbreaking competition events. Whether you're a backcountry explorer, park rider, or freerider, this season brings exciting developments across destinations, gear innovation, and athlete performances.</p>\n          \n          <h3>🏔️ Top Snowboarding Destinations for 2024-25</h3>\n          \n          <h4>North America: Powder Paradise</h4>\n          <p><strong>Jackson Hole, Wyoming:</strong> Known for its legendary steep terrain and deep powder, Jackson Hole remains a mecca for advanced riders. This season brings new backcountry access points and improved lift infrastructure. Expect classic Jackson conditions with 400+ inches of annual snowfall.</p>\n          \n          <p><strong>Whistler Blackcomb, British Columbia:</strong> The largest ski resort in North America continues to innovate with expanded terrain parks and backcountry zones. Peak season runs December through March, with legendary coastal snowfall creating world-class riding conditions.</p>\n          \n          <p><strong>Mammoth Mountain, California:</strong> California's premier destination offers riding well into June. New terrain expansions and improved snowmaking technology ensure consistent conditions throughout the extended season.</p>\n          \n          <h4>Europe: Alpine Excellence</h4>\n          <p><strong>Chamonix, France:</strong> The birthplace of extreme skiing and snowboarding offers unparalleled big-mountain terrain. This season features new freeride zones and improved access to iconic descents like the Vallée Blanche.</p>\n          \n          <p><strong>Laax, Switzerland:</strong> Europe's premier freestyle destination boasts one of the world's best terrain parks. The LAAX OPEN competition (January 2025) will showcase cutting-edge park riding and halfpipe progression.</p>\n          \n          <h4>Japan: Powder Heaven</h4>\n          <p><strong>Niseko, Hokkaido:</strong> Legendary for its consistent, dry powder snow (averaging 15 meters annually), Niseko remains the ultimate powder destination. This season brings new terrain access and improved infrastructure for international visitors.</p>\n          \n          <p><strong>Hakuba Valley:</strong> Host to Olympic events, Hakuba combines world-class terrain with authentic Japanese culture. Multiple resorts connected by the valley offer diverse riding for all levels.</p>\n          \n          <h3>🛹 2024-25 Gear Innovations: What's New</h3>\n          \n          <h4>Boards: Technology Meets Performance</h4>\n          <p><strong>Burton Custom X 2025:</strong> The legendary all-mountain board receives updates with new carbon layup technology for improved response and reduced weight. Perfect for riders seeking versatility across all terrain.</p>\n          \n          <p><strong>Jones Flagship 2025:</strong> Features sustainable materials with bamboo-powered construction and recycled edges. This freeride-focused board combines environmental consciousness with high performance.</p>\n          \n          <p><strong>Ride Algorhythm 2025:</strong> Revolutionary asymmetric design optimizes edge control for natural riding stance. Perfect for carving enthusiasts seeking precision on groomed terrain.</p>\n          \n          <h4>Boots and Bindings: Comfort Revolution</h4>\n          <p><strong>Thirty Two TM-3 2025:</strong> Heat-moldable liners and improved heel hold systems deliver custom comfort from day one. BOA lacing systems provide micro-adjustability for perfect fit.</p>\n          \n          <p><strong>Union Strata 2025:</strong> Lighter construction without sacrificing durability, featuring new baseplate geometry for improved energy transfer and response.</p>\n          \n          <h4>Outerwear: Performance Meets Style</h4>\n          <p><strong>Arc'teryx Sabre AR Jacket:</strong> Gore-Tex Pro construction with helmet-compatible hoods and strategic ventilation. Built for backcountry missions and resort shredding alike.</p>\n          \n          <p><strong>Volcom L Gore-Tex Jacket:</strong> Eco-friendly construction with recycled materials and V-Science technology. Stylish design meets technical performance.</p>\n          \n          <h4>Safety and Tech</h4>\n          <p><strong>Avalanche Safety:</strong> New BCA Tracker4 beacon offers improved range and faster search times. Paired with lightweight carbon probes and shovels, backcountry safety continues to advance.</p>\n          \n          <p><strong>Action Cameras:</strong> GoPro Hero 12 with improved stabilization and battery life captures every powder turn in stunning 5.3K resolution.</p>\n          \n          <h3>🏆 Athletes to Watch: The Next Generation</h3>\n          \n          <h4>Olympic Hopefuls and Competition Stars</h4>\n          <p><strong>Zoi Sadowski-Synnott (New Zealand):</strong> Olympic gold medalist and X Games champion continues to push women's big air and slopestyle progression. Watch for her at the 2025 World Championships.</p>\n          \n          <p><strong>Marcus Kleveland (Norway):</strong> Known for his innovative trick selection and fearless approach, Kleveland remains at the forefront of competitive slopestyle and big air riding.</p>\n          \n          <p><strong>Chloe Kim (USA):</strong> The halfpipe legend continues her dominance while exploring backcountry terrain. Her influence extends beyond competition into snowboarding culture and progression.</p>\n          \n          <h4>Freeride Legends</h4>\n          <p><strong>Travis Rice:</strong> The godfather of modern freeriding continues pushing big-mountain boundaries. His latest film projects showcase cutting-edge backcountry lines and creative riding.</p>\n          \n          <p><strong>Marie-France Roy:</strong> A pioneer in women's freeriding, Roy's artistic approach to snowboarding and environmental advocacy inspire the next generation of riders.</p>\n          \n          <h3>📅 Key Events for 2024-25 Season</h3>\n          <p><strong>December 2024:</strong> Dew Tour Copper Mountain kicks off the competition season with slopestyle and superpipe events featuring top athletes.</p>\n          \n          <p><strong>January 2025:</strong> X Games Aspen showcases the world's best in big air, slopestyle, and superpipe. LAAX OPEN in Switzerland highlights European progression.</p>\n          \n          <p><strong>February 2025:</strong> FIS World Championships in Switzerland crowns world champions across multiple disciplines.</p>\n          \n          <p><strong>March 2025:</strong> Natural Selection Tour brings freeride competition to Alaska, Canada, and beyond, showcasing big-mountain riding at its finest.</p>\n          \n          <h3>The ChillVibes Snowboarding Lifestyle</h3>\n          <p>For our community, snowboarding represents more than sport—it's a lifestyle that embodies flow, progression, and mountain culture. Whether you're chasing powder in Japan, lapping the park in Switzerland, or exploring backcountry lines in the Rockies, this season offers endless opportunities to find your rhythm on snow.</p>\n          \n          <p>The intersection of surf and snow cultures continues to strengthen, with many riders splitting time between ocean waves and mountain powder. This dual lifestyle creates a year-round flow state, connecting us to nature's most powerful forces while maintaining that essential chill vibe.</p>\n          \n          <p><em>Stay tuned for season updates, gear reviews, and destination guides as winter unfolds. Drop in, stay low, and keep it chill.</em></p>\n        `,\n        imageUrl: this.snowboardingBackgrounds[0],\n        category: \"surf\",\n        author: \"ChillVibes Snow Team\",\n        isDraft: false,\n        isFeatured: true,\n        isRealtime: false,\n        tags: [\"snowboarding\", \"winter-sports\", \"mountains\", \"gear\", \"destinations\", \"athletes\"],\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      }\n    ];\n  }\n\n  // Comprehensive content generation combining both original and real-time\n  async generateDailyContent(): Promise<OriginalArticle[]> {\n    try {\n      const [originalContent, realtimeContent] = await Promise.all([\n        Promise.resolve(this.generateComprehensiveOriginalContent()),\n        this.fetchRealtimeNews()\n      ]);\n\n      // Combine and balance content (2-3 articles per category)\n      const allContent = [...originalContent, ...realtimeContent];\n      \n      // Ensure balanced distribution\n      const balancedContent: OriginalArticle[] = [];\n      const categories = ['tech', 'finance', 'jiu-jitsu', 'surf'] as const;\n      \n      categories.forEach(category => {\n        const categoryArticles = allContent.filter(a => a.category === category);\n        // Take 2-3 random articles per category\n        const count = Math.max(2, Math.min(3, categoryArticles.length));\n        balancedContent.push(...categoryArticles.slice(0, count));\n      });\n\n      return balancedContent;\n    } catch (error) {\n      console.error('Error generating daily content:', error);\n      // Fallback to original content only\n      return this.generateComprehensiveOriginalContent();\n    }\n  }\n}\n\nexport const enhancedContentService = new EnhancedContentService();","size_bytes":45748},"server/index.ts":{"content":"import express, { type Request, Response, NextFunction } from \"express\";\nimport { registerRoutes } from \"./routes\";\nimport { setupVite, serveStatic, log } from \"./vite\";\n\nconst app = express();\napp.use(express.json());\napp.use(express.urlencoded({ extended: false }));\n\napp.use((req, res, next) => {\n  const start = Date.now();\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on(\"finish\", () => {\n    const duration = Date.now() - start;\n    if (path.startsWith(\"/api\")) {\n      let logLine = `${req.method} ${path} ${res.statusCode} in ${duration}ms`;\n      if (capturedJsonResponse) {\n        logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n      }\n\n      if (logLine.length > 80) {\n        logLine = logLine.slice(0, 79) + \"…\";\n      }\n\n      log(logLine);\n    }\n  });\n\n  next();\n});\n\n(async () => {\n  const server = await registerRoutes(app);\n\n  app.use((err: any, _req: Request, res: Response, _next: NextFunction) => {\n    const status = err.status || err.statusCode || 500;\n    const message = err.message || \"Internal Server Error\";\n\n    res.status(status).json({ message });\n    throw err;\n  });\n\n  // importantly only setup vite in development and after\n  // setting up all the other routes so the catch-all route\n  // doesn't interfere with the other routes\n  if (app.get(\"env\") === \"development\") {\n    await setupVite(app, server);\n  } else {\n    serveStatic(app);\n  }\n\n  // ALWAYS serve the app on the port specified in the environment variable PORT\n  // Other ports are firewalled. Default to 5000 if not specified.\n  // this serves both the API and the client.\n  // It is the only port that is not firewalled.\n  const port = parseInt(process.env.PORT || '5000', 10);\n  server.listen({\n    port,\n    host: \"0.0.0.0\",\n    reusePort: true,\n  }, () => {\n    log(`serving on port ${port}`);\n  });\n})();\n","size_bytes":2066},"server/newsService.ts":{"content":"import { nanoid } from \"nanoid\";\n\ninterface NewsArticle {\n  title: string;\n  description: string;\n  content: string;\n  url: string;\n  urlToImage: string;\n  publishedAt: string;\n  source: {\n    name: string;\n  };\n}\n\ninterface NewsAPIResponse {\n  articles: NewsArticle[];\n  totalResults: number;\n  status: string;\n}\n\nexport interface ProcessedArticle {\n  id: string;\n  title: string;\n  content: string;\n  excerpt: string;\n  category: \"tech\" | \"finance\" | \"jiu-jitsu\" | \"surf\";\n  imageUrl?: string;\n  sourceUrl: string;\n  sourceName: string;\n  publishedAt: Date;\n  isFeatured: boolean;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\nconst NEWS_API_KEY = process.env.NEWS_API_KEY;\nconst NEWS_API_BASE_URL = \"https://newsapi.org/v2\";\n\nif (!NEWS_API_KEY) {\n  console.error(\"NEWS_API_KEY is required for news fetching\");\n}\n\nexport class NewsService {\n  private async fetchFromNewsAPI(query: string, language = \"en\"): Promise<NewsArticle[]> {\n    if (!NEWS_API_KEY) {\n      throw new Error(\"NEWS_API_KEY is not configured\");\n    }\n\n    const url = new URL(`${NEWS_API_BASE_URL}/everything`);\n    url.searchParams.set(\"q\", query);\n    url.searchParams.set(\"language\", language);\n    url.searchParams.set(\"sortBy\", \"publishedAt\");\n    url.searchParams.set(\"pageSize\", \"10\");\n    url.searchParams.set(\"apiKey\", NEWS_API_KEY);\n\n    try {\n      const response = await fetch(url.toString());\n      \n      if (!response.ok) {\n        throw new Error(`News API error: ${response.status} ${response.statusText}`);\n      }\n\n      const data: NewsAPIResponse = await response.json();\n      \n      if (data.status !== \"ok\") {\n        throw new Error(`News API returned status: ${data.status}`);\n      }\n\n      return data.articles.filter(article => \n        article.title && \n        article.description && \n        article.content &&\n        !article.title.includes(\"[Removed]\") &&\n        !article.description.includes(\"[Removed]\")\n      );\n    } catch (error) {\n      console.error(`Failed to fetch news for query \"${query}\":`, error);\n      return [];\n    }\n  }\n\n  private processArticle(article: NewsArticle, category: \"tech\" | \"finance\" | \"jiu-jitsu\" | \"surf\"): ProcessedArticle {\n    // Clean up content - remove truncation markers and source attributions\n    let content = article.content || article.description || \"\";\n    content = content.replace(/\\[\\+\\d+ chars\\]$/, \"\"); // Remove NewsAPI truncation marker\n    content = content.replace(/\\[Removed\\]/g, \"\"); // Remove removed markers\n    \n    // If content is too short, use description as content and create excerpt from title\n    if (content.length < 100 && article.description) {\n      content = article.description;\n    }\n\n    // Create excerpt from first 150 characters\n    const excerpt = content.length > 150 \n      ? content.substring(0, 150) + \"...\" \n      : content;\n\n    // Enhance content with source link\n    if (content.length < 300) {\n      content += `\\n\\nRead the full article at ${article.source.name}: ${article.url}`;\n    }\n\n    return {\n      id: nanoid(),\n      title: article.title,\n      content,\n      excerpt,\n      category,\n      imageUrl: article.urlToImage || undefined,\n      sourceUrl: article.url,\n      sourceName: article.source.name,\n      publishedAt: new Date(article.publishedAt),\n      isFeatured: false, // Will be randomly assigned later\n      createdAt: new Date(),\n      updatedAt: new Date(),\n    };\n  }\n\n  async fetchTechNews(): Promise<ProcessedArticle[]> {\n    const queries = [\n      \"artificial intelligence AI technology\",\n      \"software development programming\",\n      \"blockchain cryptocurrency tech\",\n      \"startup technology innovation\",\n      \"mobile app development\"\n    ];\n\n    const allArticles: ProcessedArticle[] = [];\n\n    for (const query of queries) {\n      const articles = await this.fetchFromNewsAPI(query);\n      const processed = articles\n        .slice(0, 2) // Limit per query to avoid duplicates\n        .map(article => this.processArticle(article, \"tech\"));\n      \n      allArticles.push(...processed);\n      \n      // Small delay to respect rate limits\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return allArticles;\n  }\n\n  async fetchFinanceNews(): Promise<ProcessedArticle[]> {\n    const queries = [\n      \"stock market trading investment\",\n      \"cryptocurrency bitcoin ethereum finance\",\n      \"venture capital funding startup\",\n      \"fintech financial technology\",\n      \"personal finance investing\"\n    ];\n\n    const allArticles: ProcessedArticle[] = [];\n\n    for (const query of queries) {\n      const articles = await this.fetchFromNewsAPI(query);\n      const processed = articles\n        .slice(0, 2) // Limit per query to avoid duplicates\n        .map(article => this.processArticle(article, \"finance\"));\n      \n      allArticles.push(...processed);\n      \n      // Small delay to respect rate limits\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return allArticles;\n  }\n\n  async fetchJiuJitsuNews(): Promise<ProcessedArticle[]> {\n    const queries = [\n      \"jiu-jitsu BJJ brazilian jiu-jitsu\",\n      \"mixed martial arts MMA UFC\",\n      \"grappling martial arts training\",\n      \"BJJ competition tournament\",\n      \"martial arts fitness discipline\"\n    ];\n\n    const allArticles: ProcessedArticle[] = [];\n\n    for (const query of queries) {\n      const articles = await this.fetchFromNewsAPI(query);\n      const processed = articles\n        .slice(0, 2) // Limit per query\n        .map(article => this.processArticle(article, \"jiu-jitsu\"));\n      \n      allArticles.push(...processed);\n      \n      // Small delay to respect rate limits\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return allArticles;\n  }\n\n  async fetchSurfNews(): Promise<ProcessedArticle[]> {\n    const queries = [\n      \"surfing surf competition waves\",\n      \"surf culture lifestyle ocean\",\n      \"surfboard wave riding beach\",\n      \"surf travel destinations\",\n      \"ocean conservation surfing\"\n    ];\n\n    const allArticles: ProcessedArticle[] = [];\n\n    for (const query of queries) {\n      const articles = await this.fetchFromNewsAPI(query);\n      const processed = articles\n        .slice(0, 2) // Limit per query\n        .map(article => this.processArticle(article, \"surf\"));\n      \n      allArticles.push(...processed);\n      \n      // Small delay to respect rate limits\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n\n    return allArticles;\n  }\n\n  async fetchAllNews(): Promise<ProcessedArticle[]> {\n    try {\n      console.log(\"Fetching latest news articles...\");\n      \n      const [techNews, financeNews, jiuJitsuNews, surfNews] = await Promise.all([\n        this.fetchTechNews(),\n        this.fetchFinanceNews(),\n        this.fetchJiuJitsuNews(),\n        this.fetchSurfNews()\n      ]);\n\n      const allArticles = [...techNews, ...financeNews, ...jiuJitsuNews, ...surfNews];\n      \n      // Randomly select some articles to be featured\n      const shuffled = [...allArticles].sort(() => 0.5 - Math.random());\n      shuffled.slice(0, Math.min(4, shuffled.length)).forEach(article => {\n        article.isFeatured = true;\n      });\n\n      console.log(`Successfully fetched ${allArticles.length} articles`);\n      console.log(`Tech: ${techNews.length}, Finance: ${financeNews.length}, Jiu-Jitsu: ${jiuJitsuNews.length}, Surf: ${surfNews.length}`);\n      \n      return allArticles;\n    } catch (error) {\n      console.error(\"Error fetching news:\", error);\n      return [];\n    }\n  }\n\n  // Helper method to refresh news periodically\n  async refreshNewsCache(): Promise<ProcessedArticle[]> {\n    console.log(\"Refreshing news cache...\");\n    return this.fetchAllNews();\n  }\n}\n\nexport const newsService = new NewsService();","size_bytes":7726},"server/objectAcl.ts":{"content":"import { File } from \"@google-cloud/storage\";\n\nconst ACL_POLICY_METADATA_KEY = \"custom:aclPolicy\";\n\n// The type of the access group.\n//\n// Can be flexibly defined according to the use case.\n//\n// Examples:\n// - USER_LIST: the users from a list stored in the database;\n// - EMAIL_DOMAIN: the users whose email is in a specific domain;\n// - GROUP_MEMBER: the users who are members of a specific group;\n// - SUBSCRIBER: the users who are subscribers of a specific service / content\n//   creator.\nexport enum ObjectAccessGroupType {}\n\n// The logic user group that can access the object.\nexport interface ObjectAccessGroup {\n  // The type of the access group.\n  type: ObjectAccessGroupType;\n  // The logic id that is enough to identify the qualified group members.\n  //\n  // It may have different format for different types. For example:\n  // - for USER_LIST, the id could be the user list db entity id, and the\n  //   user list db entity could contain a bunch of user ids. User needs\n  //   to be a member of the user list to be able to access the object.\n  // - for EMAIL_DOMAIN, the id could be the email domain, and the user needs\n  //   to have an email with the domain to be able to access the object.\n  // - for GROUP_MEMBER, the id could be the group db entity id, and the\n  //   group db entity could contain a bunch of user ids. User needs to be\n  //   a member of the group to be able to access the object.\n  // - for SUBSCRIBER, the id could be the subscriber db entity id, and the\n  //   subscriber db entity could contain a bunch of user ids. User needs to\n  //   be a subscriber to be able to access the object.\n  id: string;\n}\n\nexport enum ObjectPermission {\n  READ = \"read\",\n  WRITE = \"write\",\n}\n\nexport interface ObjectAclRule {\n  group: ObjectAccessGroup;\n  permission: ObjectPermission;\n}\n\n// The ACL policy of the object.\n// This would be set as part of the object custom metadata:\n// - key: \"custom:aclPolicy\"\n// - value: JSON string of the ObjectAclPolicy object.\nexport interface ObjectAclPolicy {\n  owner: string;\n  visibility: \"public\" | \"private\";\n  aclRules?: Array<ObjectAclRule>;\n}\n\n// Check if the requested permission is allowed based on the granted permission.\nfunction isPermissionAllowed(\n  requested: ObjectPermission,\n  granted: ObjectPermission,\n): boolean {\n  // Users granted with read or write permissions can read the object.\n  if (requested === ObjectPermission.READ) {\n    return [ObjectPermission.READ, ObjectPermission.WRITE].includes(granted);\n  }\n\n  // Only users granted with write permissions can write the object.\n  return granted === ObjectPermission.WRITE;\n}\n\n// The base class for all access groups.\n//\n// Different types of access groups can be implemented according to the use case.\nabstract class BaseObjectAccessGroup implements ObjectAccessGroup {\n  constructor(\n    public readonly type: ObjectAccessGroupType,\n    public readonly id: string,\n  ) {}\n\n  // Check if the user is a member of the group.\n  public abstract hasMember(userId: string): Promise<boolean>;\n}\n\nfunction createObjectAccessGroup(\n  group: ObjectAccessGroup,\n): BaseObjectAccessGroup {\n  switch (group.type) {\n    // Implement the case for each type of access group to instantiate.\n    //\n    // For example:\n    // case \"USER_LIST\":\n    //   return new UserListAccessGroup(group.id);\n    // case \"EMAIL_DOMAIN\":\n    //   return new EmailDomainAccessGroup(group.id);\n    // case \"GROUP_MEMBER\":\n    //   return new GroupMemberAccessGroup(group.id);\n    // case \"SUBSCRIBER\":\n    //   return new SubscriberAccessGroup(group.id);\n    default:\n      throw new Error(`Unknown access group type: ${group.type}`);\n  }\n}\n\n// Sets the ACL policy to the object metadata.\nexport async function setObjectAclPolicy(\n  objectFile: File,\n  aclPolicy: ObjectAclPolicy,\n): Promise<void> {\n  const [exists] = await objectFile.exists();\n  if (!exists) {\n    throw new Error(`Object not found: ${objectFile.name}`);\n  }\n\n  await objectFile.setMetadata({\n    metadata: {\n      [ACL_POLICY_METADATA_KEY]: JSON.stringify(aclPolicy),\n    },\n  });\n}\n\n// Gets the ACL policy from the object metadata.\nexport async function getObjectAclPolicy(\n  objectFile: File,\n): Promise<ObjectAclPolicy | null> {\n  const [metadata] = await objectFile.getMetadata();\n  const aclPolicy = metadata?.metadata?.[ACL_POLICY_METADATA_KEY];\n  if (!aclPolicy) {\n    return null;\n  }\n  return JSON.parse(aclPolicy as string);\n}\n\n// Checks if the user can access the object.\nexport async function canAccessObject({\n  userId,\n  objectFile,\n  requestedPermission,\n}: {\n  userId?: string;\n  objectFile: File;\n  requestedPermission: ObjectPermission;\n}): Promise<boolean> {\n  // When this function is called, the acl policy is required.\n  const aclPolicy = await getObjectAclPolicy(objectFile);\n  if (!aclPolicy) {\n    return false;\n  }\n\n  // Public objects are always accessible for read.\n  if (\n    aclPolicy.visibility === \"public\" &&\n    requestedPermission === ObjectPermission.READ\n  ) {\n    return true;\n  }\n\n  // Access control requires the user id.\n  if (!userId) {\n    return false;\n  }\n\n  // The owner of the object can always access it.\n  if (aclPolicy.owner === userId) {\n    return true;\n  }\n\n  // Go through the ACL rules to check if the user has the required permission.\n  for (const rule of aclPolicy.aclRules || []) {\n    const accessGroup = createObjectAccessGroup(rule.group);\n    if (\n      (await accessGroup.hasMember(userId)) &&\n      isPermissionAllowed(requestedPermission, rule.permission)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}","size_bytes":5543},"server/objectStorage.ts":{"content":"import { Storage, File } from \"@google-cloud/storage\";\nimport { Response } from \"express\";\nimport { randomUUID } from \"crypto\";\nimport {\n  ObjectAclPolicy,\n  ObjectPermission,\n  canAccessObject,\n  getObjectAclPolicy,\n  setObjectAclPolicy,\n} from \"./objectAcl\";\n\nconst REPLIT_SIDECAR_ENDPOINT = \"http://127.0.0.1:1106\";\n\n// The object storage client is used to interact with the object storage service.\nexport const objectStorageClient = new Storage({\n  credentials: {\n    audience: \"replit\",\n    subject_token_type: \"access_token\",\n    token_url: `${REPLIT_SIDECAR_ENDPOINT}/token`,\n    type: \"external_account\",\n    credential_source: {\n      url: `${REPLIT_SIDECAR_ENDPOINT}/credential`,\n      format: {\n        type: \"json\",\n        subject_token_field_name: \"access_token\",\n      },\n    },\n    universe_domain: \"googleapis.com\",\n  },\n  projectId: \"\",\n});\n\nexport class ObjectNotFoundError extends Error {\n  constructor() {\n    super(\"Object not found\");\n    this.name = \"ObjectNotFoundError\";\n    Object.setPrototypeOf(this, ObjectNotFoundError.prototype);\n  }\n}\n\n// The object storage service is used to interact with the object storage service.\nexport class ObjectStorageService {\n  constructor() {}\n\n  // Gets the public object search paths.\n  getPublicObjectSearchPaths(): Array<string> {\n    const pathsStr = process.env.PUBLIC_OBJECT_SEARCH_PATHS || \"\";\n    const paths = Array.from(\n      new Set(\n        pathsStr\n          .split(\",\")\n          .map((path) => path.trim())\n          .filter((path) => path.length > 0)\n      )\n    );\n    if (paths.length === 0) {\n      throw new Error(\n        \"PUBLIC_OBJECT_SEARCH_PATHS not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PUBLIC_OBJECT_SEARCH_PATHS env var (comma-separated paths).\"\n      );\n    }\n    return paths;\n  }\n\n  // Gets the private object directory.\n  getPrivateObjectDir(): string {\n    const dir = process.env.PRIVATE_OBJECT_DIR || \"\";\n    if (!dir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n    return dir;\n  }\n\n  // Search for a public object from the search paths.\n  async searchPublicObject(filePath: string): Promise<File | null> {\n    for (const searchPath of this.getPublicObjectSearchPaths()) {\n      const fullPath = `${searchPath}/${filePath}`;\n\n      // Full path format: /<bucket_name>/<object_name>\n      const { bucketName, objectName } = parseObjectPath(fullPath);\n      const bucket = objectStorageClient.bucket(bucketName);\n      const file = bucket.file(objectName);\n\n      // Check if file exists\n      const [exists] = await file.exists();\n      if (exists) {\n        return file;\n      }\n    }\n\n    return null;\n  }\n\n  // Downloads an object to the response.\n  async downloadObject(file: File, res: Response, cacheTtlSec: number = 3600) {\n    try {\n      // Get file metadata\n      const [metadata] = await file.getMetadata();\n      // Get the ACL policy for the object.\n      const aclPolicy = await getObjectAclPolicy(file);\n      const isPublic = aclPolicy?.visibility === \"public\";\n      // Set appropriate headers\n      res.set({\n        \"Content-Type\": metadata.contentType || \"application/octet-stream\",\n        \"Content-Length\": metadata.size,\n        \"Cache-Control\": `${\n          isPublic ? \"public\" : \"private\"\n        }, max-age=${cacheTtlSec}`,\n      });\n\n      // Stream the file to the response\n      const stream = file.createReadStream();\n\n      stream.on(\"error\", (err) => {\n        console.error(\"Stream error:\", err);\n        if (!res.headersSent) {\n          res.status(500).json({ error: \"Error streaming file\" });\n        }\n      });\n\n      stream.pipe(res);\n    } catch (error) {\n      console.error(\"Error downloading file:\", error);\n      if (!res.headersSent) {\n        res.status(500).json({ error: \"Error downloading file\" });\n      }\n    }\n  }\n\n  // Gets the upload URL for an object entity.\n  async getObjectEntityUploadURL(): Promise<string> {\n    const privateObjectDir = this.getPrivateObjectDir();\n    if (!privateObjectDir) {\n      throw new Error(\n        \"PRIVATE_OBJECT_DIR not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PRIVATE_OBJECT_DIR env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const fullPath = `${privateObjectDir}/uploads/${objectId}`;\n\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n\n    // Sign URL for PUT method with TTL\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  // Gets the upload URL for a public object.\n  async getPublicObjectUploadURL(): Promise<string> {\n    const publicSearchPaths = this.getPublicObjectSearchPaths();\n    if (publicSearchPaths.length === 0) {\n      throw new Error(\n        \"PUBLIC_OBJECT_SEARCH_PATHS not set. Create a bucket in 'Object Storage' \" +\n          \"tool and set PUBLIC_OBJECT_SEARCH_PATHS env var.\"\n      );\n    }\n\n    const objectId = randomUUID();\n    const publicPath = publicSearchPaths[0]; // Use first public path\n    const fullPath = `${publicPath}/uploads/${objectId}`;\n\n    const { bucketName, objectName } = parseObjectPath(fullPath);\n\n    // Sign URL for PUT method with TTL\n    return signObjectURL({\n      bucketName,\n      objectName,\n      method: \"PUT\",\n      ttlSec: 900,\n    });\n  }\n\n  // Gets the object entity file from the object path.\n  async getObjectEntityFile(objectPath: string): Promise<File> {\n    if (!objectPath.startsWith(\"/objects/\")) {\n      throw new ObjectNotFoundError();\n    }\n\n    const parts = objectPath.slice(1).split(\"/\");\n    if (parts.length < 2) {\n      throw new ObjectNotFoundError();\n    }\n\n    const entityId = parts.slice(1).join(\"/\");\n    let entityDir = this.getPrivateObjectDir();\n    if (!entityDir.endsWith(\"/\")) {\n      entityDir = `${entityDir}/`;\n    }\n    const objectEntityPath = `${entityDir}${entityId}`;\n    const { bucketName, objectName } = parseObjectPath(objectEntityPath);\n    const bucket = objectStorageClient.bucket(bucketName);\n    const objectFile = bucket.file(objectName);\n    const [exists] = await objectFile.exists();\n    if (!exists) {\n      throw new ObjectNotFoundError();\n    }\n    return objectFile;\n  }\n\n  normalizeObjectEntityPath(\n    rawPath: string,\n  ): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n  \n    // Extract the path from the URL by removing query parameters and domain\n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n  \n    let objectEntityDir = this.getPrivateObjectDir();\n    if (!objectEntityDir.endsWith(\"/\")) {\n      objectEntityDir = `${objectEntityDir}/`;\n    }\n  \n    if (!rawObjectPath.startsWith(objectEntityDir)) {\n      return rawObjectPath;\n    }\n  \n    // Extract the entity ID from the path\n    const entityId = rawObjectPath.slice(objectEntityDir.length);\n    return `/objects/${entityId}`;\n  }\n\n  // Normalize public object path from upload URL to public serving path\n  normalizePublicObjectPath(rawPath: string): string {\n    if (!rawPath.startsWith(\"https://storage.googleapis.com/\")) {\n      return rawPath;\n    }\n  \n    // Extract the path from the URL by removing query parameters and domain\n    const url = new URL(rawPath);\n    const rawObjectPath = url.pathname;\n    \n    const publicSearchPaths = this.getPublicObjectSearchPaths();\n    \n    // Find which public path this belongs to\n    for (const publicPath of publicSearchPaths) {\n      if (rawObjectPath.startsWith(publicPath)) {\n        const relativePath = rawObjectPath.slice(publicPath.length);\n        return `/public-objects${relativePath}`;\n      }\n    }\n    \n    // If not found in public paths, return as-is\n    return rawObjectPath;\n  }\n\n  // Tries to set the ACL policy for the object entity and return the normalized path.\n  async trySetObjectEntityAclPolicy(\n    rawPath: string,\n    aclPolicy: ObjectAclPolicy\n  ): Promise<string> {\n    const normalizedPath = this.normalizeObjectEntityPath(rawPath);\n    if (!normalizedPath.startsWith(\"/\")) {\n      return normalizedPath;\n    }\n\n    const objectFile = await this.getObjectEntityFile(normalizedPath);\n    await setObjectAclPolicy(objectFile, aclPolicy);\n    return normalizedPath;\n  }\n\n  // Checks if the user can access the object entity.\n  async canAccessObjectEntity({\n    userId,\n    objectFile,\n    requestedPermission,\n  }: {\n    userId?: string;\n    objectFile: File;\n    requestedPermission?: ObjectPermission;\n  }): Promise<boolean> {\n    return canAccessObject({\n      userId,\n      objectFile,\n      requestedPermission: requestedPermission ?? ObjectPermission.READ,\n    });\n  }\n}\n\nfunction parseObjectPath(path: string): {\n  bucketName: string;\n  objectName: string;\n} {\n  if (!path.startsWith(\"/\")) {\n    path = `/${path}`;\n  }\n  const pathParts = path.split(\"/\");\n  if (pathParts.length < 3) {\n    throw new Error(\"Invalid path: must contain at least a bucket name\");\n  }\n\n  const bucketName = pathParts[1];\n  const objectName = pathParts.slice(2).join(\"/\");\n\n  return {\n    bucketName,\n    objectName,\n  };\n}\n\nasync function signObjectURL({\n  bucketName,\n  objectName,\n  method,\n  ttlSec,\n}: {\n  bucketName: string;\n  objectName: string;\n  method: \"GET\" | \"PUT\" | \"DELETE\" | \"HEAD\";\n  ttlSec: number;\n}): Promise<string> {\n  const request = {\n    bucket_name: bucketName,\n    object_name: objectName,\n    method,\n    expires_at: new Date(Date.now() + ttlSec * 1000).toISOString(),\n  };\n  const response = await fetch(\n    `${REPLIT_SIDECAR_ENDPOINT}/object-storage/signed-object-url`,\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(request),\n    }\n  );\n  if (!response.ok) {\n    throw new Error(\n      `Failed to sign object URL, errorcode: ${response.status}, ` +\n        `make sure you're running on Replit`\n    );\n  }\n\n  const { signed_url: signedURL } = await response.json();\n  return signedURL;\n}","size_bytes":10001},"server/replitAuth.ts":{"content":"import * as client from \"openid-client\";\nimport { Strategy, type VerifyFunction } from \"openid-client/passport\";\n\nimport passport from \"passport\";\nimport session from \"express-session\";\nimport type { Express, RequestHandler } from \"express\";\nimport memoize from \"memoizee\";\nimport connectPg from \"connect-pg-simple\";\nimport { storage } from \"./storage\";\n\nif (!process.env.REPLIT_DOMAINS) {\n  throw new Error(\"Environment variable REPLIT_DOMAINS not provided\");\n}\n\nconst getOidcConfig = memoize(\n  async () => {\n    return await client.discovery(\n      new URL(process.env.ISSUER_URL ?? \"https://replit.com/oidc\"),\n      process.env.REPL_ID!\n    );\n  },\n  { maxAge: 3600 * 1000 }\n);\n\nexport function getSession() {\n  const sessionTtl = 7 * 24 * 60 * 60 * 1000; // 1 week\n  const pgStore = connectPg(session);\n  const sessionStore = new pgStore({\n    conString: process.env.DATABASE_URL,\n    createTableIfMissing: false,\n    ttl: sessionTtl,\n    tableName: \"sessions\",\n  });\n  return session({\n    secret: process.env.SESSION_SECRET!,\n    store: sessionStore,\n    resave: false,\n    saveUninitialized: false,\n    cookie: {\n      httpOnly: true,\n      secure: true,\n      maxAge: sessionTtl,\n    },\n  });\n}\n\nfunction updateUserSession(\n  user: any,\n  tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers\n) {\n  user.claims = tokens.claims();\n  user.access_token = tokens.access_token;\n  user.refresh_token = tokens.refresh_token;\n  user.expires_at = user.claims?.exp;\n}\n\nasync function upsertUser(\n  claims: any,\n) {\n  await storage.upsertUser({\n    id: claims[\"sub\"],\n    email: claims[\"email\"],\n    firstName: claims[\"first_name\"],\n    lastName: claims[\"last_name\"],\n    profileImageUrl: claims[\"profile_image_url\"],\n  });\n}\n\nexport async function setupAuth(app: Express) {\n  app.set(\"trust proxy\", 1);\n  app.use(getSession());\n  app.use(passport.initialize());\n  app.use(passport.session());\n\n  const config = await getOidcConfig();\n\n  const verify: VerifyFunction = async (\n    tokens: client.TokenEndpointResponse & client.TokenEndpointResponseHelpers,\n    verified: passport.AuthenticateCallback\n  ) => {\n    const user = {};\n    updateUserSession(user, tokens);\n    await upsertUser(tokens.claims());\n    verified(null, user);\n  };\n\n  for (const domain of process.env\n    .REPLIT_DOMAINS!.split(\",\")) {\n    const strategy = new Strategy(\n      {\n        name: `replitauth:${domain}`,\n        config,\n        scope: \"openid email profile offline_access\",\n        callbackURL: `https://${domain}/api/callback`,\n      },\n      verify,\n    );\n    passport.use(strategy);\n  }\n\n  passport.serializeUser((user: Express.User, cb) => cb(null, user));\n  passport.deserializeUser((user: Express.User, cb) => cb(null, user));\n\n  app.get(\"/api/login\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      prompt: \"login consent\",\n      scope: [\"openid\", \"email\", \"profile\", \"offline_access\"],\n    })(req, res, next);\n  });\n\n  app.get(\"/api/callback\", (req, res, next) => {\n    passport.authenticate(`replitauth:${req.hostname}`, {\n      successReturnToOrRedirect: \"/\",\n      failureRedirect: \"/api/login\",\n    })(req, res, next);\n  });\n\n  app.get(\"/api/logout\", (req, res) => {\n    req.logout(() => {\n      res.redirect(\n        client.buildEndSessionUrl(config, {\n          client_id: process.env.REPL_ID!,\n          post_logout_redirect_uri: `${req.protocol}://${req.hostname}`,\n        }).href\n      );\n    });\n  });\n}\n\nexport const isAuthenticated: RequestHandler = async (req, res, next) => {\n  const user = req.user as any;\n\n  if (!req.isAuthenticated() || !user.expires_at) {\n    return res.status(401).json({ message: \"Unauthorized\" });\n  }\n\n  const now = Math.floor(Date.now() / 1000);\n  if (now <= user.expires_at) {\n    return next();\n  }\n\n  const refreshToken = user.refresh_token;\n  if (!refreshToken) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n\n  try {\n    const config = await getOidcConfig();\n    const tokenResponse = await client.refreshTokenGrant(config, refreshToken);\n    updateUserSession(user, tokenResponse);\n    return next();\n  } catch (error) {\n    res.status(401).json({ message: \"Unauthorized\" });\n    return;\n  }\n};","size_bytes":4220},"server/routes.ts":{"content":"import type { Express } from \"express\";\nimport { createServer, type Server } from \"http\";\nimport { storage } from \"./storage\";\nimport { insertArticleSchema, insertSiteSettingsSchema, insertCommentSchema } from \"@shared/schema\";\nimport { setupAuth, isAuthenticated } from \"./replitAuth\";\n\n// Extended user type for authenticated requests\ninterface AuthenticatedUser {\n  claims: {\n    sub: string;\n    email?: string;\n    first_name?: string;\n    last_name?: string;\n    profile_image_url?: string;\n    exp?: number;\n  };\n  access_token?: string;\n  refresh_token?: string;\n  expires_at?: number;\n}\nimport { ObjectStorageService, ObjectNotFoundError } from \"./objectStorage\";\nimport { ObjectPermission } from \"./objectAcl\";\nimport { newsService, type ProcessedArticle } from \"./newsService\";\nimport { contentService } from \"./contentService\";\nimport { enhancedContentService } from \"./enhancedContentService\";\nimport multer from \"multer\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nconst upload = multer({\n  storage: multer.diskStorage({\n    destination: (req, file, cb) => {\n      const uploadDir = path.join(process.cwd(), 'uploads');\n      if (!fs.existsSync(uploadDir)) {\n        fs.mkdirSync(uploadDir, { recursive: true });\n      }\n      cb(null, uploadDir);\n    },\n    filename: (req, file, cb) => {\n      const uniqueSuffix = Date.now() + '-' + Math.round(Math.random() * 1E9);\n      cb(null, file.fieldname + '-' + uniqueSuffix + path.extname(file.originalname));\n    }\n  }),\n  limits: {\n    fileSize: 5 * 1024 * 1024, // 5MB limit\n  },\n  fileFilter: (req, file, cb) => {\n    if (file.mimetype.startsWith('image/')) {\n      cb(null, true);\n    } else {\n      cb(new Error('Only image files are allowed') as any, false);\n    }\n  }\n});\n\nexport async function registerRoutes(app: Express): Promise<Server> {\n  // Auth middleware\n  await setupAuth(app);\n\n  // Auth routes\n  app.get('/api/auth/user', isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = (req.user as AuthenticatedUser).claims.sub;\n      const user = await storage.getUser(userId);\n      res.json(user);\n    } catch (error) {\n      console.error(\"Error fetching user:\", error);\n      res.status(500).json({ message: \"Failed to fetch user\" });\n    }\n  });\n\n  // Object storage endpoints\n  app.get(\"/public-objects/:filePath(*)\", async (req, res) => {\n    const filePath = req.params.filePath;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const file = await objectStorageService.searchPublicObject(filePath);\n      if (!file) {\n        return res.status(404).json({ error: \"File not found\" });\n      }\n      objectStorageService.downloadObject(file, res);\n    } catch (error) {\n      console.error(\"Error searching for public object:\", error);\n      return res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  app.get(\"/objects/:objectPath(*)\", isAuthenticated, async (req: any, res) => {\n    const userId = (req.user as AuthenticatedUser)?.claims?.sub;\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const objectFile = await objectStorageService.getObjectEntityFile(\n        req.path,\n      );\n      const canAccess = await objectStorageService.canAccessObjectEntity({\n        objectFile,\n        userId: userId,\n        requestedPermission: ObjectPermission.READ,\n      });\n      if (!canAccess) {\n        return res.sendStatus(401);\n      }\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error checking object access:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // Protected upload endpoint for authenticated users\n  app.post(\"/api/objects/upload\", isAuthenticated, async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n    res.json({ uploadURL });\n  });\n\n  // Public upload endpoint for admin backdrop images\n  app.post(\"/api/objects/upload/public\", async (req, res) => {\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const uploadURL = await objectStorageService.getPublicObjectUploadURL();\n      res.json({ uploadURL });\n    } catch (error) {\n      console.error(\"Error getting upload URL:\", error);\n      res.status(500).json({ error: \"Failed to get upload URL\" });\n    }\n  });\n\n  // Handle backdrop image ACL and settings update\n  app.put(\"/api/article-backdrops\", async (req, res) => {\n    if (!req.body.imageURL) {\n      return res.status(400).json({ error: \"imageURL is required\" });\n    }\n\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const publicUrl = objectStorageService.normalizePublicObjectPath(req.body.imageURL);\n\n      // Update site settings with the new backdrop URL\n      await storage.updateSiteSettings({ heroBackgroundUrl: publicUrl });\n\n      res.status(200).json({\n        objectPath: publicUrl,\n        publicUrl: publicUrl,\n      });\n    } catch (error) {\n      console.error(\"Error setting backdrop image:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  app.put(\"/api/comment-images\", isAuthenticated, async (req: any, res) => {\n    if (!req.body.imageURL) {\n      return res.status(400).json({ error: \"imageURL is required\" });\n    }\n\n    const userId = (req.user as AuthenticatedUser)?.claims?.sub;\n\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.imageURL,\n        {\n          owner: userId,\n          visibility: \"public\",\n        },\n      );\n\n      res.status(200).json({\n        objectPath: objectPath,\n      });\n    } catch (error) {\n      console.error(\"Error setting comment image:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Background audio upload endpoint\n  app.put(\"/api/background-audio\", isAuthenticated, async (req: any, res) => {\n    if (!req.body.audioURL) {\n      return res.status(400).json({ error: \"audioURL is required\" });\n    }\n\n    const userId = (req.user as AuthenticatedUser)?.claims?.sub;\n\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.audioURL,\n        {\n          owner: userId,\n          visibility: \"public\", // Background audio can be public\n        }\n      );\n\n      // Store the audio URL in site settings\n      await storage.updateSiteSettings({\n        backgroundAudioUrl: objectPath\n      });\n\n      res.status(200).json({\n        objectPath: objectPath,\n      });\n    } catch (error) {\n      console.error(\"Error setting background audio:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n  \n  // Serve uploaded images\n  app.use('/uploads', (req, res, next) => {\n    const filePath = path.join(process.cwd(), 'uploads', req.path);\n    if (fs.existsSync(filePath)) {\n      res.sendFile(filePath);\n    } else {\n      res.status(404).json({ message: 'Image not found' });\n    }\n  });\n\n  // Get all articles with optional category and subcategory filters\n  app.get(\"/api/articles\", async (req, res) => {\n    try {\n      const category = req.query.category as string;\n      const subcategory = req.query.subcategory as string;\n      const articles = await storage.getArticles(category, subcategory as string);\n      res.json(articles);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch articles\" });\n    }\n  });\n\n  // Get featured articles for homepage\n  app.get(\"/api/articles/featured\", async (req, res) => {\n    try {\n      const limit = parseInt(req.query.limit as string) || 3;\n      const articles = await storage.getFeaturedArticles(limit);\n      res.json(articles);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch featured articles\" });\n    }\n  });\n\n  // Get single article by ID\n  app.get(\"/api/articles/:id\", async (req, res) => {\n    try {\n      const article = await storage.getArticle(req.params.id);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch article\" });\n    }\n  });\n\n  // Create new article\n  app.post(\"/api/articles\", isAuthenticated, async (req, res) => {\n    try {\n      const validatedData = insertArticleSchema.parse(req.body);\n      const article = await storage.createArticle(validatedData);\n      res.status(201).json(article);\n    } catch (error) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      } else {\n        res.status(500).json({ message: \"Failed to create article\" });\n      }\n    }\n  });\n\n  // Update article\n  app.put(\"/api/articles/:id\", isAuthenticated, async (req, res) => {\n    try {\n      const updates = insertArticleSchema.partial().parse(req.body);\n      const article = await storage.updateArticle(req.params.id, updates);\n      if (!article) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json(article);\n    } catch (error) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      } else {\n        res.status(500).json({ message: \"Failed to update article\" });\n      }\n    }\n  });\n\n  // Delete article\n  app.delete(\"/api/articles/:id\", isAuthenticated, async (req, res) => {\n    try {\n      const success = await storage.deleteArticle(req.params.id);\n      if (!success) {\n        return res.status(404).json({ message: \"Article not found\" });\n      }\n      res.json({ message: \"Article deleted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete article\" });\n    }\n  });\n\n  // Upload image\n  app.post(\"/api/upload\", isAuthenticated, upload.single('image'), (req, res) => {\n    try {\n      if (!req.file) {\n        return res.status(400).json({ message: \"No image file provided\" });\n      }\n      \n      const imageUrl = `/uploads/${req.file.filename}`;\n      res.json({ imageUrl });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to upload image\" });\n    }\n  });\n\n  // Comment endpoints\n  // Get comments for an article\n  app.get(\"/api/articles/:articleId/comments\", async (req, res) => {\n    try {\n      const comments = await storage.getComments(req.params.articleId);\n      res.json(comments);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch comments\" });\n    }\n  });\n\n  // Create comment (requires authentication)\n  app.post(\"/api/articles/:articleId/comments\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user?.id || req.user?.claims?.sub;\n      const validatedData = insertCommentSchema.parse({\n        ...req.body,\n        articleId: req.params.articleId,\n        userId: userId,\n      });\n      const comment = await storage.createComment(validatedData);\n      res.status(201).json(comment);\n    } catch (error) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      } else {\n        res.status(500).json({ message: \"Failed to create comment\" });\n      }\n    }\n  });\n\n  // Delete comment (requires authentication and ownership)\n  app.delete(\"/api/comments/:id\", isAuthenticated, async (req: any, res) => {\n    try {\n      const userId = req.user?.id || req.user?.claims?.sub;\n      const success = await storage.deleteComment(req.params.id, userId);\n      if (!success) {\n        return res.status(404).json({ message: \"Comment not found or not authorized\" });\n      }\n      res.json({ message: \"Comment deleted successfully\" });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to delete comment\" });\n    }\n  });\n\n  // Get site settings\n  app.get(\"/api/settings\", async (req, res) => {\n    try {\n      const settings = await storage.getSiteSettings();\n      res.json(settings);\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to fetch site settings\" });\n    }\n  });\n\n  // Update site settings\n  app.put(\"/api/settings\", async (req, res) => {\n    try {\n      const updates = insertSiteSettingsSchema.partial().parse(req.body);\n      const settings = await storage.updateSiteSettings(updates);\n      res.json(settings);\n    } catch (error) {\n      if (error instanceof Error) {\n        res.status(400).json({ message: error.message });\n      } else {\n        res.status(500).json({ message: \"Failed to update site settings\" });\n      }\n    }\n  });\n\n  // Object storage endpoints for admin photo uploads\n  app.post(\"/api/objects/upload\", isAuthenticated, async (req, res) => {\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const uploadURL = await objectStorageService.getObjectEntityUploadURL();\n      res.json({ uploadURL });\n    } catch (error) {\n      console.error(\"Error getting upload URL:\", error);\n      res.status(500).json({ error: \"Failed to get upload URL\" });\n    }\n  });\n\n  app.put(\"/api/article-backdrops\", isAuthenticated, async (req, res) => {\n    if (!req.body.imageURL) {\n      return res.status(400).json({ error: \"imageURL is required\" });\n    }\n\n    const userId = (req.user as AuthenticatedUser)?.claims?.sub;\n    try {\n      const objectStorageService = new ObjectStorageService();\n      const objectPath = await objectStorageService.trySetObjectEntityAclPolicy(\n        req.body.imageURL,\n        {\n          owner: userId,\n          visibility: \"public\", // Article backdrops should be publicly accessible\n        }\n      );\n\n      res.status(200).json({\n        objectPath: objectPath,\n        publicUrl: `${req.protocol}://${req.get('host')}/objects${objectPath}`\n      });\n    } catch (error) {\n      console.error(\"Error setting article backdrop:\", error);\n      res.status(500).json({ error: \"Internal server error\" });\n    }\n  });\n\n  // Serve uploaded objects\n  app.get(\"/objects/:objectPath(*)\", async (req, res) => {\n    const objectStorageService = new ObjectStorageService();\n    try {\n      const objectFile = await objectStorageService.getObjectEntityFile(\n        req.path,\n      );\n      objectStorageService.downloadObject(objectFile, res);\n    } catch (error) {\n      console.error(\"Error accessing object:\", error);\n      if (error instanceof ObjectNotFoundError) {\n        return res.sendStatus(404);\n      }\n      return res.sendStatus(500);\n    }\n  });\n\n  // News synchronization endpoints\n  // Manual news sync (for testing and immediate updates)\n  app.post(\"/api/news/sync\", async (req: any, res) => {\n    try {\n      console.log(\"Manual news sync requested by user:\", req.user?.claims?.sub);\n      \n      // Clear old articles first\n      await storage.clearOldNewsArticles();\n      \n      // Fetch fresh news\n      const freshNews = await newsService.fetchAllNews();\n      \n      if (freshNews.length > 0) {\n        // Convert ProcessedArticle to Article format for database\n        const articleData = freshNews.map(news => ({\n          id: news.id,\n          title: news.title,\n          content: news.content,\n          excerpt: news.excerpt,\n          category: news.category,\n          subcategory: null,\n          imageUrl: news.imageUrl || null,\n          author: \"ChillVibes Team\",\n          isDraft: false,\n          isFeatured: news.isFeatured,\n          isRealtime: true,\n          sourceUrl: news.sourceUrl,\n          tags: null,\n          createdAt: news.createdAt,\n          updatedAt: news.updatedAt,\n        }));\n        \n        await storage.syncNewsArticles(articleData);\n        \n        res.json({ \n          success: true, \n          message: `Successfully synced ${freshNews.length} news articles`,\n          articlesCount: freshNews.length \n        });\n      } else {\n        res.json({ \n          success: true, \n          message: \"No new articles found\",\n          articlesCount: 0 \n        });\n      }\n    } catch (error) {\n      console.error(\"Manual news sync failed:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to sync news articles\",\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      });\n    }\n  });\n\n  // Get news sync status\n  app.get(\"/api/news/status\", async (req, res) => {\n    try {\n      const totalArticles = await storage.getArticles();\n      const techCount = await storage.getArticles(\"tech\");\n      const financeCount = await storage.getArticles(\"finance\");\n      const jiuJitsuCount = await storage.getArticles(\"jiu-jitsu\");\n      const surfCount = await storage.getArticles(\"surf\");\n      const featuredCount = await storage.getFeaturedArticles(10);\n      \n      res.json({\n        totalArticles: totalArticles.length,\n        categories: {\n          \"tech\": techCount.length,\n          \"finance\": financeCount.length,\n          \"jiu-jitsu\": jiuJitsuCount.length,\n          \"surf\": surfCount.length,\n        },\n        featuredCount: featuredCount.length,\n        lastSyncTime: new Date().toISOString(),\n      });\n    } catch (error) {\n      res.status(500).json({ message: \"Failed to get news status\" });\n    }\n  });\n\n  // Generate original content endpoint\n  app.post(\"/api/content/generate\", async (req, res) => {\n    try {\n      console.log(\"Generating original content...\");\n      \n      // Generate daily original articles (2-3 per category)\n      const originalArticles = contentService.generateDailyOriginalContent();\n      \n      if (originalArticles.length > 0) {\n        // Convert to article format for database\n        const articleData = originalArticles.map(article => ({\n          id: article.id,\n          title: article.title,\n          content: article.content,\n          excerpt: article.excerpt,\n          category: article.category,\n          subcategory: article.subcategory || null,\n          imageUrl: article.imageUrl || null,\n          author: article.author,\n          isDraft: false,\n          isFeatured: article.isFeatured,\n          isRealtime: article.isRealtime || false,\n          sourceUrl: article.sourceUrl || null,\n          tags: article.tags || null,\n          createdAt: article.createdAt,\n          updatedAt: article.updatedAt,\n        }));\n        \n        await storage.syncNewsArticles(articleData);\n        \n        res.json({ \n          success: true, \n          message: `Successfully generated ${originalArticles.length} original articles`,\n          articlesCount: originalArticles.length \n        });\n      } else {\n        res.json({ \n          success: true, \n          message: \"No articles generated\",\n          articlesCount: 0 \n        });\n      }\n    } catch (error) {\n      console.error(\"Content generation failed:\", error);\n      res.status(500).json({ \n        success: false, \n        message: \"Failed to generate original content\",\n        error: error instanceof Error ? error.message : \"Unknown error\"\n      });\n    }\n  });\n\n  const httpServer = createServer(app);\n  \n  // Auto-sync content on startup and every 6 hours (mix of original content and news)\n  const performContentSync = async () => {\n    try {\n      console.log(\"Performing automatic content sync...\");\n      \n      // Clear old articles first\n      await storage.clearOldNewsArticles();\n      \n      // Generate comprehensive content with real-time news integration\n      const originalArticles = await enhancedContentService.generateDailyContent();\n      \n      if (originalArticles.length > 0) {\n        // Convert to article format with enhanced fields\n        const articleData = originalArticles.map(article => ({\n          id: article.id,\n          title: article.title,\n          content: article.content,\n          excerpt: article.excerpt,\n          category: article.category,\n          subcategory: article.subcategory || null,\n          imageUrl: article.imageUrl || null,\n          author: article.author,\n          isDraft: false,\n          isFeatured: article.isFeatured,\n          isRealtime: article.isRealtime,\n          sourceUrl: article.sourceUrl || null,\n          tags: article.tags || null,\n          createdAt: article.createdAt,\n          updatedAt: article.updatedAt,\n        }));\n        \n        await storage.syncNewsArticles(articleData);\n        console.log(`Automatic content sync completed: ${originalArticles.length} comprehensive articles with real-time integration`);\n      } else {\n        console.log(\"Automatic content sync: No new content found\");\n      }\n    } catch (error) {\n      console.error(\"Automatic content sync failed:\", error);\n    }\n  };\n\n  // Initial content sync on startup (delayed to allow server to start)\n  setTimeout(() => {\n    performContentSync();\n  }, 5000); // 5 second delay\n\n  // Schedule automatic content sync every 6 hours\n  const sixHours = 6 * 60 * 60 * 1000;\n  setInterval(performContentSync, sixHours);\n  \n  console.log(\"Content auto-sync scheduled: every 6 hours (comprehensive lifestyle media with real-time updates)\");\n\n  return httpServer;\n}\n","size_bytes":21131},"server/storage.ts":{"content":"import { \n  type User, \n  type UpsertUser, \n  type Article, \n  type InsertArticle, \n  type SiteSettings, \n  type InsertSiteSettings,\n  type Comment,\n  type InsertComment\n} from \"@shared/schema\";\nimport { DatabaseStorage } from \"./databaseStorage\";\n\nexport interface IStorage {\n  // User operations\n  getUser(id: string): Promise<User | undefined>;\n  upsertUser(user: UpsertUser): Promise<User>;\n  \n  // Article operations\n  getArticles(category?: string, subcategory?: string): Promise<Article[]>;\n  getArticle(id: string): Promise<Article | undefined>;\n  createArticle(article: InsertArticle): Promise<Article>;\n  updateArticle(id: string, article: Partial<InsertArticle>): Promise<Article | undefined>;\n  deleteArticle(id: string): Promise<boolean>;\n  getFeaturedArticles(limit?: number): Promise<Article[]>;\n  \n  // Comment operations\n  getComments(articleId: string): Promise<Comment[]>;\n  createComment(insertComment: InsertComment): Promise<Comment>;\n  deleteComment(id: string, userId: string): Promise<boolean>;\n  \n  // Site settings operations\n  getSiteSettings(): Promise<SiteSettings>;\n  updateSiteSettings(settings: Partial<InsertSiteSettings>): Promise<SiteSettings>;\n  \n  // News synchronization operations\n  syncNewsArticles(articles: Article[]): Promise<void>;\n  clearOldNewsArticles(): Promise<void>;\n}\n\nexport const storage = new DatabaseStorage();","size_bytes":1366},"server/vite.ts":{"content":"import express, { type Express } from \"express\";\nimport fs from \"fs\";\nimport path from \"path\";\nimport { createServer as createViteServer, createLogger } from \"vite\";\nimport { type Server } from \"http\";\nimport viteConfig from \"../vite.config\";\nimport { nanoid } from \"nanoid\";\n\nconst viteLogger = createLogger();\n\nexport function log(message: string, source = \"express\") {\n  const formattedTime = new Date().toLocaleTimeString(\"en-US\", {\n    hour: \"numeric\",\n    minute: \"2-digit\",\n    second: \"2-digit\",\n    hour12: true,\n  });\n\n  console.log(`${formattedTime} [${source}] ${message}`);\n}\n\nexport async function setupVite(app: Express, server: Server) {\n  const serverOptions = {\n    middlewareMode: true,\n    hmr: { server },\n    allowedHosts: true as const,\n  };\n\n  const vite = await createViteServer({\n    ...viteConfig,\n    configFile: false,\n    customLogger: {\n      ...viteLogger,\n      error: (msg, options) => {\n        viteLogger.error(msg, options);\n        process.exit(1);\n      },\n    },\n    server: serverOptions,\n    appType: \"custom\",\n  });\n\n  app.use(vite.middlewares);\n  app.use(\"*\", async (req, res, next) => {\n    const url = req.originalUrl;\n\n    try {\n      const clientTemplate = path.resolve(\n        import.meta.dirname,\n        \"..\",\n        \"client\",\n        \"index.html\",\n      );\n\n      // always reload the index.html file from disk incase it changes\n      let template = await fs.promises.readFile(clientTemplate, \"utf-8\");\n      template = template.replace(\n        `src=\"/src/main.tsx\"`,\n        `src=\"/src/main.tsx?v=${nanoid()}\"`,\n      );\n      const page = await vite.transformIndexHtml(url, template);\n      res.status(200).set({ \"Content-Type\": \"text/html\" }).end(page);\n    } catch (e) {\n      vite.ssrFixStacktrace(e as Error);\n      next(e);\n    }\n  });\n}\n\nexport function serveStatic(app: Express) {\n  const distPath = path.resolve(import.meta.dirname, \"public\");\n\n  if (!fs.existsSync(distPath)) {\n    throw new Error(\n      `Could not find the build directory: ${distPath}, make sure to build the client first`,\n    );\n  }\n\n  app.use(express.static(distPath));\n\n  // fall through to index.html if the file doesn't exist\n  app.use(\"*\", (_req, res) => {\n    res.sendFile(path.resolve(distPath, \"index.html\"));\n  });\n}\n","size_bytes":2263},"shared/schema.ts":{"content":"import { sql } from \"drizzle-orm\";\nimport { pgTable, text, varchar, boolean, timestamp, jsonb, index } from \"drizzle-orm/pg-core\";\nimport { relations } from \"drizzle-orm\";\nimport { createInsertSchema } from \"drizzle-zod\";\nimport { z } from \"zod\";\n\nexport const articles = pgTable(\"articles\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  title: text(\"title\").notNull(),\n  content: text(\"content\").notNull(),\n  excerpt: text(\"excerpt\").notNull(),\n  category: varchar(\"category\", { length: 50 }).notNull(),\n  subcategory: varchar(\"subcategory\", { length: 50 }),\n  imageUrl: text(\"image_url\"),\n  author: text(\"author\").notNull().default(\"Admin\"),\n  isDraft: boolean(\"is_draft\").notNull().default(false),\n  isFeatured: boolean(\"is_featured\").notNull().default(false),\n  isRealtime: boolean(\"is_realtime\").notNull().default(false),\n  sourceUrl: text(\"source_url\"),\n  tags: text(\"tags\").array(),\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n  updatedAt: timestamp(\"updated_at\").notNull().default(sql`now()`),\n});\n\nexport const insertArticleSchema = createInsertSchema(articles).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n}).extend({\n  subcategory: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  sourceUrl: z.string().optional(),\n  isRealtime: z.boolean().optional().default(false),\n});\n\nexport type InsertArticle = z.infer<typeof insertArticleSchema>;\nexport type Article = typeof articles.$inferSelect;\n\n\n\nexport const siteSettings = pgTable(\"site_settings\", {\n  id: varchar(\"id\").primaryKey().default(\"site\"),\n  heroBackgroundUrl: text(\"hero_background_url\").default(\"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"),\n  backgroundAudioUrl: text(\"background_audio_url\"),\n  textSize: varchar(\"text_size\", { length: 20 }).default(\"medium\"),\n  textColor: varchar(\"text_color\", { length: 7 }).default(\"#ffffff\"),\n  updatedAt: timestamp(\"updated_at\").notNull().default(sql`now()`),\n});\n\nexport const insertSiteSettingsSchema = createInsertSchema(siteSettings).omit({\n  id: true,\n  updatedAt: true,\n});\n\nexport type InsertSiteSettings = z.infer<typeof insertSiteSettingsSchema>;\nexport type SiteSettings = typeof siteSettings.$inferSelect;\n\n// Session storage table for authentication\nexport const sessions = pgTable(\n  \"sessions\",\n  {\n    sid: varchar(\"sid\").primaryKey(),\n    sess: jsonb(\"sess\").notNull(),\n    expire: timestamp(\"expire\").notNull(),\n  },\n  (table) => [index(\"IDX_session_expire\").on(table.expire)],\n);\n\n// User storage table for authentication\nexport const authUsers = pgTable(\"auth_users\", {\n  id: varchar(\"id\").primaryKey(),\n  email: varchar(\"email\").unique(),\n  firstName: varchar(\"first_name\"),\n  lastName: varchar(\"last_name\"),\n  profileImageUrl: varchar(\"profile_image_url\"),\n  createdAt: timestamp(\"created_at\").defaultNow(),\n  updatedAt: timestamp(\"updated_at\").defaultNow(),\n});\n\nexport type UpsertUser = typeof authUsers.$inferInsert;\nexport type User = typeof authUsers.$inferSelect;\n\n// Comments table\nexport const comments = pgTable(\"comments\", {\n  id: varchar(\"id\").primaryKey().default(sql`gen_random_uuid()`),\n  articleId: varchar(\"article_id\").notNull(),\n  userId: varchar(\"user_id\").notNull(),\n  content: text(\"content\").notNull(),\n  imageUrl: text(\"image_url\"),\n  authorName: varchar(\"author_name\").notNull(),\n  authorAvatar: varchar(\"author_avatar\"),\n  createdAt: timestamp(\"created_at\").notNull().default(sql`now()`),\n  updatedAt: timestamp(\"updated_at\").notNull().default(sql`now()`),\n});\n\nexport const insertCommentSchema = createInsertSchema(comments).omit({\n  id: true,\n  createdAt: true,\n  updatedAt: true,\n});\n\nexport type InsertComment = z.infer<typeof insertCommentSchema>;\nexport type Comment = typeof comments.$inferSelect & {\n  authorName?: string | null;\n  authorAvatar?: string | null;\n};\n\n// Relations\nexport const articlesRelations = relations(articles, ({ many }) => ({\n  comments: many(comments),\n}));\n\nexport const commentsRelations = relations(comments, ({ one }) => ({\n  article: one(articles, {\n    fields: [comments.articleId],\n    references: [articles.id],\n  }),\n}));\n","size_bytes":4169},"client/src/App.tsx":{"content":"import { Switch, Route } from \"wouter\";\nimport { queryClient } from \"./lib/queryClient\";\nimport { QueryClientProvider } from \"@tanstack/react-query\";\nimport { Toaster } from \"@/components/ui/toaster\";\nimport { TooltipProvider } from \"@/components/ui/tooltip\";\nimport Home from \"@/pages/home\";\nimport Category from \"@/pages/category\";\nimport Subcategory from \"@/pages/subcategory\";\nimport Article from \"@/pages/article\";\nimport Admin from \"@/pages/admin\";\nimport NotFound from \"@/pages/not-found\";\nimport Navbar from \"@/components/navbar\";\nimport Footer from \"@/components/footer\";\n\nfunction Router() {\n  return (\n    <div className=\"min-h-screen flex flex-col\">\n      <Navbar />\n      <main className=\"flex-1\">\n        <Switch>\n          <Route path=\"/\" component={Home} />\n          <Route path=\"/category/:category/:subcategory\" component={Subcategory} />\n          <Route path=\"/category/:category\" component={Category} />\n          <Route path=\"/article/:id\" component={Article} />\n          <Route path=\"/admin\" component={Admin} />\n          <Route component={NotFound} />\n        </Switch>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <QueryClientProvider client={queryClient}>\n      <TooltipProvider>\n        <Toaster />\n        <Router />\n      </TooltipProvider>\n    </QueryClientProvider>\n  );\n}\n\nexport default App;\n","size_bytes":1365},"client/src/index.css":{"content":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n:root {\n  --background: hsl(0, 0%, 100%);\n  --foreground: hsl(20, 14.3%, 4.1%);\n  --muted: hsl(60, 4.8%, 95.9%);\n  --muted-foreground: hsl(25, 5.3%, 44.7%);\n  --popover: hsl(0, 0%, 100%);\n  --popover-foreground: hsl(20, 14.3%, 4.1%);\n  --card: hsl(0, 0%, 100%);\n  --card-foreground: hsl(20, 14.3%, 4.1%);\n  --border: hsl(20, 5.9%, 90%);\n  --input: hsl(20, 5.9%, 90%);\n  --primary: hsl(174, 72%, 56%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(60, 4.8%, 95.9%);\n  --secondary-foreground: hsl(24, 9.8%, 10%);\n  --accent: hsl(60, 4.8%, 95.9%);\n  --accent-foreground: hsl(24, 9.8%, 10%);\n  --destructive: hsl(0, 84.2%, 60.2%);\n  --destructive-foreground: hsl(60, 9.1%, 97.8%);\n  --ring: hsl(174, 72%, 56%);\n  --radius: 0.5rem;\n  \n  /* Custom ocean/surf theme colors */\n  --ocean: hsl(174, 72%, 56%);\n  --surf: hsl(188, 94%, 43%);\n  --sunset: hsl(45, 93%, 47%);\n  --sand: hsl(48, 89%, 88%);\n  --wave: hsl(200, 100%, 95%);\n}\n\n.dark {\n  --background: hsl(240, 10%, 3.9%);\n  --foreground: hsl(0, 0%, 98%);\n  --muted: hsl(240, 3.7%, 15.9%);\n  --muted-foreground: hsl(240, 5%, 64.9%);\n  --popover: hsl(240, 10%, 3.9%);\n  --popover-foreground: hsl(0, 0%, 98%);\n  --card: hsl(240, 10%, 3.9%);\n  --card-foreground: hsl(0, 0%, 98%);\n  --border: hsl(240, 3.7%, 15.9%);\n  --input: hsl(240, 3.7%, 15.9%);\n  --primary: hsl(174, 72%, 56%);\n  --primary-foreground: hsl(0, 0%, 100%);\n  --secondary: hsl(240, 3.7%, 15.9%);\n  --secondary-foreground: hsl(0, 0%, 98%);\n  --accent: hsl(240, 3.7%, 15.9%);\n  --accent-foreground: hsl(0, 0%, 98%);\n  --destructive: hsl(0, 62.8%, 30.6%);\n  --destructive-foreground: hsl(0, 0%, 98%);\n  --ring: hsl(240, 4.9%, 83.9%);\n  --radius: 0.5rem;\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n\n  body {\n    @apply font-sans antialiased bg-background text-foreground;\n  }\n}\n\n@layer utilities {\n  .ocean {\n    color: var(--ocean);\n  }\n  \n  .surf {\n    color: var(--surf);\n  }\n  \n  .sunset {\n    color: var(--sunset);\n  }\n  \n  .sand {\n    color: var(--sand);\n  }\n  \n  .wave {\n    color: var(--wave);\n  }\n  \n  .bg-ocean {\n    background-color: var(--ocean);\n  }\n  \n  .bg-surf {\n    background-color: var(--surf);\n  }\n  \n  .bg-sunset {\n    background-color: var(--sunset);\n  }\n  \n  .bg-sand {\n    background-color: var(--sand);\n  }\n  \n  .bg-wave {\n    background-color: var(--wave);\n  }\n  \n  .border-ocean {\n    border-color: var(--ocean);\n  }\n  \n  .border-surf {\n    border-color: var(--surf);\n  }\n  \n  .hover\\:bg-ocean:hover {\n    background-color: var(--ocean);\n  }\n  \n  .hover\\:text-ocean:hover {\n    color: var(--ocean);\n  }\n  \n  .hover\\:text-surf:hover {\n    color: var(--surf);\n  }\n  \n  .hover\\:border-ocean:hover {\n    border-color: var(--ocean);\n  }\n  \n  .hover\\:border-surf:hover {\n    border-color: var(--surf);\n  }\n  \n  .text-ocean {\n    color: var(--ocean);\n  }\n  \n  .text-surf {\n    color: var(--surf);\n  }\n  \n  /* Category text colors */\n  .category-jiu-jitsu {\n    color: rgb(234 179 8); /* yellow-500 */\n  }\n  \n  .category-surf {\n    color: rgb(59 130 246); /* blue-500 */\n  }\n  \n  /* Custom range slider styling for volume control */\n  input[type=\"range\"]::-webkit-slider-thumb {\n    appearance: none;\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n    border: 2px solid #0891b2;\n  }\n  \n  input[type=\"range\"]::-moz-range-thumb {\n    height: 16px;\n    width: 16px;\n    border-radius: 50%;\n    background: white;\n    cursor: pointer;\n    border: 2px solid #0891b2;\n  }\n  \n  /* Enhanced Visual Effects for Article Imagery */\n  \n  /* Parallax container for background images */\n  .parallax-container {\n    transform: translateZ(0);\n    will-change: transform;\n  }\n  \n  .parallax-image {\n    transition: transform 0.3s ease-out;\n    filter: brightness(1.0) contrast(1.2) saturate(1.4) vibrance(1.1);\n  }\n  \n  /* Floating animated elements */\n  .floating-element {\n    position: absolute;\n    border-radius: 50%;\n    background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(16, 185, 129, 0.1));\n    animation: float 8s ease-in-out infinite;\n    pointer-events: none;\n  }\n  \n  .floating-element-1 {\n    width: 80px;\n    height: 80px;\n    top: 20%;\n    left: 10%;\n    animation-delay: 0s;\n    animation-duration: 12s;\n  }\n  \n  .floating-element-2 {\n    width: 120px;\n    height: 120px;\n    top: 60%;\n    right: 15%;\n    animation-delay: -4s;\n    animation-duration: 16s;\n  }\n  \n  .floating-element-3 {\n    width: 60px;\n    height: 60px;\n    bottom: 30%;\n    left: 70%;\n    animation-delay: -8s;\n    animation-duration: 10s;\n  }\n  \n  @keyframes float {\n    0%, 100% { transform: translateY(0px) translateX(0px) rotate(0deg); opacity: 0.3; }\n    25% { transform: translateY(-20px) translateX(10px) rotate(90deg); opacity: 0.6; }\n    50% { transform: translateY(-10px) translateX(-15px) rotate(180deg); opacity: 0.4; }\n    75% { transform: translateY(-30px) translateX(5px) rotate(270deg); opacity: 0.7; }\n  }\n  \n  /* Content enhancement effects */\n  .content-container {\n    position: relative;\n    z-index: 10;\n  }\n  \n  .content-text {\n    position: relative;\n    z-index: 20;\n    background: transparent;\n    backdrop-filter: none;\n    border-radius: 16px;\n    padding: 2.5rem;\n    border: none;\n    box-shadow: none;\n  }\n  \n  .content-backdrop {\n    background: radial-gradient(ellipse at center, rgba(59, 130, 246, 0.05) 0%, transparent 70%);\n    border-radius: 16px;\n    filter: blur(20px);\n  }\n  \n  /* Author bio enhancements */\n  .author-bio-container {\n    position: relative;\n  }\n  \n  .author-bio-glow {\n    background: linear-gradient(45deg, \n      rgba(59, 130, 246, 0.1) 0%, \n      rgba(16, 185, 129, 0.08) 25%,\n      rgba(139, 92, 246, 0.06) 50%,\n      rgba(59, 130, 246, 0.08) 75%,\n      rgba(16, 185, 129, 0.1) 100%\n    );\n    animation: glow-pulse 4s ease-in-out infinite;\n  }\n  \n  @keyframes glow-pulse {\n    0%, 100% { opacity: 0.3; transform: scale(1); }\n    50% { opacity: 0.6; transform: scale(1.02); }\n  }\n  \n  /* Enhanced Article Typography */\n  .enhanced-article-prose {\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", system-ui, sans-serif;\n  }\n  \n  /* Enhanced headings with bright white text */\n  .content-text h1 {\n    font-size: calc(2.5rem * var(--custom-text-size-multiplier, 1)) !important;\n    font-weight: 800 !important;\n    text-shadow: 6px 6px 20px rgba(0,0,0,1), 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,0.9), 0 0 15px rgba(0,0,0,0.8) !important;\n    margin-bottom: 2rem !important;\n    margin-top: 3rem !important;\n    color: var(--custom-text-color, #ffffff) !important;\n    letter-spacing: -0.02em;\n    line-height: 1.2 !important;\n  }\n  \n  .content-text h2 {\n    font-size: calc(2rem * var(--custom-text-size-multiplier, 1)) !important;\n    font-weight: 700 !important;\n    text-shadow: 6px 6px 18px rgba(0,0,0,1), 4px 4px 10px rgba(0,0,0,1), 2px 2px 5px rgba(0,0,0,0.9), 0 0 12px rgba(0,0,0,0.8) !important;\n    margin-bottom: 1.75rem !important;\n    margin-top: 2.5rem !important;\n    color: var(--custom-text-color, #ffffff) !important;\n    letter-spacing: -0.01em;\n    line-height: 1.3 !important;\n  }\n  \n  .content-text h3 {\n    font-size: calc(1.5rem * var(--custom-text-size-multiplier, 1)) !important;\n    font-weight: 600 !important;\n    text-shadow: 5px 5px 15px rgba(0,0,0,1), 3px 3px 8px rgba(0,0,0,1), 2px 2px 4px rgba(0,0,0,0.9), 0 0 10px rgba(0,0,0,0.8) !important;\n    margin-bottom: 1.5rem !important;\n    margin-top: 2rem !important;\n    color: var(--custom-text-color, #ffffff) !important;\n    line-height: 1.4 !important;\n  }\n  \n  /* Enhanced paragraph styling with custom color support */\n  .content-text p {\n    font-size: calc(1.125rem * var(--custom-text-size-multiplier, 1)) !important;\n    font-weight: 500 !important;\n    text-shadow: 5px 5px 15px rgba(0,0,0,1), 3px 3px 10px rgba(0,0,0,1), 1px 1px 5px rgba(0,0,0,0.9), 0 0 10px rgba(0,0,0,0.8) !important;\n    margin-bottom: 1.5rem !important;\n    line-height: 1.9 !important;\n    color: var(--custom-text-color, #ffffff) !important;\n    letter-spacing: 0.01em;\n  }\n  \n  /* First paragraph enhancement (drop cap effect) */\n  .content-text p:first-of-type:first-letter {\n    float: left;\n    font-size: 4rem;\n    font-weight: 700;\n    line-height: 3rem;\n    margin: 0.5rem 0.75rem 0 0;\n    text-shadow: 6px 6px 15px rgba(0,0,0,1), 3px 3px 8px rgba(0,0,0,1), 0 0 12px rgba(0,0,0,0.8);\n    color: #ffffff !important;\n  }\n  \n  /* Enhanced links */\n  .content-text a {\n    color: #ffffff !important;\n    text-decoration: none !important;\n    border-bottom: 2px solid rgba(255, 255, 255, 0.8) !important;\n    transition: all 0.3s ease !important;\n    text-shadow: 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,1), 0 0 8px rgba(0,0,0,0.9) !important;\n    font-weight: 600 !important;\n    background: transparent !important;\n    padding: 2px 4px !important;\n    border-radius: 4px !important;\n  }\n  \n  .content-text a:hover {\n    color: #ffffff !important;\n    border-bottom-color: rgba(255, 255, 255, 1) !important;\n    text-shadow: 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,1), 0 0 10px rgba(255,255,255,0.3) !important;\n    background: transparent !important;\n  }\n  \n  /* Enhanced emphasis and strong text */\n  .content-text strong {\n    font-weight: 700 !important;\n    color: #ffffff !important;\n    text-shadow: 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,1), 0 0 8px rgba(0,0,0,0.9) !important;\n    background: transparent !important;\n    padding: 1px 3px !important;\n    border-radius: 3px !important;\n  }\n  \n  .content-text em {\n    color: #ffffff !important;\n    font-style: italic !important;\n    text-shadow: 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,1), 0 0 8px rgba(0,0,0,0.9) !important;\n    background: transparent !important;\n    padding: 1px 2px !important;\n    border-radius: 2px !important;\n  }\n  \n  /* Enhanced blockquotes */\n  .content-text blockquote {\n    border-left: 4px solid #60a5fa !important;\n    background: linear-gradient(135deg, rgba(96, 165, 250, 0.1) 0%, rgba(52, 211, 153, 0.05) 100%) !important;\n    padding: 1.5rem 2rem !important;\n    margin: 2rem 0 !important;\n    border-radius: 0 12px 12px 0 !important;\n    backdrop-filter: blur(2px) !important;\n    position: relative !important;\n  }\n  \n  .content-text blockquote p {\n    font-style: italic !important;\n    font-size: 1.25rem !important;\n    color: #ffffff !important;\n    margin-bottom: 0 !important;\n    text-shadow: 3px 3px 8px rgba(0,0,0,1), 1px 1px 4px rgba(0,0,0,0.9) !important;\n  }\n  \n  /* Enhanced code blocks */\n  .content-text code {\n    background: transparent !important;\n    color: #ffffff !important;\n    padding: 0.25rem 0.5rem !important;\n    border-radius: 6px !important;\n    font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace !important;\n    font-size: 0.9em !important;\n    text-shadow: 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,1), 0 0 8px rgba(0,0,0,0.9) !important;\n    border: 1px solid rgba(255, 255, 255, 0.3) !important;\n    font-weight: 500 !important;\n  }\n  \n  /* Enhanced lists */\n  .content-text ul, .content-text ol {\n    margin: 1.5rem 0 !important;\n    padding-left: 2rem !important;\n  }\n  \n  .content-text li {\n    margin-bottom: 0.75rem !important;\n    line-height: 1.8 !important;\n    text-shadow: 3px 3px 8px rgba(0,0,0,1), 1px 1px 4px rgba(0,0,0,0.9) !important;\n    color: #ffffff !important;\n  }\n  \n  .content-text ul li::marker {\n    color: #60a5fa !important;\n    font-size: 1.2em !important;\n  }\n  \n  .content-text ol li::marker {\n    color: #34d399 !important;\n    font-weight: 600 !important;\n  }\n  \n  /* Lead paragraph styling */\n  .lead-paragraph {\n    position: relative;\n    overflow: hidden;\n  }\n  \n  .lead-paragraph::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 2px;\n    background: linear-gradient(90deg, transparent 0%, #60a5fa 50%, transparent 100%);\n  }\n  \n  .lead-paragraph p {\n    position: relative;\n    z-index: 10;\n  }\n  \n  /* Reading progress styling */\n  .reading-progress-container {\n    padding: 1rem 0;\n    border-top: 1px solid rgba(255,255,255,0.1);\n    margin-top: 2rem;\n  }\n  \n  /* Enhanced article title */\n  .enhanced-title {\n    text-shadow: 6px 6px 20px rgba(0,0,0,1), 4px 4px 12px rgba(0,0,0,1), 2px 2px 6px rgba(0,0,0,0.9), 0 0 15px rgba(0,0,0,0.8) !important;\n    color: #ffffff !important;\n    letter-spacing: -0.02em;\n    position: relative;\n  }\n  \n  .enhanced-title::after {\n    content: '';\n    position: absolute;\n    bottom: -8px;\n    left: 0;\n    width: 60px;\n    height: 3px;\n    background: linear-gradient(90deg, #60a5fa 0%, #34d399 100%);\n    border-radius: 2px;\n    box-shadow: 0 2px 8px rgba(96, 165, 250, 0.4);\n  }\n  \n  /* Responsive typography improvements */\n  @media (max-width: 768px) {\n    .content-text h1 {\n      font-size: 2rem !important;\n      margin-top: 2rem !important;\n    }\n    \n    .content-text h2 {\n      font-size: 1.75rem !important;\n      margin-top: 2rem !important;\n    }\n    \n    .content-text h3 {\n      font-size: 1.375rem !important;\n      margin-top: 1.5rem !important;\n    }\n    \n    .content-text p {\n      font-size: 1.0625rem !important;\n      line-height: 1.8 !important;\n    }\n    \n    .content-text p:first-of-type:first-letter {\n      font-size: 3rem;\n      line-height: 2.5rem;\n      margin: 0.25rem 0.5rem 0 0;\n    }\n  }\n  \n  /* Scroll-triggered animations */\n  .content-container {\n    animation: fadeInUp 1s ease-out;\n  }\n  \n  .author-bio-container {\n    animation: fadeInUp 1s ease-out 0.3s both;\n  }\n  \n  @keyframes fadeInUp {\n    from {\n      opacity: 0;\n      transform: translateY(30px);\n    }\n    to {\n      opacity: 1;\n      transform: translateY(0);\n    }\n  }\n}\n","size_bytes":13740},"client/src/main.tsx":{"content":"import { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport \"./index.css\";\n\ncreateRoot(document.getElementById(\"root\")!).render(<App />);\n","size_bytes":157},"client/src/components/AudioController.tsx":{"content":"import { useState, useEffect, useRef } from 'react';\nimport { Volume2, VolumeX, Play, Pause } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\n\ninterface AudioControllerProps {\n  className?: string;\n}\n\nexport function AudioController({ className = '' }: AudioControllerProps) {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n\n  // Create ocean wave sounds using HTML5 Audio with data URI\n  const createOceanWaveDataURI = () => {\n    // Create a simple ocean wave sound using data URI with base64 encoded audio\n    // This is a minimal WAV file with ocean-like white noise\n    const sampleRate = 44100;\n    const duration = 10; // 10 seconds, will loop\n    const numSamples = sampleRate * duration;\n    \n    // Create WAV header\n    const buffer = new ArrayBuffer(44 + numSamples * 2);\n    const view = new DataView(buffer);\n    \n    // WAV header\n    const writeString = (offset: number, string: string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + numSamples * 2, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, 1, true);\n    view.setUint32(24, sampleRate, true);\n    view.setUint32(28, sampleRate * 2, true);\n    view.setUint16(32, 2, true);\n    view.setUint16(34, 16, true);\n    writeString(36, 'data');\n    view.setUint32(40, numSamples * 2, true);\n    \n    // Generate ocean wave sound data\n    let offset = 44;\n    for (let i = 0; i < numSamples; i++) {\n      // Create ocean-like sound with multiple frequency components\n      const t = i / sampleRate;\n      \n      // Base wave sound (low frequency)\n      const wave1 = Math.sin(2 * Math.PI * 0.5 * t) * Math.sin(2 * Math.PI * 0.3 * t);\n      \n      // Higher frequency waves\n      const wave2 = Math.sin(2 * Math.PI * 2 * t) * 0.3 * Math.sin(2 * Math.PI * 0.1 * t);\n      \n      // White noise for wave texture (filtered)\n      const noise = (Math.random() * 2 - 1) * 0.1;\n      \n      // Combine and apply envelope\n      const envelope = 0.5 + 0.5 * Math.sin(2 * Math.PI * 0.05 * t); // Slow amplitude modulation\n      const sample = (wave1 * 0.4 + wave2 * 0.3 + noise) * envelope * 0.3;\n      \n      // Convert to 16-bit PCM\n      const pcm = Math.max(-1, Math.min(1, sample));\n      view.setInt16(offset, pcm * 0x7FFF, true);\n      offset += 2;\n    }\n    \n    // Convert to base64\n    const bytes = new Uint8Array(buffer);\n    let binary = '';\n    for (let i = 0; i < bytes.length; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    \n    return 'data:audio/wav;base64,' + btoa(binary);\n  };\n\n  const initAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n    }\n    \n    const audio = new Audio();\n    audio.src = createOceanWaveDataURI();\n    audio.loop = true;\n    audio.volume = 0.3;\n    audio.preload = 'auto';\n    \n    audioRef.current = audio;\n    \n    // Event listeners\n    audio.addEventListener('play', () => setIsPlaying(true));\n    audio.addEventListener('pause', () => setIsPlaying(false));\n    audio.addEventListener('ended', () => setIsPlaying(false));\n    \n    return audio;\n  };\n\n  const startAudio = async () => {\n    try {\n      if (!audioRef.current) {\n        initAudio();\n      }\n      \n      if (audioRef.current) {\n        await audioRef.current.play();\n      }\n    } catch (error) {\n      console.error('Failed to play ocean sounds:', error);\n    }\n  };\n\n  const stopAudio = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n  };\n\n  const toggleAudio = async () => {\n    if (isPlaying) {\n      stopAudio();\n    } else {\n      await startAudio();\n    }\n  };\n\n  const toggleMute = () => {\n    if (audioRef.current) {\n      if (isMuted) {\n        audioRef.current.volume = 0.3;\n        setIsMuted(false);\n      } else {\n        audioRef.current.volume = 0;\n        setIsMuted(true);\n      }\n    }\n  };\n\n  // Initialize audio on component mount\n  useEffect(() => {\n    initAudio();\n    \n    // Auto-start after user interaction\n    const handleFirstInteraction = async () => {\n      await startAudio();\n      document.removeEventListener('click', handleFirstInteraction);\n      document.removeEventListener('touchstart', handleFirstInteraction);\n      document.removeEventListener('keydown', handleFirstInteraction);\n    };\n\n    document.addEventListener('click', handleFirstInteraction, { once: true });\n    document.addEventListener('touchstart', handleFirstInteraction, { once: true });\n    document.addEventListener('keydown', handleFirstInteraction, { once: true });\n\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current = null;\n      }\n    };\n  }, []);\n\n  return (\n    <div className={`fixed bottom-6 right-6 z-50 flex gap-2 ${className}`}>\n      <Button\n        onClick={toggleAudio}\n        variant=\"secondary\"\n        size=\"icon\"\n        className=\"bg-white/90 backdrop-blur-sm hover:bg-white shadow-lg\"\n        title={isPlaying ? 'Pause ocean sounds' : 'Play ocean sounds'}\n      >\n        {isPlaying ? (\n          <Pause className=\"h-4 w-4 text-gray-700\" />\n        ) : (\n          <Play className=\"h-4 w-4 text-gray-700\" />\n        )}\n      </Button>\n      \n      <Button\n        onClick={toggleMute}\n        variant=\"secondary\"\n        size=\"icon\"\n        className=\"bg-white/90 backdrop-blur-sm hover:bg-white shadow-lg\"\n        title={isMuted ? 'Unmute ocean sounds' : 'Mute ocean sounds'}\n      >\n        {isMuted ? (\n          <VolumeX className=\"h-4 w-4 text-gray-700\" />\n        ) : (\n          <Volume2 className=\"h-4 w-4 text-gray-700\" />\n        )}\n      </Button>\n    </div>\n  );\n}","size_bytes":5923},"client/src/components/CommentsSection.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { insertCommentSchema, type Comment } from \"@shared/schema\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { isUnauthorizedError } from \"@/lib/authUtils\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { ObjectUploader } from \"./ObjectUploader\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Card, CardContent, CardHeader, CardFooter } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Trash2, Image as ImageIcon, MessageCircle } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport type { UploadResult } from '@uppy/core';\n\ninterface CommentsSectionProps {\n  articleId: string;\n}\n\nexport function CommentsSection({ articleId }: CommentsSectionProps) {\n  const { user, isAuthenticated } = useAuth();\n  const { toast } = useToast();\n  const queryClient = useQueryClient();\n  const [uploadedImageUrl, setUploadedImageUrl] = useState<string>(\"\");\n\n  const form = useForm({\n    resolver: zodResolver(insertCommentSchema.pick({ content: true })),\n    defaultValues: {\n      content: \"\",\n    },\n  });\n\n  // Fetch comments\n  const { data: comments = [], isLoading } = useQuery<Comment[]>({\n    queryKey: [\"/api/articles\", articleId, \"comments\"],\n  });\n\n  // Create comment mutation\n  const createCommentMutation = useMutation({\n    mutationFn: async (data: { content: string; imageUrl?: string }) => {\n      const response = await fetch(`/api/articles/${articleId}/comments`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(data),\n        credentials: \"include\",\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(`${response.status}: ${error}`);\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"/api/articles\", articleId, \"comments\"],\n      });\n      form.reset();\n      setUploadedImageUrl(\"\");\n      toast({\n        title: \"Success\",\n        description: \"Comment posted successfully!\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to post comment. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Delete comment mutation\n  const deleteCommentMutation = useMutation({\n    mutationFn: async (commentId: string) => {\n      const response = await fetch(`/api/comments/${commentId}`, {\n        method: \"DELETE\",\n        credentials: \"include\",\n      });\n      if (!response.ok) {\n        const error = await response.text();\n        throw new Error(`${response.status}: ${error}`);\n      }\n      return response.json();\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({\n        queryKey: [\"/api/articles\", articleId, \"comments\"],\n      });\n      toast({\n        title: \"Success\",\n        description: \"Comment deleted successfully!\",\n      });\n    },\n    onError: (error) => {\n      if (isUnauthorizedError(error)) {\n        toast({\n          title: \"Unauthorized\",\n          description: \"You are logged out. Logging in again...\",\n          variant: \"destructive\",\n        });\n        setTimeout(() => {\n          window.location.href = \"/api/login\";\n        }, 500);\n        return;\n      }\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete comment. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const handleGetUploadParameters = async () => {\n    const response = await fetch(\"/api/objects/upload\", {\n      method: \"POST\",\n      credentials: \"include\",\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to get upload URL\");\n    }\n    const data = await response.json();\n    return {\n      method: \"PUT\" as const,\n      url: data.uploadURL,\n    };\n  };\n\n  const handleUploadComplete = async (result: UploadResult<Record<string, unknown>, Record<string, unknown>>) => {\n    if (result.successful && result.successful.length > 0) {\n      const uploadURL = result.successful[0].uploadURL;\n      if (uploadURL) {\n        try {\n          const response = await fetch(\"/api/comment-images\", {\n            method: \"PUT\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ imageURL: uploadURL }),\n            credentials: \"include\",\n          });\n          if (!response.ok) {\n            throw new Error(\"Failed to process image\");\n          }\n          const data = await response.json();\n          setUploadedImageUrl(data.objectPath);\n          toast({\n            title: \"Success\",\n            description: \"Image uploaded successfully!\",\n          });\n        } catch (error) {\n          toast({\n            title: \"Error\",\n            description: \"Failed to process uploaded image.\",\n            variant: \"destructive\",\n          });\n        }\n      }\n    }\n  };\n\n  const onSubmit = (data: { content: string }) => {\n    if (!isAuthenticated) {\n      toast({\n        title: \"Authentication Required\",\n        description: \"Please log in to post a comment.\",\n        variant: \"destructive\",\n      });\n      window.location.href = \"/api/login\";\n      return;\n    }\n\n    createCommentMutation.mutate({\n      ...data,\n      imageUrl: uploadedImageUrl || undefined,\n    });\n  };\n\n  const handleDeleteComment = (commentId: string) => {\n    if (window.confirm(\"Are you sure you want to delete this comment?\")) {\n      deleteCommentMutation.mutate(commentId);\n    }\n  };\n\n  const getUserInitials = (name?: string) => {\n    if (name) {\n      const parts = name.split(\" \");\n      if (parts.length >= 2) {\n        return `${parts[0][0]}${parts[1][0]}`.toUpperCase();\n      }\n      return name[0].toUpperCase();\n    }\n    return \"U\";\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center gap-2\">\n        <MessageCircle className=\"h-5 w-5 text-white\" />\n        <h3 className=\"text-lg font-semibold text-white drop-shadow-lg\">Comments ({comments.length})</h3>\n      </div>\n\n      {/* Comment Form */}\n      {isAuthenticated ? (\n        <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n          <CardHeader>\n            <h4 className=\"font-medium text-white\">Add a Comment</h4>\n          </CardHeader>\n          <CardContent>\n            <Form {...form}>\n              <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-4\">\n                <FormField\n                  control={form.control}\n                  name=\"content\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"text-white\">Your Comment</FormLabel>\n                      <FormControl>\n                        <Textarea\n                          {...field}\n                          placeholder=\"Share your thoughts...\"\n                          className=\"min-h-[100px] bg-white/20 border-white/30 text-white placeholder:text-white/70\"\n                        />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n\n                {/* Image Upload */}\n                <div className=\"flex items-center gap-4\">\n                  <ObjectUploader\n                    maxNumberOfFiles={1}\n                    maxFileSize={5 * 1024 * 1024} // 5MB\n                    onGetUploadParameters={handleGetUploadParameters}\n                    onComplete={handleUploadComplete}\n                    buttonClassName=\"h-9\"\n                  >\n                    <ImageIcon className=\"h-4 w-4 mr-2\" />\n                    Add Photo\n                  </ObjectUploader>\n\n                  {uploadedImageUrl && (\n                    <Badge variant=\"secondary\" className=\"gap-1\">\n                      <ImageIcon className=\"h-3 w-3\" />\n                      Photo added\n                    </Badge>\n                  )}\n                </div>\n\n                <Button\n                  type=\"submit\"\n                  disabled={createCommentMutation.isPending}\n                  className=\"w-full sm:w-auto\"\n                >\n                  {createCommentMutation.isPending ? \"Posting...\" : \"Post Comment\"}\n                </Button>\n              </form>\n            </Form>\n          </CardContent>\n        </Card>\n      ) : (\n        <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n          <CardContent className=\"pt-6\">\n            <div className=\"text-center space-y-4\">\n              <p className=\"text-white/80\">Sign in to join the conversation</p>\n              <Button onClick={() => window.location.href = \"/api/login\"} className=\"bg-ocean hover:bg-teal-600\">\n                Sign In\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Comments List */}\n      <div className=\"space-y-4\">\n        {isLoading ? (\n          <div className=\"space-y-4\">\n            {[...Array(3)].map((_, i) => (\n              <Card key={i} className=\"animate-pulse\">\n                <CardContent className=\"pt-6\">\n                  <div className=\"flex items-start gap-3\">\n                    <div className=\"h-10 w-10 bg-muted rounded-full\" />\n                    <div className=\"flex-1 space-y-2\">\n                      <div className=\"h-4 bg-muted rounded w-24\" />\n                      <div className=\"h-4 bg-muted rounded w-full\" />\n                      <div className=\"h-4 bg-muted rounded w-3/4\" />\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            ))}\n          </div>\n        ) : comments.length > 0 ? (\n          comments.map((comment) => (\n            <Card key={comment.id} className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n              <CardContent className=\"pt-6\">\n                <div className=\"flex items-start gap-3\">\n                  <Avatar className=\"h-10 w-10\">\n                    <AvatarImage src={comment.authorAvatar || undefined} />\n                    <AvatarFallback>\n                      {getUserInitials(comment.authorName)}\n                    </AvatarFallback>\n                  </Avatar>\n\n                  <div className=\"flex-1 space-y-2\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center gap-2\">\n                        <span className=\"font-medium text-white\">\n                          {comment.authorName || \"Anonymous User\"}\n                        </span>\n                        <span className=\"text-sm text-white/70\">\n                          {formatDistanceToNow(new Date(comment.createdAt), { addSuffix: true })}\n                        </span>\n                      </div>\n                      \n                      {user && user.id === comment.userId && (\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleDeleteComment(comment.id)}\n                          disabled={deleteCommentMutation.isPending}\n                          className=\"h-8 w-8 p-0 text-red-400 hover:text-red-300 hover:bg-red-500/20\"\n                        >\n                          <Trash2 className=\"h-4 w-4\" />\n                        </Button>\n                      )}\n                    </div>\n\n                    <p className=\"text-sm leading-relaxed whitespace-pre-wrap text-white\">\n                      {comment.content}\n                    </p>\n\n                    {comment.imageUrl && (\n                      <div className=\"mt-3\">\n                        <img\n                          src={comment.imageUrl}\n                          alt=\"Comment attachment\"\n                          className=\"max-w-md rounded-lg border shadow-sm\"\n                          loading=\"lazy\"\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          ))\n        ) : (\n          <Card className=\"bg-white/10 backdrop-blur-sm border-white/20\">\n            <CardContent className=\"pt-6\">\n              <div className=\"text-center text-white/70\">\n                <MessageCircle className=\"h-12 w-12 mx-auto mb-3 opacity-50\" />\n                <p>No comments yet. Be the first to share your thoughts!</p>\n              </div>\n            </CardContent>\n          </Card>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":13305},"client/src/components/ObjectUploader.tsx":{"content":"import { useState } from \"react\";\nimport type { ReactNode } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport { DashboardModal } from \"@uppy/react\";\nimport \"@uppy/core/dist/style.min.css\";\nimport \"@uppy/dashboard/dist/style.min.css\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface ObjectUploaderProps {\n  maxNumberOfFiles?: number;\n  maxFileSize?: number;\n  onGetUploadParameters: () => Promise<{\n    method: \"PUT\";\n    url: string;\n  }>;\n  onComplete?: (\n    result: UploadResult<Record<string, unknown>, Record<string, unknown>>\n  ) => void;\n  buttonClassName?: string;\n  children: ReactNode;\n}\n\n/**\n * A file upload component that renders as a button and provides a modal interface for\n * file management.\n * \n * Features:\n * - Renders as a customizable button that opens a file upload modal\n * - Provides a modal interface for:\n *   - File selection\n *   - File preview\n *   - Upload progress tracking\n *   - Upload status display\n * \n * The component uses Uppy under the hood to handle all file upload functionality.\n * All file management features are automatically handled by the Uppy dashboard modal.\n * \n * @param props - Component props\n * @param props.maxNumberOfFiles - Maximum number of files allowed to be uploaded\n *   (default: 1)\n * @param props.maxFileSize - Maximum file size in bytes (default: 10MB)\n * @param props.onGetUploadParameters - Function to get upload parameters (method and URL).\n *   Typically used to fetch a presigned URL from the backend server for direct-to-S3\n *   uploads.\n * @param props.onComplete - Callback function called when upload is complete. Typically\n *   used to make post-upload API calls to update server state and set object ACL\n *   policies.\n * @param props.buttonClassName - Optional CSS class name for the button\n * @param props.children - Content to be rendered inside the button\n */\nexport function ObjectUploader({\n  maxNumberOfFiles = 1,\n  maxFileSize = 10485760, // 10MB default\n  onGetUploadParameters,\n  onComplete,\n  buttonClassName,\n  children,\n}: ObjectUploaderProps) {\n  const [showModal, setShowModal] = useState(false);\n  const [uppy] = useState(() =>\n    new Uppy({\n      restrictions: {\n        maxNumberOfFiles,\n        allowedFileTypes: ['image/*'],\n        maxFileSize,\n      },\n      autoProceed: false,\n    })\n      .use(AwsS3, {\n        shouldUseMultipart: false,\n        getUploadParameters: onGetUploadParameters,\n      })\n      .on(\"complete\", (result) => {\n        onComplete?.(result);\n        setShowModal(false);\n      })\n  );\n\n  return (\n    <div>\n      <Button onClick={() => setShowModal(true)} className={buttonClassName}>\n        {children}\n      </Button>\n\n      <DashboardModal\n        uppy={uppy}\n        open={showModal}\n        onRequestClose={() => setShowModal(false)}\n        proudlyDisplayPoweredByUppy={false}\n      />\n    </div>\n  );\n}","size_bytes":2934},"client/src/components/article-card.tsx":{"content":"import { Link } from \"wouter\";\nimport { Article } from \"@shared/schema\";\nimport { formatDistanceToNow } from \"date-fns\";\n\n// Jiu-jitsu cover images\nimport jiujitsuCover1 from \"@assets/generated_images/Jiu-jitsu_competition_cover_photo_81aa2f4f.png\";\nimport jiujitsuCover2 from \"@assets/generated_images/Jiu-jitsu_instruction_cover_photo_87e9f438.png\";\nimport jiujitsuCover3 from \"@assets/generated_images/Championship_victory_cover_photo_bc411842.png\";\nimport jiujitsuCover4 from \"@assets/generated_images/Training_session_cover_photo_484e2d2e.png\";\n\ninterface ArticleCardProps {\n  article: Article;\n}\n\nexport default function ArticleCard({ article }: ArticleCardProps) {\n  const categoryColors = {\n    \"tech\": \"bg-red-100 text-red-600\",\n    \"finance\": \"bg-green-100 text-green-600\",\n    \"jiu-jitsu\": \"bg-yellow-100 text-yellow-600\",\n    \"surf\": \"bg-blue-100 text-blue-600\",\n  };\n\n  const hoverColors = {\n    \"tech\": \"group-hover:text-red-600\",\n    \"finance\": \"group-hover:text-green-600\",\n    \"jiu-jitsu\": \"group-hover:text-yellow-600\",\n    \"surf\": \"group-hover:text-blue-600\",\n  };\n\n  // Array of jiu-jitsu cover images\n  const jiujitsuCovers = [jiujitsuCover1, jiujitsuCover2, jiujitsuCover3, jiujitsuCover4];\n  \n  // Function to get a consistent cover image for each jiu-jitsu article\n  const getJiujitsuCover = (articleId: string) => {\n    const hash = articleId.split('').reduce((a, b) => {\n      a = ((a << 7) - a) + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n    const index = Math.abs(hash) % jiujitsuCovers.length;\n    return jiujitsuCovers[index];\n  };\n\n  // Determine which image to show\n  const displayImage = article.category === \"jiu-jitsu\" \n    ? getJiujitsuCover(article.id)\n    : article.imageUrl;\n\n  return (\n    <Link href={`/article/${article.id}`}>\n      <article className=\"group bg-white rounded-2xl shadow-sm hover:shadow-lg transition-all duration-300 overflow-hidden border border-gray-100 cursor-pointer\">\n        {(displayImage || article.category === \"jiu-jitsu\") && (\n          <img\n            src={displayImage || \"\"}\n            alt={article.title}\n            className=\"w-full h-48 object-cover group-hover:scale-105 transition-transform duration-300\"\n          />\n        )}\n        \n        <div className=\"p-6\">\n          <div className=\"flex items-center mb-3\">\n            <span className={`px-3 py-1 rounded-full text-sm font-medium ${\n              categoryColors[article.category as keyof typeof categoryColors] || \"bg-gray-100 text-gray-600\"\n            }`}>\n              {article.category.charAt(0).toUpperCase() + article.category.slice(1).replace('-', '-')}\n            </span>\n            <span className=\"text-gray-400 ml-auto text-sm\">\n              {formatDistanceToNow(new Date(article.createdAt), { addSuffix: true })}\n            </span>\n          </div>\n          <h3 className={`text-xl font-bold text-gray-900 mb-3 transition-colors ${\n            hoverColors[article.category as keyof typeof hoverColors] || \"group-hover:text-gray-700\"\n          }`}>\n            {article.title}\n          </h3>\n          <p className=\"text-gray-600 mb-4\">\n            {article.excerpt}\n          </p>\n          <div className=\"flex items-center\">\n            <div className=\"w-8 h-8 bg-gray-200 rounded-full mr-3 flex items-center justify-center\">\n              <span className=\"text-xs font-medium text-gray-600\">\n                {article.author.charAt(0)}\n              </span>\n            </div>\n            <span className=\"text-gray-700 font-medium text-sm\">{article.author}</span>\n          </div>\n        </div>\n      </article>\n    </Link>\n  );\n}\n","size_bytes":3604},"client/src/components/footer.tsx":{"content":"import { Link } from \"wouter\";\nimport { Waves } from \"lucide-react\";\n\nexport default function Footer() {\n  return (\n    <footer className=\"bg-gradient-to-b from-slate-50 to-slate-100 dark:from-slate-800 dark:to-slate-900 text-gray-700 dark:text-gray-300 py-16 border-t border-gray-200 dark:border-gray-700\">\n      <div className=\"max-w-7xl mx-auto px-4\">\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-8\">\n          <div className=\"md:col-span-2\">\n            <div className=\"flex items-center space-x-2 mb-4\">\n              <div className=\"w-8 h-8 bg-gradient-to-br from-ocean to-surf rounded-lg flex items-center justify-center\">\n                <Waves className=\"text-white w-4 h-4\" />\n              </div>\n              <span className=\"text-xl font-bold\">ChillVibes</span>\n            </div>\n            <p className=\"text-gray-600 dark:text-gray-400 mb-6 max-w-md\">\n              Building a community where innovation meets zen, and hustle meets flow. Join thousands living the balanced life.\n            </p>\n            <div className=\"flex space-x-4\">\n              <a href=\"#\" className=\"text-gray-600 dark:text-gray-400 hover:text-ocean transition-colors\">\n                <i className=\"fab fa-twitter\"></i>\n              </a>\n              <a href=\"#\" className=\"text-gray-600 dark:text-gray-400 hover:text-ocean transition-colors\">\n                <i className=\"fab fa-instagram\"></i>\n              </a>\n              <a href=\"#\" className=\"text-gray-600 dark:text-gray-400 hover:text-ocean transition-colors\">\n                <i className=\"fab fa-youtube\"></i>\n              </a>\n              <a href=\"#\" className=\"text-gray-600 dark:text-gray-400 hover:text-ocean transition-colors\">\n                <i className=\"fab fa-discord\"></i>\n              </a>\n            </div>\n          </div>\n\n          <div>\n            <h4 className=\"font-bold mb-4\">Categories</h4>\n            <ul className=\"space-y-2 text-gray-600 dark:text-gray-400\">\n              <li>\n                <Link href=\"/category/tech\" className=\"hover:text-ocean transition-colors\">\n                  Tech\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/category/finance\" className=\"hover:text-ocean transition-colors\">\n                  Finance\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/category/jiu-jitsu\" className=\"category-jiu-jitsu hover:opacity-80 transition-opacity\">\n                  Jiu-Jitsu\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/category/surf\" className=\"category-surf hover:opacity-80 transition-opacity\">\n                  Surf\n                </Link>\n              </li>\n            </ul>\n          </div>\n\n          <div>\n            <h4 className=\"font-bold mb-4\">Community</h4>\n            <ul className=\"space-y-2 text-gray-600 dark:text-gray-400\">\n              <li><a href=\"#\" className=\"hover:text-ocean transition-colors\">About Us</a></li>\n              <li><a href=\"#\" className=\"hover:text-ocean transition-colors\">Contributors</a></li>\n              <li><a href=\"#\" className=\"hover:text-ocean transition-colors\">Newsletter</a></li>\n              <li><a href=\"#\" className=\"hover:text-ocean transition-colors\">Contact</a></li>\n            </ul>\n          </div>\n        </div>\n\n        <div className=\"border-t border-gray-300 dark:border-gray-600 mt-12 pt-8 text-center text-gray-600 dark:text-gray-400\">\n          <p>&copy; 2024 ChillVibes Community. All rights reserved. Built with ❤️ for the balanced lifestyle.</p>\n        </div>\n      </div>\n    </footer>\n  );\n}\n","size_bytes":3644},"client/src/components/navbar.tsx":{"content":"import { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { Menu, X, Waves } from \"lucide-react\";\n\nexport default function Navbar() {\n  const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n  const [location] = useLocation();\n\n  const navigation = [\n    { name: \"Home\", href: \"/\" },\n    { \n      name: \"Tech\", \n      href: \"/category/tech\",\n      subcategories: [\n        { name: \"AI & Innovation\", href: \"/category/tech/ai\" },\n        { name: \"Blockchain\", href: \"/category/tech/blockchain\" },\n        { name: \"Mobile Apps\", href: \"/category/tech/mobile\" }\n      ]\n    },\n    { \n      name: \"Finance\", \n      href: \"/category/finance\",\n      subcategories: [\n        { name: \"Travel Rewards\", href: \"/category/finance/travel-rewards\" },\n        { name: \"Crypto/DeFi\", href: \"/category/finance/crypto\" },\n        { name: \"Markets\", href: \"/category/finance/markets\" }\n      ]\n    },\n    { \n      name: \"Jiu-Jitsu\", \n      href: \"/category/jiu-jitsu\",\n      subcategories: [\n        { name: \"Training & Mindset\", href: \"/category/jiu-jitsu/training\" },\n        { name: \"Destinations\", href: \"/category/jiu-jitsu/destinations\" },\n        { name: \"Competitions\", href: \"/category/jiu-jitsu/competitions\" }\n      ]\n    },\n    { \n      name: \"Surf\", \n      href: \"/category/surf\",\n      subcategories: [\n        { name: \"Forecasting\", href: \"/category/surf/forecasting\" },\n        { name: \"Destinations\", href: \"/category/surf/destinations\" },\n        { name: \"Conservation\", href: \"/category/surf/conservation\" },\n        { name: \"Gear Reviews\", href: \"/category/surf/gear\" },\n        { name: \"Yoga\", href: \"/category/surf/yoga\" },\n        { name: \"Snowboarding\", href: \"/category/surf/snowboarding\" }\n      ]\n    },\n  ];\n\n  return (\n    <nav className=\"bg-white shadow-sm border-b border-gray-100 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <div className=\"flex justify-between items-center h-16\">\n          <Link href=\"/\" className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-gradient-to-br from-ocean to-surf rounded-lg flex items-center justify-center\">\n              <Waves className=\"text-white w-4 h-4\" />\n            </div>\n            <span className=\"text-xl font-bold text-gray-900\">ChillVibes</span>\n          </Link>\n          \n          <div className=\"hidden md:flex items-center space-x-8\">\n            {navigation.map((item) => {\n              let textColorClass = \"\";\n              if (item.name === \"Tech\") {\n                textColorClass = \"text-red-500\";\n              } else if (item.name === \"Finance\") {\n                textColorClass = \"text-green-500\";\n              } else if (item.name === \"Jiu-Jitsu\") {\n                textColorClass = \"category-jiu-jitsu\";\n              } else if (item.name === \"Surf\") {\n                textColorClass = \"category-surf\";\n              } else {\n                textColorClass = location === item.href ? \"text-ocean\" : \"text-gray-700 hover:text-ocean\";\n              }\n              \n              return (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`font-medium transition-colors ${textColorClass}`}\n                >\n                  {item.name}\n                </Link>\n              );\n            })}\n          </div>\n\n          <div className=\"flex items-center space-x-4\">\n            <Link\n              href=\"/admin\"\n              className=\"bg-ocean text-white px-4 py-2 rounded-lg hover:bg-teal-600 transition-colors font-medium\"\n            >\n              Admin\n            </Link>\n            <button\n              className=\"md:hidden text-gray-700\"\n              onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n            >\n              {isMobileMenuOpen ? <X className=\"w-6 h-6\" /> : <Menu className=\"w-6 h-6\" />}\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Mobile Menu */}\n      {isMobileMenuOpen && (\n        <div className=\"md:hidden bg-white border-b border-gray-100\">\n          <div className=\"px-4 py-3 space-y-2\">\n            {navigation.map((item) => {\n              let mobileTextColorClass = \"\";\n              if (item.name === \"Tech\") {\n                mobileTextColorClass = \"text-red-500\";\n              } else if (item.name === \"Finance\") {\n                mobileTextColorClass = \"text-green-500\";\n              } else if (item.name === \"Jiu-Jitsu\") {\n                mobileTextColorClass = \"category-jiu-jitsu\";\n              } else if (item.name === \"Surf\") {\n                mobileTextColorClass = \"category-surf\";\n              } else {\n                mobileTextColorClass = \"text-gray-700 hover:text-ocean\";\n              }\n              \n              return (\n                <Link\n                  key={item.name}\n                  href={item.href}\n                  className={`block py-2 transition-colors ${mobileTextColorClass}`}\n                  onClick={() => setIsMobileMenuOpen(false)}\n                >\n                  {item.name}\n                </Link>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </nav>\n  );\n}\n","size_bytes":5192},"client/src/components/rich-text-editor.tsx":{"content":"import { useState, useRef } from \"react\";\nimport { Bold, Italic, Link as LinkIcon, List, ListOrdered, Type } from \"lucide-react\";\nimport { Button } from \"@/components/ui/button\";\n\ninterface RichTextEditorProps {\n  content: string;\n  onChange: (content: string) => void;\n  placeholder?: string;\n}\n\nexport default function RichTextEditor({ content, onChange, placeholder = \"Start writing...\" }: RichTextEditorProps) {\n  const editorRef = useRef<HTMLDivElement>(null);\n  const [isFocused, setIsFocused] = useState(false);\n\n  const executeCommand = (command: string, value?: string) => {\n    document.execCommand(command, false, value);\n    if (editorRef.current) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n\n  const handleInput = () => {\n    if (editorRef.current) {\n      onChange(editorRef.current.innerHTML);\n    }\n  };\n\n  const handlePaste = (e: React.ClipboardEvent) => {\n    e.preventDefault();\n    const text = e.clipboardData.getData('text/plain');\n    document.execCommand('insertText', false, text);\n  };\n\n  const insertLink = () => {\n    const url = prompt('Enter URL:');\n    if (url) {\n      executeCommand('createLink', url);\n    }\n  };\n\n  return (\n    <div className=\"border border-gray-200 rounded-lg bg-white\">\n      <div className=\"border-b border-gray-200 p-2\">\n        <div className=\"flex items-center space-x-1\">\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('bold')}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <Bold className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('italic')}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <Italic className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('insertUnorderedList')}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <List className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('insertOrderedList')}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <ListOrdered className=\"w-4 h-4\" />\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={insertLink}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <LinkIcon className=\"w-4 h-4\" />\n          </Button>\n          <div className=\"border-l border-gray-200 mx-2 h-6\"></div>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('formatBlock', 'h2')}\n            className=\"p-2 hover:bg-gray-100 text-sm\"\n          >\n            H2\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('formatBlock', 'h3')}\n            className=\"p-2 hover:bg-gray-100 text-sm\"\n          >\n            H3\n          </Button>\n          <Button\n            type=\"button\"\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => executeCommand('formatBlock', 'p')}\n            className=\"p-2 hover:bg-gray-100\"\n          >\n            <Type className=\"w-4 h-4\" />\n          </Button>\n        </div>\n      </div>\n      \n      <div\n        ref={editorRef}\n        contentEditable\n        dangerouslySetInnerHTML={{ __html: content }}\n        onInput={handleInput}\n        onFocus={() => setIsFocused(true)}\n        onBlur={() => setIsFocused(false)}\n        onPaste={handlePaste}\n        className={`min-h-[300px] p-4 outline-none prose prose-sm max-w-none relative`}\n      />\n      \n      {!content && !isFocused && (\n        <div className=\"absolute top-16 left-4 text-gray-400 pointer-events-none\">\n          {placeholder}\n        </div>\n      )}\n    </div>\n  );\n}\n","size_bytes":4134},"client/src/hooks/use-mobile.tsx":{"content":"import * as React from \"react\"\n\nconst MOBILE_BREAKPOINT = 768\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = React.useState<boolean | undefined>(undefined)\n\n  React.useEffect(() => {\n    const mql = window.matchMedia(`(max-width: ${MOBILE_BREAKPOINT - 1}px)`)\n    const onChange = () => {\n      setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    }\n    mql.addEventListener(\"change\", onChange)\n    setIsMobile(window.innerWidth < MOBILE_BREAKPOINT)\n    return () => mql.removeEventListener(\"change\", onChange)\n  }, [])\n\n  return !!isMobile\n}\n","size_bytes":565},"client/src/hooks/use-toast.ts":{"content":"import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"@/components/ui/toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n","size_bytes":3895},"client/src/hooks/useAuth.ts":{"content":"import { useQuery } from \"@tanstack/react-query\";\n\nexport function useAuth() {\n  const { data: user, isLoading } = useQuery({\n    queryKey: [\"/api/auth/user\"],\n    retry: false,\n  });\n\n  return {\n    user,\n    isLoading,\n    isAuthenticated: !!user,\n  };\n}","size_bytes":256},"client/src/hooks/useBackgroundAudio.ts":{"content":"import { useEffect, useRef, useState } from 'react';\nimport { useQuery } from '@tanstack/react-query';\n\ninterface UseBackgroundAudioReturn {\n  isPlaying: boolean;\n  toggle: () => void;\n  setVolume: (volume: number) => void;\n  volume: number;\n  loadCustomAudio: (audioUrl: string) => void;\n  isCustomAudio: boolean;\n}\n\nexport function useBackgroundAudio(): UseBackgroundAudioReturn {\n  const audioRef = useRef<HTMLAudioElement | null>(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolumeState] = useState(0.3);\n  const [customAudioUrl, setCustomAudioUrl] = useState<string | null>(null);\n  const [isCustomAudio, setIsCustomAudio] = useState(false);\n\n  // Fetch site settings to check for custom background audio\n  const { data: siteSettings } = useQuery({\n    queryKey: ['/api/settings'],\n    staleTime: 30 * 1000, // 30 seconds\n  });\n\n  // Create large, powerful ocean wave crashes\n  const createOceanWaveAudio = () => {\n    const audioContext = new (window.AudioContext || (window as any).webkitAudioContext)();\n    const sampleRate = audioContext.sampleRate;\n    const duration = 20; // 20 seconds for powerful wave cycle\n    const numSamples = sampleRate * duration;\n    \n    // Create buffer for ocean wave sound\n    const buffer = audioContext.createBuffer(2, numSamples, sampleRate); // Stereo for depth\n    \n    for (let channel = 0; channel < 2; channel++) {\n      const channelData = buffer.getChannelData(channel);\n      \n      for (let i = 0; i < numSamples; i++) {\n        const t = i / sampleRate;\n        let sample = 0;\n        \n        // Large wave cycle: 12 seconds buildup, 4 seconds massive crash, 4 seconds powerful retreat\n        const cyclePos = (t % duration) / duration;\n        \n        if (cyclePos < 0.6) { // Extended buildup phase (0-12 seconds)\n          const buildupPos = cyclePos / 0.6;\n          const intensity = Math.pow(buildupPos, 1.5); // Exponential buildup\n          \n          // Deep ocean swells building to massive size\n          const deepSwell = Math.sin(2 * Math.PI * 0.04 * t) * 0.4 * intensity;\n          const largeSwell = Math.sin(2 * Math.PI * 0.07 * t) * 0.3 * intensity;\n          const mediumWaves = Math.sin(2 * Math.PI * 0.12 * t) * 0.25 * intensity;\n          const surfaceChop = Math.sin(2 * Math.PI * 0.25 * t) * 0.15 * intensity;\n          \n          // Rumbling undertone for large waves\n          const rumble = Math.sin(2 * Math.PI * 0.02 * t) * 0.2 * intensity;\n          \n          // Progressive water movement noise\n          let noise = 0;\n          for (let j = 0; j < 12; j++) {\n            noise += (Math.random() * 2 - 1) / Math.pow(2, j + 1);\n          }\n          noise *= intensity * 0.08;\n          \n          sample = deepSwell + largeSwell + mediumWaves + surfaceChop + rumble + noise;\n          \n        } else if (cyclePos < 0.8) { // Massive crash phase (12-16 seconds)\n          const crashPos = (cyclePos - 0.6) / 0.2;\n          \n          // Extremely intense wave crash - multiple impact stages\n          let massiveCrashNoise = 0;\n          for (let j = 0; j < 64; j++) {\n            massiveCrashNoise += (Math.random() * 2 - 1) / Math.pow(1.3, j);\n          }\n          \n          // Multi-stage crash envelope for large wave\n          const mainImpact = Math.exp(-crashPos * 6) * Math.sin(crashPos * Math.PI * 2);\n          const secondaryImpact = Math.exp(-(crashPos - 0.3) * 8) * Math.sin((crashPos - 0.3) * Math.PI * 3);\n          const aftershock = Math.exp(-(crashPos - 0.6) * 10) * Math.sin((crashPos - 0.6) * Math.PI * 4);\n          \n          const totalImpactEnvelope = Math.max(0, mainImpact) + Math.max(0, secondaryImpact * 0.7) + Math.max(0, aftershock * 0.4);\n          \n          // Multiple frequency components for massive crash\n          const lowCrash = Math.sin(2 * Math.PI * 25 * t) * totalImpactEnvelope * 0.5;\n          const midCrash = Math.sin(2 * Math.PI * 60 * t) * totalImpactEnvelope * 0.4;\n          const highCrash = Math.sin(2 * Math.PI * 120 * t) * totalImpactEnvelope * 0.3;\n          const splashCrash = Math.sin(2 * Math.PI * 250 * t) * totalImpactEnvelope * 0.2;\n          \n          // Thunder-like rumble from large wave impact\n          const thunderRumble = Math.sin(2 * Math.PI * 15 * t + Math.sin(3 * t)) * totalImpactEnvelope * 0.3;\n          \n          sample = (massiveCrashNoise * totalImpactEnvelope * 0.6) + lowCrash + midCrash + highCrash + splashCrash + thunderRumble;\n          \n        } else { // Powerful retreat phase (16-20 seconds)\n          const retreatPos = (cyclePos - 0.8) / 0.2;\n          const retreatIntensity = Math.exp(-retreatPos * 3); // Slower fade for large waves\n          \n          // Massive foam and turbulent water retreat\n          let heavyFoamNoise = 0;\n          for (let j = 0; j < 32; j++) {\n            heavyFoamNoise += (Math.random() * 2 - 1) / Math.pow(1.8, j);\n          }\n          \n          // Large bubbling and churning sounds\n          const largeBubbles = Math.sin(2 * Math.PI * 12 * t + Math.sin(4 * t)) * retreatIntensity * 0.2;\n          const mediumBubbles = Math.sin(2 * Math.PI * 28 * t + Math.sin(6 * t)) * retreatIntensity * 0.15;\n          const smallBubbles = Math.sin(2 * Math.PI * 45 * t + Math.sin(8 * t)) * retreatIntensity * 0.1;\n          \n          // Powerful water drainage and undertow\n          const heavyDrainage = Math.sin(2 * Math.PI * 0.3 * t) * retreatIntensity * 0.25;\n          const undertow = Math.sin(2 * Math.PI * 0.8 * t) * retreatIntensity * 0.2;\n          \n          // Residual rumbling from large wave energy\n          const residualRumble = Math.sin(2 * Math.PI * 0.15 * t) * retreatIntensity * 0.15;\n          \n          sample = (heavyFoamNoise * retreatIntensity * 0.4) + largeBubbles + mediumBubbles + smallBubbles + heavyDrainage + undertow + residualRumble;\n        }\n        \n        // Enhanced stereo separation for dramatic effect\n        if (channel === 1) {\n          sample *= 0.9; // More pronounced stereo difference for large waves\n          // Add slight delay for spatial depth\n          const delayedSample = channelData[Math.max(0, i-5)] || 0;\n          sample = sample * 0.85 + delayedSample * 0.15;\n        }\n        \n        // Dynamic compression for powerful sound\n        const compressed = sample > 0 ? Math.pow(Math.abs(sample), 0.8) * Math.sign(sample) : -Math.pow(Math.abs(sample), 0.8);\n        \n        // Apply filtering for natural large wave sound\n        const filtered = compressed * 0.6 + (channelData[Math.max(0, i-1)] || 0) * 0.4;\n        channelData[i] = Math.max(-0.95, Math.min(0.95, filtered));\n      }\n    }\n    \n    // Convert buffer to WAV data URL\n    const wavData = audioBufferToWav(buffer);\n    const blob = new Blob([wavData], { type: 'audio/wav' });\n    return URL.createObjectURL(blob);\n  };\n\n  // Convert AudioBuffer to WAV format (stereo)\n  const audioBufferToWav = (buffer: AudioBuffer) => {\n    const length = buffer.length;\n    const channels = buffer.numberOfChannels;\n    const arrayBuffer = new ArrayBuffer(44 + length * channels * 2);\n    const view = new DataView(arrayBuffer);\n    \n    // WAV header\n    const writeString = (offset: number, string: string) => {\n      for (let i = 0; i < string.length; i++) {\n        view.setUint8(offset + i, string.charCodeAt(i));\n      }\n    };\n    \n    writeString(0, 'RIFF');\n    view.setUint32(4, 36 + length * channels * 2, true);\n    writeString(8, 'WAVE');\n    writeString(12, 'fmt ');\n    view.setUint32(16, 16, true);\n    view.setUint16(20, 1, true);\n    view.setUint16(22, channels, true);\n    view.setUint32(24, buffer.sampleRate, true);\n    view.setUint32(28, buffer.sampleRate * channels * 2, true);\n    view.setUint16(32, channels * 2, true);\n    view.setUint16(34, 16, true);\n    writeString(36, 'data');\n    view.setUint32(40, length * channels * 2, true);\n    \n    // Convert float samples to 16-bit PCM (interleaved stereo)\n    let offset = 44;\n    for (let i = 0; i < length; i++) {\n      for (let channel = 0; channel < channels; channel++) {\n        const channelData = buffer.getChannelData(channel);\n        const sample = Math.max(-1, Math.min(1, channelData[i]));\n        view.setInt16(offset, sample * 0x7FFF, true);\n        offset += 2;\n      }\n    }\n    \n    return arrayBuffer;\n  };\n\n  const initializeAudio = () => {\n    if (!audioRef.current) {\n      audioRef.current = new Audio();\n      audioRef.current.loop = true;\n      audioRef.current.volume = volume;\n      audioRef.current.preload = 'auto';\n      \n      // Use custom audio if available, otherwise generate ocean waves\n      if (customAudioUrl) {\n        audioRef.current.src = customAudioUrl;\n        setIsCustomAudio(true);\n      } else {\n        const oceanWaveUrl = createOceanWaveAudio();\n        audioRef.current.src = oceanWaveUrl;\n        setIsCustomAudio(false);\n      }\n    }\n  };\n\n  const startOceanSound = async () => {\n    try {\n      initializeAudio();\n      if (audioRef.current) {\n        await audioRef.current.play();\n        setIsPlaying(true);\n      }\n    } catch (error) {\n      console.warn('Could not start ocean sounds:', error);\n      setIsPlaying(false);\n    }\n  };\n\n  const stopOceanSound = () => {\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setIsPlaying(false);\n  };\n\n  const toggle = () => {\n    if (isPlaying) {\n      stopOceanSound();\n    } else {\n      startOceanSound();\n    }\n  };\n\n  const setVolume = (newVolume: number) => {\n    setVolumeState(newVolume);\n    if (audioRef.current) {\n      audioRef.current.volume = newVolume;\n    }\n  };\n\n  const loadCustomAudio = (audioUrl: string) => {\n    setCustomAudioUrl(audioUrl);\n    \n    // Stop current audio and reinitialize with new source\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.src = '';\n      audioRef.current = null;\n    }\n    setIsPlaying(false);\n    \n    // Initialize with new audio source\n    initializeAudio();\n  };\n\n  // Load custom audio from site settings\n  useEffect(() => {\n    if (siteSettings?.backgroundAudioUrl && !customAudioUrl) {\n      setCustomAudioUrl(siteSettings.backgroundAudioUrl);\n    }\n  }, [siteSettings, customAudioUrl]);\n\n  useEffect(() => {\n    return () => {\n      if (audioRef.current) {\n        audioRef.current.pause();\n        audioRef.current.src = '';\n      }\n    };\n  }, []);\n\n  return {\n    isPlaying,\n    toggle,\n    setVolume,\n    volume,\n    loadCustomAudio,\n    isCustomAudio,\n  };\n}","size_bytes":10472},"client/src/lib/api.ts":{"content":"import { apiRequest } from \"./queryClient\";\nimport { Article, InsertArticle, SiteSettings, InsertSiteSettings } from \"@shared/schema\";\n\nexport const api = {\n  articles: {\n    getAll: (category?: string): Promise<Article[]> => \n      apiRequest(\"GET\", `/api/articles${category ? `?category=${category}` : \"\"}`).then(res => res.json()),\n    \n    getBySubcategory: (category?: string, subcategory?: string): Promise<Article[]> => \n      apiRequest(\"GET\", `/api/articles?category=${category}&subcategory=${subcategory}`).then(res => res.json()),\n    \n    getFeatured: (limit?: number): Promise<Article[]> => \n      apiRequest(\"GET\", `/api/articles/featured${limit ? `?limit=${limit}` : \"\"}`).then(res => res.json()),\n    \n    getById: (id: string): Promise<Article> => \n      apiRequest(\"GET\", `/api/articles/${id}`).then(res => res.json()),\n    \n    create: (article: InsertArticle): Promise<Article> => \n      apiRequest(\"POST\", \"/api/articles\", article).then(res => res.json()),\n    \n    update: (id: string, article: Partial<InsertArticle>): Promise<Article> => \n      apiRequest(\"PUT\", `/api/articles/${id}`, article).then(res => res.json()),\n    \n    delete: (id: string): Promise<void> => \n      apiRequest(\"DELETE\", `/api/articles/${id}`).then(() => {}),\n  },\n  \n  upload: {\n    image: async (file: File): Promise<{ imageUrl: string }> => {\n      const formData = new FormData();\n      formData.append('image', file);\n      \n      const response = await fetch('/api/upload', {\n        method: 'POST',\n        body: formData,\n      });\n      \n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      \n      return response.json();\n    }\n  },\n\n  settings: {\n    get: (): Promise<SiteSettings> => \n      apiRequest(\"GET\", \"/api/settings\").then(res => res.json()),\n    \n    update: (settings: Partial<InsertSiteSettings>): Promise<SiteSettings> => \n      apiRequest(\"PUT\", \"/api/settings\", settings).then(res => res.json()),\n  }\n};\n","size_bytes":1957},"client/src/lib/authUtils.ts":{"content":"export function isUnauthorizedError(error: Error): boolean {\n  return /^401: .*Unauthorized/.test(error.message);\n}","size_bytes":115},"client/src/lib/queryClient.ts":{"content":"import { QueryClient, QueryFunction } from \"@tanstack/react-query\";\n\nasync function throwIfResNotOk(res: Response) {\n  if (!res.ok) {\n    const text = (await res.text()) || res.statusText;\n    throw new Error(`${res.status}: ${text}`);\n  }\n}\n\nexport async function apiRequest(\n  method: string,\n  url: string,\n  data?: unknown | undefined,\n): Promise<Response> {\n  const res = await fetch(url, {\n    method,\n    headers: data ? { \"Content-Type\": \"application/json\" } : {},\n    body: data ? JSON.stringify(data) : undefined,\n    credentials: \"include\",\n  });\n\n  await throwIfResNotOk(res);\n  return res;\n}\n\ntype UnauthorizedBehavior = \"returnNull\" | \"throw\";\nexport const getQueryFn: <T>(options: {\n  on401: UnauthorizedBehavior;\n}) => QueryFunction<T> =\n  ({ on401: unauthorizedBehavior }) =>\n  async ({ queryKey }) => {\n    const res = await fetch(queryKey.join(\"/\") as string, {\n      credentials: \"include\",\n    });\n\n    if (unauthorizedBehavior === \"returnNull\" && res.status === 401) {\n      return null;\n    }\n\n    await throwIfResNotOk(res);\n    return await res.json();\n  };\n\nexport const queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      queryFn: getQueryFn({ on401: \"throw\" }),\n      refetchInterval: false,\n      refetchOnWindowFocus: false,\n      staleTime: Infinity,\n      retry: false,\n    },\n    mutations: {\n      retry: false,\n    },\n  },\n});\n","size_bytes":1383},"client/src/lib/utils.ts":{"content":"import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n","size_bytes":166},"client/src/pages/admin.tsx":{"content":"import { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Plus, Edit, Trash2, Image, Settings, LogIn, User, Type, Palette } from \"lucide-react\";\nimport { useAuth } from \"@/hooks/useAuth\";\nimport { api } from \"@/lib/api\";\nimport { queryClient } from \"@/lib/queryClient\";\nimport { insertArticleSchema, insertSiteSettingsSchema, type InsertArticle, type Article, type SiteSettings, type InsertSiteSettings } from \"@shared/schema\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport RichTextEditor from \"@/components/rich-text-editor\";\nimport { ObjectUploader } from \"@/components/ObjectUploader\";\nimport { AudioUploader } from \"@/components/AudioUploader\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport type { UploadResult } from \"@uppy/core\";\n\ninterface ArticleFormData extends Omit<InsertArticle, 'imageUrl'> {\n  imageFile?: File;\n}\n\nconst handleGetUploadParameters = async () => {\n  const response = await fetch('/api/objects/upload/public', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  if (!response.ok) {\n    throw new Error('Failed to get upload URL');\n  }\n  const { uploadURL } = await response.json();\n  return {\n    method: 'PUT' as const,\n    url: uploadURL,\n  };\n};\n\nexport default function Admin() {\n  // ALL hooks must be called before any conditional returns\n  const { user, isLoading: authLoading, isAuthenticated } = useAuth();\n  const [isCreateDialogOpen, setIsCreateDialogOpen] = useState(false);\n  const [editingArticle, setEditingArticle] = useState<Article | null>(null);\n  const [imagePreview, setImagePreview] = useState<string>(\"\");\n  const [backgroundImageUrl, setBackgroundImageUrl] = useState<string>(\"\");\n  const { toast } = useToast();\n\n  const { data: articles, isLoading } = useQuery({\n    queryKey: [\"/api/articles\"],\n    queryFn: () => api.articles.getAll(),\n    enabled: isAuthenticated, // Only run when authenticated\n  });\n\n  const { data: siteSettings } = useQuery({\n    queryKey: [\"/api/settings\"],\n    queryFn: () => api.settings.get(),\n    enabled: isAuthenticated, // Only run when authenticated\n  });\n\n  const form = useForm<ArticleFormData>({\n    resolver: zodResolver(\n      insertArticleSchema\n        .omit({ imageUrl: true })\n        .extend({ imageFile: z.instanceof(File).optional() })\n    ),\n    defaultValues: {\n      title: \"\",\n      content: \"\",\n      excerpt: \"\",\n      category: \"\",\n      subcategory: \"\",\n      author: \"Admin\",\n      isDraft: false,\n      isFeatured: false,\n      isRealtime: false,\n      sourceUrl: \"\",\n      tags: [],\n    },\n  });\n\n  const createMutation = useMutation({\n    mutationFn: async (data: ArticleFormData) => {\n      let imageUrl = backgroundImageUrl;\n      \n      if (data.imageFile) {\n        const uploadResult = await api.upload.image(data.imageFile);\n        imageUrl = uploadResult.imageUrl;\n      }\n\n      const articleData: InsertArticle = {\n        ...data,\n        imageUrl,\n        subcategory: data.subcategory || undefined,\n        isRealtime: data.isRealtime || false,\n        sourceUrl: data.sourceUrl || undefined,\n        tags: data.tags || [],\n        isFeatured: data.isFeatured || false,\n      };\n      delete (articleData as any).imageFile;\n\n      return api.articles.create(articleData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      setIsCreateDialogOpen(false);\n      form.reset();\n      setImagePreview(\"\");\n      setBackgroundImageUrl(\"\");\n      toast({ title: \"Success\", description: \"Article created successfully!\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error\", \n        description: error.message || \"Failed to create article\",\n        variant: \"destructive\"\n      });\n    },\n  });\n\n  const updateMutation = useMutation({\n    mutationFn: async ({ id, data }: { id: string; data: Partial<ArticleFormData> }) => {\n      let imageUrl = editingArticle?.imageUrl;\n      \n      if (data.imageFile) {\n        const uploadResult = await api.upload.image(data.imageFile);\n        imageUrl = uploadResult.imageUrl;\n      } else if (backgroundImageUrl) {\n        imageUrl = backgroundImageUrl;\n      }\n\n      const articleData: Partial<InsertArticle> = {\n        ...data,\n        imageUrl,\n      };\n      delete (articleData as any).imageFile;\n\n      return api.articles.update(id, articleData);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      setEditingArticle(null);\n      form.reset();\n      setImagePreview(\"\");\n      toast({ title: \"Success\", description: \"Article updated successfully!\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error\", \n        description: error.message || \"Failed to update article\",\n        variant: \"destructive\"\n      });\n    },\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: api.articles.delete,\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/articles\"] });\n      toast({ title: \"Success\", description: \"Article deleted successfully!\" });\n    },\n    onError: (error) => {\n      toast({ \n        title: \"Error\", \n        description: error.message || \"Failed to delete article\",\n        variant: \"destructive\"\n      });\n    },\n  });\n\n  const updateSettingsMutation = useMutation({\n    mutationFn: async (updates: { heroBackgroundUrl?: string; textSize?: string; textColor?: string }) => {\n      return api.settings.update(updates);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/settings\"] });\n      toast({\n        title: \"Settings updated\",\n        description: \"Settings have been updated successfully.\",\n      });\n    },\n    onError: (error) => {\n      toast({\n        title: \"Error\",\n        description: \"Failed to update settings. Please try again.\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Show loading while checking authentication\n  if (authLoading) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-ocean mx-auto mb-4\"></div>\n          <p className=\"text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Show login prompt if not authenticated\n  if (!isAuthenticated) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-b from-slate-50 to-slate-100 flex items-center justify-center\">\n        <div className=\"bg-white p-8 rounded-lg shadow-lg text-center max-w-md\">\n          <User className=\"h-16 w-16 text-ocean mx-auto mb-4\" />\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-2\">Admin Access Required</h1>\n          <p className=\"text-gray-600 mb-6\">\n            You need to sign in to access the admin panel and create articles.\n          </p>\n          <Button \n            onClick={() => window.location.href = '/api/login'}\n            className=\"bg-ocean hover:bg-teal-600 text-white px-6 py-3 rounded-lg flex items-center gap-2 mx-auto\"\n          >\n            <LogIn className=\"h-5 w-5\" />\n            Sign In with Replit\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const onSubmit = (data: ArticleFormData) => {\n    if (editingArticle) {\n      updateMutation.mutate({ id: editingArticle.id, data });\n    } else {\n      createMutation.mutate(data);\n    }\n  };\n\n  const handleEdit = (article: Article) => {\n    setEditingArticle(article);\n    form.reset({\n      title: article.title,\n      content: article.content,\n      excerpt: article.excerpt,\n      category: article.category,\n      author: article.author,\n      isDraft: article.isDraft,\n    });\n    setImagePreview(article.imageUrl || \"\");\n  };\n\n  const handleImageChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      form.setValue('imageFile', file);\n      const reader = new FileReader();\n      reader.onload = () => setImagePreview(reader.result as string);\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const resetForm = () => {\n    form.reset({\n      title: \"\",\n      content: \"\",\n      excerpt: \"\",\n      category: \"\",\n      subcategory: \"\",\n      author: \"Admin\",\n      isDraft: false,\n      isFeatured: false,\n      isRealtime: false,\n      sourceUrl: \"\",\n      tags: [],\n    });\n    setImagePreview(\"\");\n    setEditingArticle(null);\n  };\n\n  const handleBackdropUploadComplete = async (result: UploadResult<Record<string, unknown>, Record<string, unknown>>) => {\n    if (result.successful && result.successful.length > 0) {\n      const uploadURL = result.successful[0].uploadURL;\n      \n      // Set ACL policy for the uploaded image\n      try {\n        const response = await fetch('/api/article-backdrops', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({ imageURL: uploadURL }),\n        });\n        \n        if (response.ok) {\n          const { publicUrl } = await response.json();\n          setBackgroundImageUrl(publicUrl);\n          toast({\n            title: \"Success\",\n            description: \"Backdrop image uploaded successfully\",\n          });\n        }\n      } catch (error) {\n        console.error('Error setting backdrop ACL:', error);\n        toast({\n          title: \"Error\",\n          description: \"Failed to process uploaded image\",\n          variant: \"destructive\",\n        });\n      }\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <div className=\"max-w-7xl mx-auto px-4 py-12\">\n        <div className=\"mb-8\">\n          <div className=\"flex justify-between items-center\">\n            <div>\n              <h1 className=\"text-3xl font-bold text-gray-900 mb-2\">Content Management</h1>\n              <p className=\"text-gray-600\">Manage your articles and community content</p>\n            </div>\n            <div className=\"flex items-center gap-4\">\n              <div className=\"text-right\">\n                <p className=\"text-sm text-gray-600\">Signed in as</p>\n                <p className=\"font-medium text-gray-900\">\n                  {(user as any)?.firstName && (user as any)?.lastName \n                    ? `${(user as any).firstName} ${(user as any).lastName}`\n                    : (user as any)?.email || 'Admin User'}\n                </p>\n              </div>\n              <Button\n                onClick={() => window.location.href = '/api/logout'}\n                variant=\"outline\"\n                className=\"flex items-center gap-2\"\n                data-testid=\"button-logout\"\n              >\n                <User className=\"h-4 w-4\" />\n                Sign Out\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <Tabs defaultValue=\"articles\" className=\"space-y-6\">\n          <TabsList className=\"bg-white\">\n            <TabsTrigger value=\"articles\">Articles</TabsTrigger>\n            <TabsTrigger value=\"settings\">Settings</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"articles\" className=\"space-y-6\">\n            <div className=\"flex justify-between items-center\">\n              <h2 className=\"text-xl font-bold text-gray-900\">Manage Articles</h2>\n              <Dialog open={isCreateDialogOpen || !!editingArticle} onOpenChange={(open) => {\n                if (!open) {\n                  setIsCreateDialogOpen(false);\n                  resetForm();\n                }\n              }}>\n                <DialogTrigger asChild>\n                  <Button onClick={() => setIsCreateDialogOpen(true)} className=\"bg-ocean hover:bg-teal-600\">\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    New Article\n                  </Button>\n                </DialogTrigger>\n                \n                <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n                  <DialogHeader>\n                    <DialogTitle>\n                      {editingArticle ? \"Edit Article\" : \"Create New Article\"}\n                    </DialogTitle>\n                  </DialogHeader>\n\n                  <Form {...form}>\n                    <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n                      <FormField\n                        control={form.control}\n                        name=\"title\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Title</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Enter article title\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"category\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Category</FormLabel>\n                            <Select onValueChange={field.onChange} value={field.value}>\n                              <FormControl>\n                                <SelectTrigger>\n                                  <SelectValue placeholder=\"Select category\" />\n                                </SelectTrigger>\n                              </FormControl>\n                              <SelectContent>\n                                <SelectItem value=\"tech\">Tech</SelectItem>\n                                <SelectItem value=\"finance\">Finance</SelectItem>\n                                <SelectItem value=\"jiu-jitsu\">\n                                  <span className=\"category-jiu-jitsu\">Jiu-Jitsu</span>\n                                </SelectItem>\n                                <SelectItem value=\"surf\">\n                                  <span className=\"category-surf\">Surf</span>\n                                </SelectItem>\n                              </SelectContent>\n                            </Select>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Featured Image\n                        </label>\n                        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-ocean transition-colors\">\n                          {imagePreview ? (\n                            <div className=\"space-y-4\">\n                              <img\n                                src={imagePreview}\n                                alt=\"Preview\"\n                                className=\"max-h-48 mx-auto rounded-lg\"\n                              />\n                              <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => {\n                                  setImagePreview(\"\");\n                                  form.setValue('imageFile', undefined);\n                                }}\n                              >\n                                Remove Image\n                              </Button>\n                            </div>\n                          ) : (\n                            <>\n                              <Image className=\"mx-auto h-12 w-12 text-gray-400 mb-4\" />\n                              <p className=\"text-gray-600\">Drop image here or click to upload</p>\n                              <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                onChange={handleImageChange}\n                                className=\"hidden\"\n                                id=\"image-upload\"\n                              />\n                              <Button\n                                type=\"button\"\n                                variant=\"outline\"\n                                onClick={() => document.getElementById('image-upload')?.click()}\n                                className=\"mt-2\"\n                              >\n                                Choose File\n                              </Button>\n                            </>\n                          )}\n                        </div>\n                      </div>\n\n                      <div>\n                        <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                          Article Backdrop Image\n                        </label>\n                        <p className=\"text-sm text-gray-500 mb-4\">\n                          Upload a custom backdrop image that will appear behind the article text\n                        </p>\n                        \n                        {backgroundImageUrl && (\n                          <div className=\"mb-4\">\n                            <p className=\"text-sm font-medium text-gray-700 mb-2\">Current Backdrop:</p>\n                            <img \n                              src={backgroundImageUrl} \n                              alt=\"Article backdrop preview\" \n                              className=\"w-full max-w-md h-32 object-cover rounded-lg border\"\n                            />\n                            <Button\n                              type=\"button\"\n                              variant=\"outline\"\n                              size=\"sm\"\n                              onClick={() => setBackgroundImageUrl(\"\")}\n                              className=\"mt-2\"\n                            >\n                              Remove Backdrop\n                            </Button>\n                          </div>\n                        )}\n                        \n                        <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-ocean transition-colors\">\n                          <input\n                            type=\"file\"\n                            accept=\"image/*\"\n                            onChange={async (e) => {\n                              const file = e.target.files?.[0];\n                              if (!file) return;\n\n                              try {\n                                const uploadResult = await api.upload.image(file);\n                                setBackgroundImageUrl(uploadResult.imageUrl);\n                                toast({\n                                  title: \"Success\",\n                                  description: \"Backdrop image uploaded successfully\",\n                                });\n                              } catch (error) {\n                                toast({\n                                  title: \"Error\", \n                                  description: \"Failed to upload backdrop image\",\n                                  variant: \"destructive\"\n                                });\n                              }\n                            }}\n                            className=\"hidden\"\n                            id=\"backdrop-upload\"\n                          />\n                          <Button\n                            type=\"button\"\n                            onClick={() => document.getElementById('backdrop-upload')?.click()}\n                            className=\"bg-ocean hover:bg-teal-600 text-white\"\n                          >\n                            <Image className=\"w-4 h-4 mr-2\" />\n                            Upload Backdrop Image\n                          </Button>\n                        </div>\n                      </div>\n\n                      <FormField\n                        control={form.control}\n                        name=\"excerpt\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Excerpt</FormLabel>\n                            <FormControl>\n                              <Textarea\n                                placeholder=\"Brief description of the article\"\n                                rows={3}\n                                {...field}\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"content\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Content</FormLabel>\n                            <FormControl>\n                              <RichTextEditor\n                                content={field.value}\n                                onChange={field.onChange}\n                                placeholder=\"Start writing your article...\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"author\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>Author</FormLabel>\n                            <FormControl>\n                              <Input placeholder=\"Author name\" {...field} />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n\n                      <FormField\n                        control={form.control}\n                        name=\"isDraft\"\n                        render={({ field }) => (\n                          <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                            <FormControl>\n                              <Checkbox\n                                checked={field.value}\n                                onCheckedChange={field.onChange}\n                              />\n                            </FormControl>\n                            <div className=\"space-y-1 leading-none\">\n                              <FormLabel>Save as draft</FormLabel>\n                            </div>\n                          </FormItem>\n                        )}\n                      />\n\n                      <div className=\"flex justify-end space-x-3 pt-6\">\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => {\n                            setIsCreateDialogOpen(false);\n                            resetForm();\n                          }}\n                        >\n                          Cancel\n                        </Button>\n                        <Button\n                          type=\"submit\"\n                          disabled={createMutation.isPending || updateMutation.isPending}\n                          className=\"bg-ocean hover:bg-teal-600\"\n                        >\n                          {editingArticle ? \"Update Article\" : \"Create Article\"}\n                        </Button>\n                      </div>\n                    </form>\n                  </Form>\n                </DialogContent>\n              </Dialog>\n            </div>\n\n            {/* Articles List */}\n            <div className=\"bg-white rounded-lg shadow-sm\">\n              {isLoading ? (\n                <div className=\"p-6 space-y-4\">\n                  {[...Array(5)].map((_, i) => (\n                    <div key={i} className=\"flex items-center justify-between p-4 bg-gray-50 rounded-lg animate-pulse\">\n                      <div className=\"space-y-2\">\n                        <div className=\"h-4 bg-gray-200 rounded w-64\"></div>\n                        <div className=\"h-3 bg-gray-200 rounded w-48\"></div>\n                      </div>\n                      <div className=\"flex space-x-2\">\n                        <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\n                        <div className=\"h-8 w-8 bg-gray-200 rounded\"></div>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : articles && articles.length > 0 ? (\n                <div className=\"divide-y divide-gray-200\">\n                  {articles.map((article) => (\n                    <div key={article.id} className=\"p-6 flex items-center justify-between hover:bg-gray-50\">\n                      <div className=\"flex-1\">\n                        <h3 className=\"font-medium text-gray-900 mb-1\">{article.title}</h3>\n                        <div className=\"flex items-center text-sm text-gray-500 space-x-4\">\n                          <span className={`px-2 py-1 rounded-full text-xs ${\n                            article.category === \"tech-finance\" ? \"bg-ocean/10 text-ocean\" : \"bg-surf/10 text-surf\"\n                          }`}>\n                            {article.category === \"tech-finance\" ? \"Tech+Finance\" : \"Jiu-Jitsu+Surf\"}\n                          </span>\n                          <span>{article.isDraft ? \"Draft\" : \"Published\"}</span>\n                          <span>{formatDistanceToNow(new Date(article.createdAt), { addSuffix: true })}</span>\n                        </div>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => handleEdit(article)}\n                          className=\"text-ocean hover:text-teal-600\"\n                        >\n                          <Edit className=\"w-4 h-4\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"sm\"\n                          onClick={() => {\n                            if (confirm(\"Are you sure you want to delete this article?\")) {\n                              deleteMutation.mutate(article.id);\n                            }\n                          }}\n                          className=\"text-red-500 hover:text-red-600\"\n                          disabled={deleteMutation.isPending}\n                        >\n                          <Trash2 className=\"w-4 h-4\" />\n                        </Button>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              ) : (\n                <div className=\"p-12 text-center\">\n                  <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No articles yet</h3>\n                  <p className=\"text-gray-600 mb-6\">Get started by creating your first article.</p>\n                  <Button onClick={() => setIsCreateDialogOpen(true)} className=\"bg-ocean hover:bg-teal-600\">\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Create Article\n                  </Button>\n                </div>\n              )}\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"settings\" className=\"space-y-6\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h3 className=\"text-lg font-medium text-gray-900 mb-6\">Site Settings</h3>\n              \n              <div className=\"space-y-6 max-w-2xl\">\n                <div>\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Homepage Background Image\n                  </label>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    Upload a new background image for the homepage hero section\n                  </p>\n                  \n                  {/* Current Background Preview */}\n                  {siteSettings?.heroBackgroundUrl && (\n                    <div className=\"mb-4\">\n                      <p className=\"text-sm font-medium text-gray-700 mb-2\">Current Background:</p>\n                      <img \n                        src={siteSettings.heroBackgroundUrl} \n                        alt=\"Current background\" \n                        className=\"w-full max-w-md h-32 object-cover rounded-lg border\"\n                      />\n                    </div>\n                  )}\n\n                  <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-6 text-center hover:border-ocean transition-colors\">\n                    <input\n                      type=\"file\"\n                      accept=\"image/*\"\n                      onChange={async (e) => {\n                        const file = e.target.files?.[0];\n                        if (!file) return;\n\n                        try {\n                          const uploadResult = await api.upload.image(file);\n                          await updateSettingsMutation.mutateAsync({ heroBackgroundUrl: uploadResult.imageUrl });\n                        } catch (error) {\n                          toast({\n                            title: \"Error\", \n                            description: \"Failed to upload background image\",\n                            variant: \"destructive\"\n                          });\n                        }\n                      }}\n                      className=\"hidden\"\n                      id=\"homepage-background-upload\"\n                    />\n                    <Button\n                      type=\"button\"\n                      onClick={() => document.getElementById('homepage-background-upload')?.click()}\n                      className=\"bg-ocean hover:bg-teal-600 text-white\"\n                      disabled={updateSettingsMutation.isPending}\n                    >\n                      <Image className=\"w-4 h-4 mr-2\" />\n                      {updateSettingsMutation.isPending ? \"Uploading...\" : \"Upload Background Image\"}\n                    </Button>\n                  </div>\n                </div>\n\n                <div className=\"border-t pt-6\">\n                  <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                    Background Audio\n                  </label>\n                  <p className=\"text-sm text-gray-500 mb-4\">\n                    Upload a custom audio file to play as background music instead of the default ocean sounds\n                  </p>\n                  \n                  {/* Current Audio Preview */}\n                  {siteSettings?.backgroundAudioUrl && (\n                    <div className=\"mb-4\">\n                      <p className=\"text-sm font-medium text-gray-700 mb-2\">Current Background Audio:</p>\n                      <div className=\"flex items-center space-x-2 p-3 bg-gray-50 rounded-lg border\">\n                        <audio controls className=\"flex-1\">\n                          <source src={siteSettings.backgroundAudioUrl} />\n                          Your browser does not support the audio element.\n                        </audio>\n                      </div>\n                    </div>\n                  )}\n\n                  <AudioUploader\n                    onUploadComplete={(audioUrl) => {\n                      toast({\n                        title: \"Background audio updated!\",\n                        description: \"Your custom background audio is now ready to use.\",\n                      });\n                    }}\n                  />\n                </div>\n\n                <div className=\"border-t pt-6\">\n                  <h4 className=\"text-lg font-medium text-gray-900 mb-4 flex items-center\">\n                    <Type className=\"w-5 h-5 mr-2\" />\n                    Text Appearance\n                  </h4>\n                  \n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2\">\n                        Text Size\n                      </label>\n                      <p className=\"text-sm text-gray-500 mb-3\">\n                        Choose the size of text displayed on articles\n                      </p>\n                      <Select \n                        value={siteSettings?.textSize || \"medium\"}\n                        onValueChange={(value) => updateSettingsMutation.mutate({ textSize: value })}\n                        data-testid=\"select-textsize\"\n                      >\n                        <SelectTrigger className=\"w-full\">\n                          <SelectValue placeholder=\"Select text size\" />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"small\" data-testid=\"option-small\">Small</SelectItem>\n                          <SelectItem value=\"medium\" data-testid=\"option-medium\">Medium (Default)</SelectItem>\n                          <SelectItem value=\"large\" data-testid=\"option-large\">Large</SelectItem>\n                          <SelectItem value=\"extra-large\" data-testid=\"option-extra-large\">Extra Large</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div>\n                      <label className=\"block text-sm font-medium text-gray-700 mb-2 flex items-center\">\n                        <Palette className=\"w-4 h-4 mr-1\" />\n                        Text Color\n                      </label>\n                      <p className=\"text-sm text-gray-500 mb-3\">\n                        Choose the color of text displayed on articles\n                      </p>\n                      <div className=\"flex items-center space-x-3\">\n                        <input\n                          type=\"color\"\n                          value={siteSettings?.textColor || \"#ffffff\"}\n                          onChange={(e) => updateSettingsMutation.mutate({ textColor: e.target.value })}\n                          className=\"w-12 h-10 rounded border border-gray-300 cursor-pointer\"\n                          data-testid=\"input-textcolor\"\n                        />\n                        <div className=\"flex-1\">\n                          <Input\n                            type=\"text\"\n                            value={siteSettings?.textColor || \"#ffffff\"}\n                            onChange={(e) => updateSettingsMutation.mutate({ textColor: e.target.value })}\n                            placeholder=\"#ffffff\"\n                            className=\"font-mono text-sm\"\n                            data-testid=\"input-colorhex\"\n                          />\n                        </div>\n                      </div>\n                      \n                      {/* Color Preview */}\n                      <div className=\"mt-3 p-3 bg-gray-800 rounded-lg\">\n                        <p className=\"text-sm font-medium mb-1\" style={{ color: siteSettings?.textColor || \"#ffffff\" }}>\n                          Preview: This is how your text will appear\n                        </p>\n                        <p className=\"text-xs\" style={{ color: siteSettings?.textColor || \"#ffffff\" }}>\n                          Text size: {siteSettings?.textSize || \"medium\"}\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </TabsContent>\n        </Tabs>\n      </div>\n    </div>\n  );\n}\n","size_bytes":36214},"client/src/pages/article.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute, Link } from \"wouter\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { ArrowLeft, Calendar, User, Volume2, VolumeX } from \"lucide-react\";\nimport { api } from \"@/lib/api\";\nimport { Button } from \"@/components/ui/button\";\nimport { CommentsSection } from \"@/components/CommentsSection\";\nimport { useBackgroundAudio } from \"@/hooks/useBackgroundAudio\";\nimport jiujitsuBg1 from \"@assets/generated_images/Jiu-jitsu_training_background_26446023.png\";\nimport jiujitsuBg2 from \"@assets/generated_images/IBJJF_tournament_competition_background_500eecc8.png\";\nimport jiujitsuBg3 from \"@assets/generated_images/Traditional_academy_training_background_8ea2cd6f.png\";\nimport jiujitsuBg4 from \"@assets/generated_images/Championship_podium_ceremony_background_d9b7471a.png\";\nimport jiujitsuBg5 from \"@assets/generated_images/Technical_guard_position_background_68ab40d8.png\";\n\n// Jiu-jitsu cover images\nimport jiujitsuCover1 from \"@assets/generated_images/Jiu-jitsu_competition_cover_photo_81aa2f4f.png\";\nimport jiujitsuCover2 from \"@assets/generated_images/Jiu-jitsu_instruction_cover_photo_87e9f438.png\";\nimport jiujitsuCover3 from \"@assets/generated_images/Championship_victory_cover_photo_bc411842.png\";\nimport jiujitsuCover4 from \"@assets/generated_images/Training_session_cover_photo_484e2d2e.png\";\n\n// Surfing background images\nimport surfBg1 from \"@assets/generated_images/Ocean_surfing_waves_background_b972c499.png\";\nimport surfBg2 from \"@assets/generated_images/Beach_sunset_waves_background_9a90e60c.png\";\nimport surfBg3 from \"@assets/generated_images/Underwater_ocean_light_background_82da04c1.png\";\nimport surfBg4 from \"@assets/generated_images/Aerial_ocean_view_background_a4eee5b2.png\";\n\nexport default function Article() {\n  const [, params] = useRoute(\"/article/:id\");\n  const articleId = params?.id;\n  \n  const { isPlaying, toggle, setVolume, volume } = useBackgroundAudio();\n\n  // Array of jiu-jitsu background images\n  const jiujitsuBackgrounds = [jiujitsuBg1, jiujitsuBg2, jiujitsuBg3, jiujitsuBg4, jiujitsuBg5];\n  \n  // Array of surfing background images\n  const surfBackgrounds = [surfBg1, surfBg2, surfBg3, surfBg4];\n  \n  // Array of jiu-jitsu cover images\n  const jiujitsuCovers = [jiujitsuCover1, jiujitsuCover2, jiujitsuCover3, jiujitsuCover4];\n  \n  // Function to get a consistent background for jiu-jitsu articles\n  const getJiujitsuBackground = (articleId: string) => {\n    const hash = articleId.split('').reduce((a, b) => {\n      a = ((a << 5) - a) + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n    const index = Math.abs(hash) % jiujitsuBackgrounds.length;\n    return jiujitsuBackgrounds[index];\n  };\n\n  // Function to get a consistent surfing background for non-jiu-jitsu articles\n  const getSurfBackground = (articleId: string) => {\n    const hash = articleId.split('').reduce((a, b) => {\n      a = ((a << 3) - a) + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n    const index = Math.abs(hash) % surfBackgrounds.length;\n    return surfBackgrounds[index];\n  };\n\n  // Function to get a consistent cover image for each jiu-jitsu article\n  const getJiujitsuCover = (articleId: string) => {\n    // Use article ID to create a consistent but distributed selection for covers\n    const hash = articleId.split('').reduce((a, b) => {\n      a = ((a << 7) - a) + b.charCodeAt(0); // Different hash for covers\n      return a & a;\n    }, 0);\n    const index = Math.abs(hash) % jiujitsuCovers.length;\n    return jiujitsuCovers[index];\n  };\n\n  const { data: article, isLoading, error } = useQuery({\n    queryKey: [\"/api/articles\", articleId],\n    queryFn: () => api.articles.getById(articleId!),\n    enabled: !!articleId,\n  });\n\n  const { data: siteSettings } = useQuery({\n    queryKey: [\"/api/settings\"],\n    queryFn: () => api.settings.get(),\n  });\n\n  // Helper function to get text size multiplier\n  const getTextSizeMultiplier = (textSize: string) => {\n    switch (textSize) {\n      case 'small': return 0.85;\n      case 'large': return 1.15;\n      case 'extra-large': return 1.3;\n      default: return 1; // medium\n    }\n  };\n\n  // Get custom text styles\n  const customTextStyles = {\n    color: siteSettings?.textColor || '#ffffff',\n    fontSize: `${getTextSizeMultiplier(siteSettings?.textSize || 'medium')}em`,\n  };\n\n  if (!articleId) {\n    return <div>Article ID not found</div>;\n  }\n\n  if (isLoading) {\n    return (\n      <div className=\"min-h-screen bg-gray-50\">\n        <div className=\"max-w-4xl mx-auto px-4 py-12\">\n          <div className=\"bg-gray-200 rounded-lg h-8 w-32 mb-8 animate-pulse\"></div>\n          <div className=\"bg-gray-200 rounded-lg h-96 mb-8 animate-pulse\"></div>\n          <div className=\"space-y-4\">\n            <div className=\"bg-gray-200 rounded h-4 animate-pulse\"></div>\n            <div className=\"bg-gray-200 rounded h-4 animate-pulse\"></div>\n            <div className=\"bg-gray-200 rounded h-4 w-3/4 animate-pulse\"></div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !article) {\n    return (\n      <div className=\"min-h-screen bg-gray-50 flex items-center justify-center\">\n        <div className=\"text-center\">\n          <h1 className=\"text-2xl font-bold text-gray-900 mb-4\">Article not found</h1>\n          <p className=\"text-gray-600 mb-8\">The article you're looking for doesn't exist.</p>\n          <Link href=\"/\">\n            <Button>Return Home</Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  const getCategoryInfo = (cat: string) => {\n    switch (cat) {\n      case \"tech\":\n        return { title: \"Tech\", color: \"text-red-400\" };\n      case \"finance\":\n        return { title: \"Finance\", color: \"text-green-400\" };\n      case \"jiu-jitsu\":\n        return { title: \"Jiu-Jitsu\", color: \"text-blue-400\" };\n      case \"surf\":\n        return { title: \"Surf\", color: \"text-yellow-400\" };\n      default:\n        return { title: \"ChillVibes\", color: \"text-white\" };\n    }\n  };\n\n  const { title: categoryTitle, color: categoryColor } = getCategoryInfo(article.category);\n\n  return (\n    <div className=\"min-h-screen relative\">\n      {/* Background Image with Text Readability */}\n      <div className=\"fixed inset-0 z-0\">\n        <img \n          src={article.category === \"jiu-jitsu\" ? getJiujitsuBackground(articleId!) : getSurfBackground(articleId!)}\n          alt=\"Article background\"\n          className=\"w-full h-full object-cover parallax-image\"\n        />\n        {/* Enhanced overlay for better text readability while preserving background visibility */}\n        <div className=\"absolute inset-0 bg-white/10 backdrop-blur-[1px]\"></div>\n      </div>\n      \n      <div className=\"relative z-10 max-w-4xl mx-auto px-4 py-12\">\n        {/* Navigation and Audio Controls */}\n        <div className=\"flex justify-between items-center mb-8\">\n          <Link href={`/category/${article.category}`}>\n            <Button variant=\"ghost\" className=\"hover:bg-white/20 text-white backdrop-blur-sm\">\n              <ArrowLeft className=\"w-4 h-4 mr-2\" />\n              Back to {categoryTitle}\n            </Button>\n          </Link>\n          \n          {/* Ocean Sound Controls */}\n          <div className=\"flex items-center gap-3\">\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={toggle}\n              className=\"hover:bg-white/20 text-white backdrop-blur-sm\"\n              title={isPlaying ? \"Pause ocean waves\" : \"Play ocean waves\"}\n            >\n              {isPlaying ? <Volume2 className=\"w-4 h-4\" /> : <VolumeX className=\"w-4 h-4\" />}\n            </Button>\n            {isPlaying && (\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={volume}\n                onChange={(e) => setVolume(parseFloat(e.target.value))}\n                className=\"w-16 h-2 bg-white/20 rounded-lg appearance-none cursor-pointer\"\n                title=\"Adjust ocean wave volume\"\n              />\n            )}\n          </div>\n        </div>\n\n        {/* Article Header */}\n        <header className=\"mb-8\">\n          <div className=\"flex items-center mb-4\">\n            <span className={`px-3 py-1 rounded-full text-sm font-medium bg-white/20 backdrop-blur-sm text-white`}>\n              {categoryTitle}\n            </span>\n          </div>\n          \n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-extrabold text-white mb-6 leading-tight enhanced-title\" style={{ textShadow: '3px 3px 10px rgba(0,0,0,0.9), 2px 2px 6px rgba(0,0,0,0.7), 0 0 8px rgba(0,0,0,0.5)' }}>\n            {article.title}\n          </h1>\n\n          <div className=\"flex items-center text-gray-200 space-x-6\" style={{ textShadow: '1px 1px 4px rgba(0,0,0,0.8), 0 0 3px rgba(0,0,0,0.6)' }}>\n            <div className=\"flex items-center\">\n              <User className=\"w-4 h-4 mr-2\" />\n              <span>{article.author}</span>\n            </div>\n            <div className=\"flex items-center\">\n              <Calendar className=\"w-4 h-4 mr-2\" />\n              <span>{formatDistanceToNow(new Date(article.createdAt), { addSuffix: true })}</span>\n            </div>\n          </div>\n        </header>\n\n\n        {/* Enhanced Article Content with Premium Typography */}\n        <article className=\"mb-12\">\n          <div className=\"content-container relative\">\n            {/* Excerpt/Lead paragraph if available */}\n            {article.excerpt && (\n              <div className=\"lead-paragraph mb-8 p-6 bg-transparent backdrop-blur-none rounded-2xl border-none shadow-none\">\n                <p className=\"text-xl md:text-2xl text-white leading-relaxed font-medium italic\" style={{ \n                  textShadow: '5px 5px 15px rgba(0,0,0,1), 3px 3px 8px rgba(0,0,0,1), 0 0 10px rgba(0,0,0,0.9)',\n                  color: customTextStyles.color,\n                  fontSize: `calc(1.25rem * ${getTextSizeMultiplier(siteSettings?.textSize || 'medium')})`\n                }}>\n                  \"{article.excerpt}\"\n                </p>\n              </div>\n            )}\n            \n            {/* Main content with enhanced typography and text shadows for visibility */}\n            <div className=\"prose prose-xl max-w-none enhanced-article-prose\">\n              <div \n                dangerouslySetInnerHTML={{ __html: article.content }}\n                className=\"prose-headings:text-white prose-p:text-white prose-strong:text-white prose-em:text-blue-200 prose-a:text-cyan-300 hover:prose-a:text-cyan-200 prose-blockquote:text-gray-200 prose-code:text-green-300 content-text\"\n                style={{ \n                  textShadow: '2px 2px 8px rgba(0,0,0,0.8), 1px 1px 4px rgba(0,0,0,0.6), 0 0 6px rgba(0,0,0,0.4)',\n                  letterSpacing: '0.01em',\n                  color: customTextStyles.color,\n                  fontSize: customTextStyles.fontSize,\n                  '--custom-text-color': customTextStyles.color,\n                  '--custom-text-size-multiplier': getTextSizeMultiplier(siteSettings?.textSize || 'medium').toString(),\n                } as React.CSSProperties & { [key: string]: string }}\n              />\n            </div>\n            \n            {/* Reading progress indicator */}\n            <div className=\"reading-progress-container mt-8\">\n              <div className=\"flex items-center justify-between text-sm text-gray-300\">\n                <span>Reading time: ~{Math.ceil(article.content.replace(/<[^>]*>/g, '').split(' ').length / 200)} min</span>\n                <span>Published {new Date(article.createdAt).toLocaleDateString()}</span>\n              </div>\n            </div>\n            \n            {/* Content enhancement overlays */}\n            <div className=\"content-backdrop absolute inset-0 -z-10\"></div>\n          </div>\n        </article>\n\n        {/* Enhanced Author Bio */}\n        <div className=\"mb-12 author-bio-container relative\">\n          <div className=\"p-6 bg-gradient-to-r from-white/15 via-white/10 to-white/15 backdrop-blur-md rounded-xl border border-white/30 shadow-2xl\">\n            <div className=\"author-bio-glow absolute inset-0 rounded-xl opacity-30\"></div>\n            <div className=\"flex items-start relative z-10\">\n              <div className=\"w-16 h-16 bg-gradient-to-br from-white/30 to-white/20 backdrop-blur-sm rounded-full mr-4 flex items-center justify-center shadow-lg border border-white/20\">\n                <span className=\"text-xl font-bold text-white drop-shadow-lg\">\n                  {article.author.charAt(0)}\n                </span>\n              </div>\n              <div>\n                <h3 className=\"text-xl font-bold text-white mb-2 drop-shadow-lg\">{article.author}</h3>\n                <p className=\"text-gray-200 drop-shadow-lg leading-relaxed\">\n                  Contributing writer for ChillVibes community, sharing insights on the balanced lifestyle of tech, finance, jiu-jitsu, and surf culture.\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Comments Section */}\n        <div className=\"bg-white/10 backdrop-blur-md rounded-2xl shadow-lg p-8 border border-white/20\">\n          <CommentsSection articleId={articleId} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","size_bytes":13219},"client/src/pages/category.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport { api } from \"@/lib/api\";\nimport ArticleCard from \"@/components/article-card\";\n\nexport default function Category() {\n  const [, params] = useRoute(\"/category/:category\");\n  const category = params?.category;\n\n  const { data: articles, isLoading } = useQuery({\n    queryKey: [\"/api/articles\", category],\n    queryFn: () => api.articles.getAll(category),\n    enabled: !!category,\n  });\n\n  const getCategoryInfo = (cat: string) => {\n    switch (cat) {\n      case \"tech\":\n        return { title: \"Tech\", color: \"text-red-500\", description: \"Innovation and technology\" };\n      case \"finance\":\n        return { title: \"Finance\", color: \"text-green-500\", description: \"Markets and money\" };\n      case \"jiu-jitsu\":\n        return { title: \"Jiu-Jitsu\", color: \"category-jiu-jitsu\", description: \"Martial arts and mindset\" };\n      case \"surf\":\n        return { title: \"Surf\", color: \"category-surf\", description: \"Ocean life and flow\" };\n      default:\n        return { title: \"Unknown\", color: \"text-gray-500\", description: \"Category not found\" };\n    }\n  };\n\n  const { title: categoryTitle, color: categoryColor, description: categoryDescription } = getCategoryInfo(category || \"\");\n\n  if (!category) {\n    return <div>Category not found</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen relative\">\n      {/* Full Page Surf Background Image */}\n      <div className=\"fixed inset-0 z-0\">\n        <img \n          src=\"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"\n          alt=\"Background\"\n          className=\"w-full h-full object-cover\"\n        />\n        {/* Removed dark overlay for cleaner appearance */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-ocean/10 to-surf/10\"></div>\n      </div>\n      \n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 py-12\">\n        {/* Category Header */}\n        <div className=\"text-center mb-12\">\n          <h1 className={`text-4xl md:text-5xl font-bold mb-4 ${categoryColor} drop-shadow-lg`}>\n            {categoryTitle}\n          </h1>\n          <p className=\"text-xl text-white max-w-2xl mx-auto drop-shadow-md\">\n            {categoryDescription}\n          </p>\n        </div>\n\n        {/* Articles Grid */}\n        {isLoading ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"bg-gray-200 rounded-2xl h-96 animate-pulse\"></div>\n            ))}\n          </div>\n        ) : articles && articles.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {articles.map((article) => (\n              <ArticleCard key={article.id} article={article} />\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center py-12\">\n            <h3 className=\"text-xl font-semibold text-white mb-2 drop-shadow-lg\">No articles yet</h3>\n            <p className=\"text-gray-200 drop-shadow-md\">\n              Be the first to contribute to the {categoryTitle} section!\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","size_bytes":3246},"client/src/pages/home.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { Link } from \"wouter\";\nimport { ChartLine, Waves, Code, DollarSign, Activity } from \"lucide-react\";\nimport { api } from \"@/lib/api\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\n\nexport default function Home() {\n\n  const { data: siteSettings } = useQuery({\n    queryKey: [\"/api/settings\"],\n    queryFn: () => api.settings.get(),\n  });\n\n  return (\n    <div className=\"min-h-screen relative\">\n      {/* Full Page Background Image */}\n      <div className=\"fixed inset-0 z-0\">\n        <img \n          src={siteSettings?.heroBackgroundUrl || \"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"}\n          alt=\"Background\"\n          className=\"w-full h-full object-cover\"\n        />\n        {/* Removed dark overlay for cleaner appearance */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-ocean/10 to-surf/10\"></div>\n      </div>\n\n      {/* Hero Section */}\n      <section className=\"relative z-10 py-20 overflow-hidden\">\n        \n        <div className=\"relative max-w-4xl mx-auto px-4 text-center\">\n          <h1 className=\"text-4xl md:text-5xl lg:text-6xl font-bold text-white mb-6 leading-tight drop-shadow-lg\">\n            <span className=\"text-red-400\">Tech</span><span className=\"text-white\">+</span><span className=\"text-green-400\">Finance</span>,<br/>\n            <span className=\"inline-block ml-20 md:ml-32 lg:ml-40\">\n              <span className=\"text-yellow-400\">Jiu-Jitsu</span><span className=\"text-white\">+</span><span className=\"text-blue-400\">Surf</span>\n            </span><br/>\n            <span className=\"text-white font-medium text-xl md:text-2xl lg:text-3xl inline-block ml-2 md:ml-4\">: a digital lifestyle community spreading chill vibes</span>\n          </h1>\n          <p className=\"text-xl text-gray-100 mb-20 max-w-2xl mx-auto drop-shadow-md\">\n            Where innovation meets zen, and hustle meets flow. Join our community of mindful achievers living the balanced life.\n          </p>\n        </div>\n      </section>\n\n      {/* Category Buttons Section */}\n      <section className=\"relative z-10 py-16\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6\">\n            <Link href=\"/category/tech\">\n              <div className=\"group bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-white/50 hover:border-red-300 cursor-pointer hover:bg-white\">\n                <div className=\"flex items-center justify-center w-12 h-12 bg-red-500 rounded-xl mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <Code className=\"text-white w-6 h-6\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Tech</h3>\n                <p className=\"text-gray-600 text-sm\">Innovation and technology</p>\n              </div>\n            </Link>\n            \n            <Link href=\"/category/finance\">\n              <div className=\"group bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-white/50 hover:border-green-300 cursor-pointer hover:bg-white\">\n                <div className=\"flex items-center justify-center w-12 h-12 bg-green-500 rounded-xl mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <DollarSign className=\"text-white w-6 h-6\" />\n                </div>\n                <h3 className=\"text-xl font-bold text-gray-900 mb-2\">Finance</h3>\n                <p className=\"text-gray-600 text-sm\">Markets and money</p>\n              </div>\n            </Link>\n            \n            <Link href=\"/category/jiu-jitsu\">\n              <div className=\"group bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-white/50 hover:border-yellow-300 cursor-pointer hover:bg-white\">\n                <div className=\"flex items-center justify-center w-12 h-12 bg-yellow-500 rounded-xl mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <Activity className=\"text-white w-6 h-6\" />\n                </div>\n                <h3 className=\"text-xl font-bold category-jiu-jitsu mb-2\">Jiu-Jitsu</h3>\n                <p className=\"text-gray-600 text-sm\">Martial arts and mindset</p>\n              </div>\n            </Link>\n            \n            <Link href=\"/category/surf\">\n              <div className=\"group bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 p-6 border border-white/50 hover:border-blue-300 cursor-pointer hover:bg-white\">\n                <div className=\"flex items-center justify-center w-12 h-12 bg-blue-500 rounded-xl mx-auto mb-4 group-hover:scale-110 transition-transform duration-300\">\n                  <Waves className=\"text-white w-6 h-6\" />\n                </div>\n                <h3 className=\"text-xl font-bold category-surf mb-2\">Surf</h3>\n                <p className=\"text-gray-600 text-sm\">Ocean life and flow</p>\n              </div>\n            </Link>\n          </div>\n        </div>\n      </section>\n\n      {/* Subcategories Section */}\n      <section className=\"relative z-10 py-16\">\n        <div className=\"max-w-6xl mx-auto px-4\">\n          <div className=\"text-center mb-12\">\n            <h2 className=\"text-3xl font-bold text-white mb-4 drop-shadow-lg\">Explore Our Content Areas</h2>\n            <p className=\"text-gray-100 text-lg drop-shadow-md\">Dive deeper into specific topics that fuel your lifestyle</p>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n            {/* Tech Subcategories */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-bold text-red-400 mb-4 text-center\">Tech</h3>\n              <Link href=\"/category/tech/ai\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-red-200 hover:border-red-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">AI & Innovation</h4>\n                  <p className=\"text-sm text-gray-600\">Artificial intelligence and cutting-edge technology</p>\n                </div>\n              </Link>\n              <Link href=\"/category/tech/blockchain\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-red-200 hover:border-red-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Blockchain</h4>\n                  <p className=\"text-sm text-gray-600\">Web3, crypto tech, and decentralized systems</p>\n                </div>\n              </Link>\n              <Link href=\"/category/tech/mobile\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-red-200 hover:border-red-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Mobile Apps</h4>\n                  <p className=\"text-sm text-gray-600\">Mobile development and app innovations</p>\n                </div>\n              </Link>\n            </div>\n\n            {/* Finance Subcategories */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-bold text-green-400 mb-4 text-center\">Finance</h3>\n              <Link href=\"/category/finance/travel-rewards\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-green-200 hover:border-green-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Travel Rewards</h4>\n                  <p className=\"text-sm text-gray-600\">Credit cards, points, and travel optimization</p>\n                </div>\n              </Link>\n              <Link href=\"/category/finance/crypto\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-green-200 hover:border-green-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Crypto & DeFi</h4>\n                  <p className=\"text-sm text-gray-600\">Digital currencies and decentralized finance</p>\n                </div>\n              </Link>\n              <Link href=\"/category/finance/markets\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-green-200 hover:border-green-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Markets</h4>\n                  <p className=\"text-sm text-gray-600\">Trading, investing, and market analysis</p>\n                </div>\n              </Link>\n            </div>\n\n            {/* Jiu-Jitsu Subcategories */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-bold text-yellow-400 mb-4 text-center\">Jiu-Jitsu</h3>\n              <Link href=\"/category/jiu-jitsu/training\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-yellow-200 hover:border-yellow-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Training & Mindset</h4>\n                  <p className=\"text-sm text-gray-600\">Techniques, philosophy, and mental development</p>\n                </div>\n              </Link>\n              <Link href=\"/category/jiu-jitsu/destinations\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-yellow-200 hover:border-yellow-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Destinations</h4>\n                  <p className=\"text-sm text-gray-600\">Best gyms and training locations worldwide</p>\n                </div>\n              </Link>\n              <Link href=\"/category/jiu-jitsu/competitions\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-yellow-200 hover:border-yellow-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Competitions</h4>\n                  <p className=\"text-sm text-gray-600\">Tournament updates and athlete profiles</p>\n                </div>\n              </Link>\n            </div>\n\n            {/* Surf Subcategories */}\n            <div className=\"space-y-4\">\n              <h3 className=\"text-xl font-bold text-blue-400 mb-4 text-center\">Surf</h3>\n              <Link href=\"/category/surf/forecasting\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Forecasting</h4>\n                  <p className=\"text-sm text-gray-600\">Wave predictions and surf conditions</p>\n                </div>\n              </Link>\n              <Link href=\"/category/surf/destinations\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Destinations</h4>\n                  <p className=\"text-sm text-gray-600\">Epic surf spots and hidden gems</p>\n                </div>\n              </Link>\n              <Link href=\"/category/surf/conservation\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Conservation</h4>\n                  <p className=\"text-sm text-gray-600\">Ocean protection and sustainable surfing</p>\n                </div>\n              </Link>\n              <Link href=\"/category/surf/gear\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Gear Reviews</h4>\n                  <p className=\"text-sm text-gray-600\">Surfboard and equipment reviews</p>\n                </div>\n              </Link>\n              <Link href=\"/category/surf/yoga\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Yoga</h4>\n                  <p className=\"text-sm text-gray-600\">Practices, gear, destinations, and benefits</p>\n                </div>\n              </Link>\n              <Link href=\"/category/surf/snowboarding\">\n                <div className=\"bg-white/90 backdrop-blur-sm rounded-xl p-4 hover:bg-white hover:shadow-lg transition-all duration-300 border border-blue-200 hover:border-blue-300\">\n                  <h4 className=\"font-semibold text-gray-900 mb-1\">Snowboarding</h4>\n                  <p className=\"text-sm text-gray-600\">Top destinations, gear, athlete events and news</p>\n                </div>\n              </Link>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      {/* Newsletter Signup */}\n      <section className=\"relative z-10 py-16\">\n        <div className=\"max-w-4xl mx-auto px-4 text-center\">\n          <h2 className=\"text-3xl font-bold text-white mb-4 drop-shadow-lg\">Stay in the Flow</h2>\n          <p className=\"text-gray-100 text-lg mb-8 drop-shadow-md\">Get the latest insights delivered to your inbox. No spam, just chill vibes.</p>\n          \n          <div className=\"max-w-md mx-auto\">\n            <div className=\"flex flex-col sm:flex-row gap-4\">\n              <Input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                className=\"flex-1 px-4 py-3 rounded-lg border-gray-200 focus:border-ocean focus:ring-2 focus:ring-ocean/20\"\n              />\n              <Button className=\"bg-ocean text-white px-6 py-3 rounded-lg hover:bg-teal-600 transition-colors font-medium whitespace-nowrap\">\n                Join Community\n              </Button>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n","size_bytes":14665},"client/src/pages/not-found.tsx":{"content":"import { Card, CardContent } from \"@/components/ui/card\";\nimport { AlertCircle } from \"lucide-react\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"min-h-screen w-full flex items-center justify-center bg-gray-50\">\n      <Card className=\"w-full max-w-md mx-4\">\n        <CardContent className=\"pt-6\">\n          <div className=\"flex mb-4 gap-2\">\n            <AlertCircle className=\"h-8 w-8 text-red-500\" />\n            <h1 className=\"text-2xl font-bold text-gray-900\">404 Page Not Found</h1>\n          </div>\n\n          <p className=\"mt-4 text-sm text-gray-600\">\n            Did you forget to add the page to the router?\n          </p>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n","size_bytes":711},"client/src/pages/subcategory.tsx":{"content":"import { useQuery } from \"@tanstack/react-query\";\nimport { useRoute } from \"wouter\";\nimport { api } from \"@/lib/api\";\nimport ArticleCard from \"@/components/article-card\";\n\nexport default function Subcategory() {\n  const [, params] = useRoute(\"/category/:category/:subcategory\");\n  const category = params?.category;\n  const subcategory = params?.subcategory;\n\n  const { data: articles, isLoading } = useQuery({\n    queryKey: [\"/api/articles\", category, subcategory],\n    queryFn: () => api.articles.getBySubcategory(category, subcategory),\n    enabled: !!(category && subcategory),\n  });\n\n  const getSubcategoryInfo = (cat: string, subcat: string) => {\n    const subcategoryMap: Record<string, Record<string, any>> = {\n      \"tech\": {\n        \"ai\": { title: \"AI & Innovation\", description: \"Artificial intelligence and cutting-edge technology\" },\n        \"blockchain\": { title: \"Blockchain\", description: \"Web3, crypto tech, and decentralized systems\" },\n        \"mobile\": { title: \"Mobile Apps\", description: \"Mobile development and app innovations\" }\n      },\n      \"finance\": {\n        \"travel-rewards\": { title: \"Travel Rewards\", description: \"Credit cards, points, and travel optimization\" },\n        \"crypto\": { title: \"Crypto & DeFi\", description: \"Digital currencies and decentralized finance\" },\n        \"markets\": { title: \"Markets\", description: \"Trading, investing, and market analysis\" }\n      },\n      \"jiu-jitsu\": {\n        \"training\": { title: \"Training & Mindset\", description: \"Techniques, philosophy, and mental development\" },\n        \"destinations\": { title: \"Destinations\", description: \"Best gyms and training locations worldwide\" },\n        \"competitions\": { title: \"Competitions\", description: \"Tournament updates and athlete profiles\" }\n      },\n      \"surf\": {\n        \"forecasting\": { title: \"Forecasting\", description: \"Wave predictions and surf conditions\" },\n        \"destinations\": { title: \"Destinations\", description: \"Epic surf spots and hidden gems\" },\n        \"conservation\": { title: \"Conservation\", description: \"Ocean protection and sustainable surfing\" },\n        \"gear\": { title: \"Gear Reviews\", description: \"Surfboard and equipment reviews\" },\n        \"yoga\": { title: \"Yoga\", description: \"Yoga practices, mindfulness, and surf yoga\" },\n        \"snowboarding\": { title: \"Snowboarding\", description: \"Top destinations, gear, athlete events and news\" }\n      }\n    };\n\n    return subcategoryMap[cat]?.[subcat] || { title: \"Unknown\", description: \"Subcategory not found\" };\n  };\n\n  const { title: subcategoryTitle, description: subcategoryDescription } = getSubcategoryInfo(category || \"\", subcategory || \"\");\n\n  if (!category || !subcategory) {\n    return <div>Subcategory not found</div>;\n  }\n\n  return (\n    <div className=\"min-h-screen relative\">\n      {/* Full Page Surf Background Image */}\n      <div className=\"fixed inset-0 z-0\">\n        <img \n          src=\"https://images.unsplash.com/photo-1502680390469-be75c86b636f?ixlib=rb-4.0.3&auto=format&fit=crop&w=2000&h=1200&q=80\"\n          alt=\"Background\"\n          className=\"w-full h-full object-cover\"\n        />\n        {/* Removed dark overlay for cleaner appearance */}\n        <div className=\"absolute inset-0 bg-gradient-to-r from-ocean/10 to-surf/10\"></div>\n      </div>\n      \n      <div className=\"relative z-10 max-w-7xl mx-auto px-4 py-12\">\n        {/* Subcategory Header */}\n        <div className=\"text-center mb-12\">\n          <nav className=\"text-sm text-gray-300 mb-4\">\n            <span className=\"hover:text-white\">\n              {category.charAt(0).toUpperCase() + category.slice(1).replace('-', ' ')}\n            </span>\n            <span className=\"mx-2\">→</span>\n            <span className=\"text-white font-medium\">{subcategoryTitle}</span>\n          </nav>\n          <h1 className=\"text-4xl md:text-5xl font-bold mb-4 text-white drop-shadow-lg\">\n            {subcategoryTitle}\n          </h1>\n          <p className=\"text-xl text-gray-100 max-w-2xl mx-auto drop-shadow-md\">\n            {subcategoryDescription}\n          </p>\n        </div>\n\n        {/* Articles Grid */}\n        {isLoading ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {[...Array(6)].map((_, i) => (\n              <div key={i} className=\"bg-white/10 backdrop-blur-sm rounded-2xl h-96 animate-pulse\" />\n            ))}\n          </div>\n        ) : articles && articles.length > 0 ? (\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n            {articles.map((article) => (\n              <div key={article.id} className=\"bg-white/95 backdrop-blur-sm rounded-2xl shadow-lg hover:shadow-xl transition-all duration-300 border border-white/50\">\n                <ArticleCard article={article} />\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"text-center text-white py-16\">\n            <h3 className=\"text-2xl font-bold mb-4\">No articles found</h3>\n            <p className=\"text-gray-300\">Check back soon for fresh content in this subcategory!</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}","size_bytes":5125},"client/src/components/ui/accordion.tsx":{"content":"import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","size_bytes":1977},"client/src/components/ui/alert-dialog.tsx":{"content":"import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n","size_bytes":4420},"client/src/components/ui/alert.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n","size_bytes":1584},"client/src/components/ui/aspect-ratio.tsx":{"content":"import * as AspectRatioPrimitive from \"@radix-ui/react-aspect-ratio\"\n\nconst AspectRatio = AspectRatioPrimitive.Root\n\nexport { AspectRatio }\n","size_bytes":140},"client/src/components/ui/avatar.tsx":{"content":"import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }","size_bytes":1404},"client/src/components/ui/badge.tsx":{"content":"import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }","size_bytes":1127},"client/src/components/ui/breadcrumb.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-muted-foreground sm:gap-2.5\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-foreground\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-foreground\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:w-3.5 [&>svg]:h-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n","size_bytes":2712},"client/src/components/ui/button.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n","size_bytes":1901},"client/src/components/ui/calendar.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground aria-selected:bg-accent/50 aria-selected:text-muted-foreground\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ className, ...props }) => (\n          <ChevronLeft className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n        IconRight: ({ className, ...props }) => (\n          <ChevronRight className={cn(\"h-4 w-4\", className)} {...props} />\n        ),\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n","size_bytes":2695},"client/src/components/ui/card.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n","size_bytes":1858},"client/src/components/ui/carousel.tsx":{"content":"import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n","size_bytes":6210},"client/src/components/ui/chart.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","size_bytes":10481},"client/src/components/ui/checkbox.tsx":{"content":"import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n","size_bytes":1056},"client/src/components/ui/collapsible.tsx":{"content":"\"use client\"\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n","size_bytes":329},"client/src/components/ui/command.tsx":{"content":"import * as React from \"react\"\nimport { type DialogProps } from \"@radix-ui/react-dialog\"\nimport { Command as CommandPrimitive } from \"cmdk\"\nimport { Search } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Dialog, DialogContent } from \"@/components/ui/dialog\"\n\nconst Command = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full flex-col overflow-hidden rounded-md bg-popover text-popover-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nCommand.displayName = CommandPrimitive.displayName\n\nconst CommandDialog = ({ children, ...props }: DialogProps) => {\n  return (\n    <Dialog {...props}>\n      <DialogContent className=\"overflow-hidden p-0 shadow-lg\">\n        <Command className=\"[&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground [&_[cmdk-group]:not([hidden])_~[cmdk-group]]:pt-0 [&_[cmdk-group]]:px-2 [&_[cmdk-input-wrapper]_svg]:h-5 [&_[cmdk-input-wrapper]_svg]:w-5 [&_[cmdk-input]]:h-12 [&_[cmdk-item]]:px-2 [&_[cmdk-item]]:py-3 [&_[cmdk-item]_svg]:h-5 [&_[cmdk-item]_svg]:w-5\">\n          {children}\n        </Command>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nconst CommandInput = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Input>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Input>\n>(({ className, ...props }, ref) => (\n  <div className=\"flex items-center border-b px-3\" cmdk-input-wrapper=\"\">\n    <Search className=\"mr-2 h-4 w-4 shrink-0 opacity-50\" />\n    <CommandPrimitive.Input\n      ref={ref}\n      className={cn(\n        \"flex h-11 w-full rounded-md bg-transparent py-3 text-sm outline-none placeholder:text-muted-foreground disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  </div>\n))\n\nCommandInput.displayName = CommandPrimitive.Input.displayName\n\nconst CommandList = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.List\n    ref={ref}\n    className={cn(\"max-h-[300px] overflow-y-auto overflow-x-hidden\", className)}\n    {...props}\n  />\n))\n\nCommandList.displayName = CommandPrimitive.List.displayName\n\nconst CommandEmpty = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Empty>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Empty>\n>((props, ref) => (\n  <CommandPrimitive.Empty\n    ref={ref}\n    className=\"py-6 text-center text-sm\"\n    {...props}\n  />\n))\n\nCommandEmpty.displayName = CommandPrimitive.Empty.displayName\n\nconst CommandGroup = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Group>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Group>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Group\n    ref={ref}\n    className={cn(\n      \"overflow-hidden p-1 text-foreground [&_[cmdk-group-heading]]:px-2 [&_[cmdk-group-heading]]:py-1.5 [&_[cmdk-group-heading]]:text-xs [&_[cmdk-group-heading]]:font-medium [&_[cmdk-group-heading]]:text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandGroup.displayName = CommandPrimitive.Group.displayName\n\nconst CommandSeparator = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nCommandSeparator.displayName = CommandPrimitive.Separator.displayName\n\nconst CommandItem = React.forwardRef<\n  React.ElementRef<typeof CommandPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof CommandPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <CommandPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default gap-2 select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none data-[disabled=true]:pointer-events-none data-[selected='true']:bg-accent data-[selected=true]:text-accent-foreground data-[disabled=true]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      className\n    )}\n    {...props}\n  />\n))\n\nCommandItem.displayName = CommandPrimitive.Item.displayName\n\nconst CommandShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nCommandShortcut.displayName = \"CommandShortcut\"\n\nexport {\n  Command,\n  CommandDialog,\n  CommandInput,\n  CommandList,\n  CommandEmpty,\n  CommandGroup,\n  CommandItem,\n  CommandShortcut,\n  CommandSeparator,\n}\n","size_bytes":4885},"client/src/components/ui/context-menu.tsx":{"content":"import * as React from \"react\"\nimport * as ContextMenuPrimitive from \"@radix-ui/react-context-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ContextMenu = ContextMenuPrimitive.Root\n\nconst ContextMenuTrigger = ContextMenuPrimitive.Trigger\n\nconst ContextMenuGroup = ContextMenuPrimitive.Group\n\nconst ContextMenuPortal = ContextMenuPrimitive.Portal\n\nconst ContextMenuSub = ContextMenuPrimitive.Sub\n\nconst ContextMenuRadioGroup = ContextMenuPrimitive.RadioGroup\n\nconst ContextMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <ContextMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </ContextMenuPrimitive.SubTrigger>\n))\nContextMenuSubTrigger.displayName = ContextMenuPrimitive.SubTrigger.displayName\n\nconst ContextMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuSubContent.displayName = ContextMenuPrimitive.SubContent.displayName\n\nconst ContextMenuContent = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Portal>\n    <ContextMenuPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"z-50 max-h-[--radix-context-menu-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md animate-in fade-in-80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-context-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </ContextMenuPrimitive.Portal>\n))\nContextMenuContent.displayName = ContextMenuPrimitive.Content.displayName\n\nconst ContextMenuItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuItem.displayName = ContextMenuPrimitive.Item.displayName\n\nconst ContextMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <ContextMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.CheckboxItem>\n))\nContextMenuCheckboxItem.displayName =\n  ContextMenuPrimitive.CheckboxItem.displayName\n\nconst ContextMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <ContextMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <ContextMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </ContextMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </ContextMenuPrimitive.RadioItem>\n))\nContextMenuRadioItem.displayName = ContextMenuPrimitive.RadioItem.displayName\n\nconst ContextMenuLabel = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <ContextMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold text-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nContextMenuLabel.displayName = ContextMenuPrimitive.Label.displayName\n\nconst ContextMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof ContextMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof ContextMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <ContextMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-border\", className)}\n    {...props}\n  />\n))\nContextMenuSeparator.displayName = ContextMenuPrimitive.Separator.displayName\n\nconst ContextMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nContextMenuShortcut.displayName = \"ContextMenuShortcut\"\n\nexport {\n  ContextMenu,\n  ContextMenuTrigger,\n  ContextMenuContent,\n  ContextMenuItem,\n  ContextMenuCheckboxItem,\n  ContextMenuRadioItem,\n  ContextMenuLabel,\n  ContextMenuSeparator,\n  ContextMenuShortcut,\n  ContextMenuGroup,\n  ContextMenuPortal,\n  ContextMenuSub,\n  ContextMenuSubContent,\n  ContextMenuSubTrigger,\n  ContextMenuRadioGroup,\n}\n","size_bytes":7428},"client/src/components/ui/dialog.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n","size_bytes":3848},"client/src/components/ui/drawer.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border bg-background\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-muted\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n","size_bytes":3021},"client/src/components/ui/dropdown-menu.tsx":{"content":"import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent data-[state=open]:bg-accent [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 max-h-[var(--radix-dropdown-menu-content-available-height)] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-dropdown-menu-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center gap-2 rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n","size_bytes":7609},"client/src/components/ui/form.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n","size_bytes":4120},"client/src/components/ui/hover-card.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-hover-card-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n","size_bytes":1251},"client/src/components/ui/input-otp.tsx":{"content":"import * as React from \"react\"\nimport { OTPInput, OTPInputContext } from \"input-otp\"\nimport { Dot } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst InputOTP = React.forwardRef<\n  React.ElementRef<typeof OTPInput>,\n  React.ComponentPropsWithoutRef<typeof OTPInput>\n>(({ className, containerClassName, ...props }, ref) => (\n  <OTPInput\n    ref={ref}\n    containerClassName={cn(\n      \"flex items-center gap-2 has-[:disabled]:opacity-50\",\n      containerClassName\n    )}\n    className={cn(\"disabled:cursor-not-allowed\", className)}\n    {...props}\n  />\n))\nInputOTP.displayName = \"InputOTP\"\n\nconst InputOTPGroup = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"flex items-center\", className)} {...props} />\n))\nInputOTPGroup.displayName = \"InputOTPGroup\"\n\nconst InputOTPSlot = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\"> & { index: number }\n>(({ index, className, ...props }, ref) => {\n  const inputOTPContext = React.useContext(OTPInputContext)\n  const { char, hasFakeCaret, isActive } = inputOTPContext.slots[index]\n\n  return (\n    <div\n      ref={ref}\n      className={cn(\n        \"relative flex h-10 w-10 items-center justify-center border-y border-r border-input text-sm transition-all first:rounded-l-md first:border-l last:rounded-r-md\",\n        isActive && \"z-10 ring-2 ring-ring ring-offset-background\",\n        className\n      )}\n      {...props}\n    >\n      {char}\n      {hasFakeCaret && (\n        <div className=\"pointer-events-none absolute inset-0 flex items-center justify-center\">\n          <div className=\"h-4 w-px animate-caret-blink bg-foreground duration-1000\" />\n        </div>\n      )}\n    </div>\n  )\n})\nInputOTPSlot.displayName = \"InputOTPSlot\"\n\nconst InputOTPSeparator = React.forwardRef<\n  React.ElementRef<\"div\">,\n  React.ComponentPropsWithoutRef<\"div\">\n>(({ ...props }, ref) => (\n  <div ref={ref} role=\"separator\" {...props}>\n    <Dot />\n  </div>\n))\nInputOTPSeparator.displayName = \"InputOTPSeparator\"\n\nexport { InputOTP, InputOTPGroup, InputOTPSlot, InputOTPSeparator }\n","size_bytes":2154},"client/src/components/ui/input.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n","size_bytes":791},"client/src/components/ui/label.tsx":{"content":"import * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n","size_bytes":710},"client/src/components/ui/menubar.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction MenubarMenu({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Menu>) {\n  return <MenubarPrimitive.Menu {...props} />\n}\n\nfunction MenubarGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Group>) {\n  return <MenubarPrimitive.Group {...props} />\n}\n\nfunction MenubarPortal({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Portal>) {\n  return <MenubarPrimitive.Portal {...props} />\n}\n\nfunction MenubarRadioGroup({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.RadioGroup>) {\n  return <MenubarPrimitive.RadioGroup {...props} />\n}\n\nfunction MenubarSub({\n  ...props\n}: React.ComponentProps<typeof MenubarPrimitive.Sub>) {\n  return <MenubarPrimitive.Sub data-slot=\"menubar-sub\" {...props} />\n}\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border bg-background p-1\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[state=open]:bg-accent data-[state=open]:text-accent-foreground\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border bg-popover p-1 text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-menubar-content-transform-origin]\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-muted-foreground\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n","size_bytes":8605},"client/src/components/ui/navigation-menu.tsx":{"content":"import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-background px-4 py-2 text-sm font-medium transition-colors hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[state=open]:text-accent-foreground data-[state=open]:bg-accent/50 data-[state=open]:hover:bg-accent data-[state=open]:focus:bg-accent\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\" \"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto \",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)]\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-border shadow-md\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n","size_bytes":5128},"client/src/components/ui/pagination.tsx":{"content":"import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\nimport { ButtonProps, buttonVariants } from \"@/components/ui/button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n","size_bytes":2751},"client/src/components/ui/popover.tsx":{"content":"import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-popover-content-transform-origin]\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n","size_bytes":1280},"client/src/components/ui/progress.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n","size_bytes":791},"client/src/components/ui/radio-group.tsx":{"content":"import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n","size_bytes":1467},"client/src/components/ui/resizable.tsx":{"content":"\"use client\"\n\nimport { GripVertical } from \"lucide-react\"\nimport * as ResizablePrimitive from \"react-resizable-panels\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ResizablePanelGroup = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelGroup>) => (\n  <ResizablePrimitive.PanelGroup\n    className={cn(\n      \"flex h-full w-full data-[panel-group-direction=vertical]:flex-col\",\n      className\n    )}\n    {...props}\n  />\n)\n\nconst ResizablePanel = ResizablePrimitive.Panel\n\nconst ResizableHandle = ({\n  withHandle,\n  className,\n  ...props\n}: React.ComponentProps<typeof ResizablePrimitive.PanelResizeHandle> & {\n  withHandle?: boolean\n}) => (\n  <ResizablePrimitive.PanelResizeHandle\n    className={cn(\n      \"relative flex w-px items-center justify-center bg-border after:absolute after:inset-y-0 after:left-1/2 after:w-1 after:-translate-x-1/2 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring focus-visible:ring-offset-1 data-[panel-group-direction=vertical]:h-px data-[panel-group-direction=vertical]:w-full data-[panel-group-direction=vertical]:after:left-0 data-[panel-group-direction=vertical]:after:h-1 data-[panel-group-direction=vertical]:after:w-full data-[panel-group-direction=vertical]:after:-translate-y-1/2 data-[panel-group-direction=vertical]:after:translate-x-0 [&[data-panel-group-direction=vertical]>div]:rotate-90\",\n      className\n    )}\n    {...props}\n  >\n    {withHandle && (\n      <div className=\"z-10 flex h-4 w-3 items-center justify-center rounded-sm border bg-border\">\n        <GripVertical className=\"h-2.5 w-2.5\" />\n      </div>\n    )}\n  </ResizablePrimitive.PanelResizeHandle>\n)\n\nexport { ResizablePanelGroup, ResizablePanel, ResizableHandle }\n","size_bytes":1723},"client/src/components/ui/scroll-area.tsx":{"content":"import * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n","size_bytes":1642},"client/src/components/ui/select.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background data-[placeholder]:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-[--radix-select-content-available-height] min-w-[8rem] overflow-y-auto overflow-x-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-select-content-transform-origin]\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n","size_bytes":5742},"client/src/components/ui/separator.tsx":{"content":"import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-border\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n","size_bytes":756},"client/src/components/ui/sheet.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n","size_bytes":4281},"client/src/components/ui/sidebar.tsx":{"content":"import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { VariantProps, cva } from \"class-variance-authority\"\nimport { PanelLeft } from \"lucide-react\"\n\nimport { useIsMobile } from \"@/hooks/use-mobile\"\nimport { cn } from \"@/lib/utils\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { Separator } from \"@/components/ui/separator\"\nimport {\n  Sheet,\n  SheetContent,\n  SheetDescription,\n  SheetHeader,\n  SheetTitle,\n} from \"@/components/ui/sheet\"\nimport { Skeleton } from \"@/components/ui/skeleton\"\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\"\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\"\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7\nconst SIDEBAR_WIDTH = \"16rem\"\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\"\nconst SIDEBAR_WIDTH_ICON = \"3rem\"\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\"\n\ntype SidebarContextProps = {\n  state: \"expanded\" | \"collapsed\"\n  open: boolean\n  setOpen: (open: boolean) => void\n  openMobile: boolean\n  setOpenMobile: (open: boolean) => void\n  isMobile: boolean\n  toggleSidebar: () => void\n}\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null)\n\nfunction useSidebar() {\n  const context = React.useContext(SidebarContext)\n  if (!context) {\n    throw new Error(\"useSidebar must be used within a SidebarProvider.\")\n  }\n\n  return context\n}\n\nconst SidebarProvider = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    defaultOpen?: boolean\n    open?: boolean\n    onOpenChange?: (open: boolean) => void\n  }\n>(\n  (\n    {\n      defaultOpen = true,\n      open: openProp,\n      onOpenChange: setOpenProp,\n      className,\n      style,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const isMobile = useIsMobile()\n    const [openMobile, setOpenMobile] = React.useState(false)\n\n    // This is the internal state of the sidebar.\n    // We use openProp and setOpenProp for control from outside the component.\n    const [_open, _setOpen] = React.useState(defaultOpen)\n    const open = openProp ?? _open\n    const setOpen = React.useCallback(\n      (value: boolean | ((value: boolean) => boolean)) => {\n        const openState = typeof value === \"function\" ? value(open) : value\n        if (setOpenProp) {\n          setOpenProp(openState)\n        } else {\n          _setOpen(openState)\n        }\n\n        // This sets the cookie to keep the sidebar state.\n        document.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`\n      },\n      [setOpenProp, open]\n    )\n\n    // Helper to toggle the sidebar.\n    const toggleSidebar = React.useCallback(() => {\n      return isMobile\n        ? setOpenMobile((open) => !open)\n        : setOpen((open) => !open)\n    }, [isMobile, setOpen, setOpenMobile])\n\n    // Adds a keyboard shortcut to toggle the sidebar.\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        if (\n          event.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n          (event.metaKey || event.ctrlKey)\n        ) {\n          event.preventDefault()\n          toggleSidebar()\n        }\n      }\n\n      window.addEventListener(\"keydown\", handleKeyDown)\n      return () => window.removeEventListener(\"keydown\", handleKeyDown)\n    }, [toggleSidebar])\n\n    // We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n    // This makes it easier to style the sidebar with Tailwind classes.\n    const state = open ? \"expanded\" : \"collapsed\"\n\n    const contextValue = React.useMemo<SidebarContextProps>(\n      () => ({\n        state,\n        open,\n        setOpen,\n        isMobile,\n        openMobile,\n        setOpenMobile,\n        toggleSidebar,\n      }),\n      [state, open, setOpen, isMobile, openMobile, setOpenMobile, toggleSidebar]\n    )\n\n    return (\n      <SidebarContext.Provider value={contextValue}>\n        <TooltipProvider delayDuration={0}>\n          <div\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH,\n                \"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n                ...style,\n              } as React.CSSProperties\n            }\n            className={cn(\n              \"group/sidebar-wrapper flex min-h-svh w-full has-[[data-variant=inset]]:bg-sidebar\",\n              className\n            )}\n            ref={ref}\n            {...props}\n          >\n            {children}\n          </div>\n        </TooltipProvider>\n      </SidebarContext.Provider>\n    )\n  }\n)\nSidebarProvider.displayName = \"SidebarProvider\"\n\nconst Sidebar = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    side?: \"left\" | \"right\"\n    variant?: \"sidebar\" | \"floating\" | \"inset\"\n    collapsible?: \"offcanvas\" | \"icon\" | \"none\"\n  }\n>(\n  (\n    {\n      side = \"left\",\n      variant = \"sidebar\",\n      collapsible = \"offcanvas\",\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const { isMobile, state, openMobile, setOpenMobile } = useSidebar()\n\n    if (collapsible === \"none\") {\n      return (\n        <div\n          className={cn(\n            \"flex h-full w-[--sidebar-width] flex-col bg-sidebar text-sidebar-foreground\",\n            className\n          )}\n          ref={ref}\n          {...props}\n        >\n          {children}\n        </div>\n      )\n    }\n\n    if (isMobile) {\n      return (\n        <Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n          <SheetContent\n            data-sidebar=\"sidebar\"\n            data-mobile=\"true\"\n            className=\"w-[--sidebar-width] bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n            style={\n              {\n                \"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n              } as React.CSSProperties\n            }\n            side={side}\n          >\n            <SheetHeader className=\"sr-only\">\n              <SheetTitle>Sidebar</SheetTitle>\n              <SheetDescription>Displays the mobile sidebar.</SheetDescription>\n            </SheetHeader>\n            <div className=\"flex h-full w-full flex-col\">{children}</div>\n          </SheetContent>\n        </Sheet>\n      )\n    }\n\n    return (\n      <div\n        ref={ref}\n        className=\"group peer hidden text-sidebar-foreground md:block\"\n        data-state={state}\n        data-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n        data-variant={variant}\n        data-side={side}\n      >\n        {/* This is what handles the sidebar gap on desktop */}\n        <div\n          className={cn(\n            \"relative w-[--sidebar-width] bg-transparent transition-[width] duration-200 ease-linear\",\n            \"group-data-[collapsible=offcanvas]:w-0\",\n            \"group-data-[side=right]:rotate-180\",\n            variant === \"floating\" || variant === \"inset\"\n              ? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4))]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon]\"\n          )}\n        />\n        <div\n          className={cn(\n            \"fixed inset-y-0 z-10 hidden h-svh w-[--sidebar-width] transition-[left,right,width] duration-200 ease-linear md:flex\",\n            side === \"left\"\n              ? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n              : \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n            // Adjust the padding for floating and inset variants.\n            variant === \"floating\" || variant === \"inset\"\n              ? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)_+_theme(spacing.4)_+2px)]\"\n              : \"group-data-[collapsible=icon]:w-[--sidebar-width-icon] group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n            className\n          )}\n          {...props}\n        >\n          <div\n            data-sidebar=\"sidebar\"\n            className=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow\"\n          >\n            {children}\n          </div>\n        </div>\n      </div>\n    )\n  }\n)\nSidebar.displayName = \"Sidebar\"\n\nconst SidebarTrigger = React.forwardRef<\n  React.ElementRef<typeof Button>,\n  React.ComponentProps<typeof Button>\n>(({ className, onClick, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <Button\n      ref={ref}\n      data-sidebar=\"trigger\"\n      variant=\"ghost\"\n      size=\"icon\"\n      className={cn(\"h-7 w-7\", className)}\n      onClick={(event) => {\n        onClick?.(event)\n        toggleSidebar()\n      }}\n      {...props}\n    >\n      <PanelLeft />\n      <span className=\"sr-only\">Toggle Sidebar</span>\n    </Button>\n  )\n})\nSidebarTrigger.displayName = \"SidebarTrigger\"\n\nconst SidebarRail = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\">\n>(({ className, ...props }, ref) => {\n  const { toggleSidebar } = useSidebar()\n\n  return (\n    <button\n      ref={ref}\n      data-sidebar=\"rail\"\n      aria-label=\"Toggle Sidebar\"\n      tabIndex={-1}\n      onClick={toggleSidebar}\n      title=\"Toggle Sidebar\"\n      className={cn(\n        \"absolute inset-y-0 z-20 hidden w-4 -translate-x-1/2 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=left]:-right-4 group-data-[side=right]:left-0 sm:flex\",\n        \"[[data-side=left]_&]:cursor-w-resize [[data-side=right]_&]:cursor-e-resize\",\n        \"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n        \"group-data-[collapsible=offcanvas]:translate-x-0 group-data-[collapsible=offcanvas]:after:left-full group-data-[collapsible=offcanvas]:hover:bg-sidebar\",\n        \"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n        \"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarRail.displayName = \"SidebarRail\"\n\nconst SidebarInset = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"main\">\n>(({ className, ...props }, ref) => {\n  return (\n    <main\n      ref={ref}\n      className={cn(\n        \"relative flex w-full flex-1 flex-col bg-background\",\n        \"md:peer-data-[variant=inset]:m-2 md:peer-data-[state=collapsed]:peer-data-[variant=inset]:ml-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInset.displayName = \"SidebarInset\"\n\nconst SidebarInput = React.forwardRef<\n  React.ElementRef<typeof Input>,\n  React.ComponentProps<typeof Input>\n>(({ className, ...props }, ref) => {\n  return (\n    <Input\n      ref={ref}\n      data-sidebar=\"input\"\n      className={cn(\n        \"h-8 w-full bg-background shadow-none focus-visible:ring-2 focus-visible:ring-sidebar-ring\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarInput.displayName = \"SidebarInput\"\n\nconst SidebarHeader = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"header\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarHeader.displayName = \"SidebarHeader\"\n\nconst SidebarFooter = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"footer\"\n      className={cn(\"flex flex-col gap-2 p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarFooter.displayName = \"SidebarFooter\"\n\nconst SidebarSeparator = React.forwardRef<\n  React.ElementRef<typeof Separator>,\n  React.ComponentProps<typeof Separator>\n>(({ className, ...props }, ref) => {\n  return (\n    <Separator\n      ref={ref}\n      data-sidebar=\"separator\"\n      className={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n      {...props}\n    />\n  )\n})\nSidebarSeparator.displayName = \"SidebarSeparator\"\n\nconst SidebarContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"content\"\n      className={cn(\n        \"flex min-h-0 flex-1 flex-col gap-2 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarContent.displayName = \"SidebarContent\"\n\nconst SidebarGroup = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => {\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"group\"\n      className={cn(\"relative flex w-full min-w-0 flex-col p-2\", className)}\n      {...props}\n    />\n  )\n})\nSidebarGroup.displayName = \"SidebarGroup\"\n\nconst SidebarGroupLabel = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"div\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-label\"\n      className={cn(\n        \"flex h-8 shrink-0 items-center rounded-md px-2 text-xs font-medium text-sidebar-foreground/70 outline-none ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        \"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupLabel.displayName = \"SidebarGroupLabel\"\n\nconst SidebarGroupAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & { asChild?: boolean }\n>(({ className, asChild = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"group-action\"\n      className={cn(\n        \"absolute right-3 top-3.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarGroupAction.displayName = \"SidebarGroupAction\"\n\nconst SidebarGroupContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"group-content\"\n    className={cn(\"w-full text-sm\", className)}\n    {...props}\n  />\n))\nSidebarGroupContent.displayName = \"SidebarGroupContent\"\n\nconst SidebarMenu = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu\"\n    className={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n    {...props}\n  />\n))\nSidebarMenu.displayName = \"SidebarMenu\"\n\nconst SidebarMenuItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    data-sidebar=\"menu-item\"\n    className={cn(\"group/menu-item relative\", className)}\n    {...props}\n  />\n))\nSidebarMenuItem.displayName = \"SidebarMenuItem\"\n\nconst sidebarMenuButtonVariants = cva(\n  \"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-none ring-sidebar-ring transition-[width,height,padding] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 group-has-[[data-sidebar=menu-action]]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 data-[active=true]:bg-sidebar-accent data-[active=true]:font-medium data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground group-data-[collapsible=icon]:!size-8 group-data-[collapsible=icon]:!p-2 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground\",\n        outline:\n          \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))]\",\n      },\n      size: {\n        default: \"h-8 text-sm\",\n        sm: \"h-7 text-xs\",\n        lg: \"h-12 text-sm group-data-[collapsible=icon]:!p-0\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst SidebarMenuButton = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    isActive?: boolean\n    tooltip?: string | React.ComponentProps<typeof TooltipContent>\n  } & VariantProps<typeof sidebarMenuButtonVariants>\n>(\n  (\n    {\n      asChild = false,\n      isActive = false,\n      variant = \"default\",\n      size = \"default\",\n      tooltip,\n      className,\n      ...props\n    },\n    ref\n  ) => {\n    const Comp = asChild ? Slot : \"button\"\n    const { isMobile, state } = useSidebar()\n\n    const button = (\n      <Comp\n        ref={ref}\n        data-sidebar=\"menu-button\"\n        data-size={size}\n        data-active={isActive}\n        className={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n        {...props}\n      />\n    )\n\n    if (!tooltip) {\n      return button\n    }\n\n    if (typeof tooltip === \"string\") {\n      tooltip = {\n        children: tooltip,\n      }\n    }\n\n    return (\n      <Tooltip>\n        <TooltipTrigger asChild>{button}</TooltipTrigger>\n        <TooltipContent\n          side=\"right\"\n          align=\"center\"\n          hidden={state !== \"collapsed\" || isMobile}\n          {...tooltip}\n        />\n      </Tooltip>\n    )\n  }\n)\nSidebarMenuButton.displayName = \"SidebarMenuButton\"\n\nconst SidebarMenuAction = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<\"button\"> & {\n    asChild?: boolean\n    showOnHover?: boolean\n  }\n>(({ className, asChild = false, showOnHover = false, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-action\"\n      className={cn(\n        \"absolute right-1 top-1.5 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-none ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n        // Increases the hit area of the button on mobile.\n        \"after:absolute after:-inset-2 after:md:hidden\",\n        \"peer-data-[size=sm]/menu-button:top-1\",\n        \"peer-data-[size=default]/menu-button:top-1.5\",\n        \"peer-data-[size=lg]/menu-button:top-2.5\",\n        \"group-data-[collapsible=icon]:hidden\",\n        showOnHover &&\n          \"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuAction.displayName = \"SidebarMenuAction\"\n\nconst SidebarMenuBadge = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\">\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    data-sidebar=\"menu-badge\"\n    className={cn(\n      \"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 text-xs font-medium tabular-nums text-sidebar-foreground\",\n      \"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n      \"peer-data-[size=sm]/menu-button:top-1\",\n      \"peer-data-[size=default]/menu-button:top-1.5\",\n      \"peer-data-[size=lg]/menu-button:top-2.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuBadge.displayName = \"SidebarMenuBadge\"\n\nconst SidebarMenuSkeleton = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    showIcon?: boolean\n  }\n>(({ className, showIcon = false, ...props }, ref) => {\n  // Random width between 50 to 90%.\n  const width = React.useMemo(() => {\n    return `${Math.floor(Math.random() * 40) + 50}%`\n  }, [])\n\n  return (\n    <div\n      ref={ref}\n      data-sidebar=\"menu-skeleton\"\n      className={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n      {...props}\n    >\n      {showIcon && (\n        <Skeleton\n          className=\"size-4 rounded-md\"\n          data-sidebar=\"menu-skeleton-icon\"\n        />\n      )}\n      <Skeleton\n        className=\"h-4 max-w-[--skeleton-width] flex-1\"\n        data-sidebar=\"menu-skeleton-text\"\n        style={\n          {\n            \"--skeleton-width\": width,\n          } as React.CSSProperties\n        }\n      />\n    </div>\n  )\n})\nSidebarMenuSkeleton.displayName = \"SidebarMenuSkeleton\"\n\nconst SidebarMenuSub = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    data-sidebar=\"menu-sub\"\n    className={cn(\n      \"mx-3.5 flex min-w-0 translate-x-px flex-col gap-1 border-l border-sidebar-border px-2.5 py-0.5\",\n      \"group-data-[collapsible=icon]:hidden\",\n      className\n    )}\n    {...props}\n  />\n))\nSidebarMenuSub.displayName = \"SidebarMenuSub\"\n\nconst SidebarMenuSubItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ ...props }, ref) => <li ref={ref} {...props} />)\nSidebarMenuSubItem.displayName = \"SidebarMenuSubItem\"\n\nconst SidebarMenuSubButton = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentProps<\"a\"> & {\n    asChild?: boolean\n    size?: \"sm\" | \"md\"\n    isActive?: boolean\n  }\n>(({ asChild = false, size = \"md\", isActive, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      data-sidebar=\"menu-sub-button\"\n      data-size={size}\n      data-active={isActive}\n      className={cn(\n        \"flex h-7 min-w-0 -translate-x-px items-center gap-2 overflow-hidden rounded-md px-2 text-sidebar-foreground outline-none ring-sidebar-ring hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 active:bg-sidebar-accent active:text-sidebar-accent-foreground disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground\",\n        \"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n        size === \"sm\" && \"text-xs\",\n        size === \"md\" && \"text-sm\",\n        \"group-data-[collapsible=icon]:hidden\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nSidebarMenuSubButton.displayName = \"SidebarMenuSubButton\"\n\nexport {\n  Sidebar,\n  SidebarContent,\n  SidebarFooter,\n  SidebarGroup,\n  SidebarGroupAction,\n  SidebarGroupContent,\n  SidebarGroupLabel,\n  SidebarHeader,\n  SidebarInput,\n  SidebarInset,\n  SidebarMenu,\n  SidebarMenuAction,\n  SidebarMenuBadge,\n  SidebarMenuButton,\n  SidebarMenuItem,\n  SidebarMenuSkeleton,\n  SidebarMenuSub,\n  SidebarMenuSubButton,\n  SidebarMenuSubItem,\n  SidebarProvider,\n  SidebarRail,\n  SidebarSeparator,\n  SidebarTrigger,\n  useSidebar,\n}\n","size_bytes":23567},"client/src/components/ui/skeleton.tsx":{"content":"import { cn } from \"@/lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n","size_bytes":261},"client/src/components/ui/slider.tsx":{"content":"import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-secondary\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-primary\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-primary bg-background ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n","size_bytes":1077},"client/src/components/ui/switch.tsx":{"content":"import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n","size_bytes":1139},"client/src/components/ui/table.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n","size_bytes":2765},"client/src/components/ui/tabs.tsx":{"content":"import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","size_bytes":1883},"client/src/components/ui/textarea.tsx":{"content":"import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }","size_bytes":771},"client/src/components/ui/toast.tsx":{"content":"import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-background text-foreground\",\n        destructive:\n          \"destructive group border-destructive bg-destructive text-destructive-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border bg-transparent px-3 text-sm font-medium ring-offset-background transition-colors hover:bg-secondary focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-muted/40 group-[.destructive]:hover:border-destructive/30 group-[.destructive]:hover:bg-destructive group-[.destructive]:hover:text-destructive-foreground group-[.destructive]:focus:ring-destructive\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-foreground/50 opacity-0 transition-opacity hover:text-foreground focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","size_bytes":4845},"client/src/components/ui/toaster.tsx":{"content":"import { useToast } from \"@/hooks/use-toast\"\nimport {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"@/components/ui/toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n","size_bytes":772},"client/src/components/ui/toggle-group.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\nimport { toggleVariants } from \"@/components/ui/toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n","size_bytes":1753},"client/src/components/ui/toggle.tsx":{"content":"import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-background transition-colors hover:bg-muted hover:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-accent data-[state=on]:text-accent-foreground [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0 gap-2\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-input bg-transparent hover:bg-accent hover:text-accent-foreground\",\n      },\n      size: {\n        default: \"h-10 px-3 min-w-10\",\n        sm: \"h-9 px-2.5 min-w-9\",\n        lg: \"h-11 px-5 min-w-11\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n","size_bytes":1527},"client/src/components/ui/tooltip.tsx":{"content":"\"use client\"\n\nimport * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border bg-popover px-3 py-1.5 text-sm text-popover-foreground shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 origin-[--radix-tooltip-content-transform-origin]\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n","size_bytes":1209},"client/src/components/AudioUploader.tsx":{"content":"import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Music, Upload, Loader2 } from \"lucide-react\";\nimport { ObjectUploader } from \"./ObjectUploader\";\nimport type { UploadResult } from \"@uppy/core\";\nimport { api } from \"@/lib/api\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface AudioUploaderProps {\n  onUploadComplete?: (audioUrl: string) => void;\n}\n\nexport function AudioUploader({ onUploadComplete }: AudioUploaderProps) {\n  const [isUploading, setIsUploading] = useState(false);\n  const { toast } = useToast();\n\n  const handleGetUploadParameters = async () => {\n    try {\n      const response = await fetch('/api/objects/upload', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      \n      if (!response.ok) {\n        throw new Error('Failed to get upload parameters');\n      }\n      \n      const { uploadURL } = await response.json();\n      return {\n        method: 'PUT' as const,\n        url: uploadURL,\n      };\n    } catch (error) {\n      console.error('Error getting upload parameters:', error);\n      throw error;\n    }\n  };\n\n  const handleUploadComplete = async (result: UploadResult<Record<string, unknown>, Record<string, unknown>>) => {\n    if (result.successful && result.successful.length > 0) {\n      setIsUploading(true);\n      try {\n        const uploadedFile = result.successful[0];\n        const uploadURL = uploadedFile.uploadURL as string;\n        \n        // Set ACL policy for the uploaded audio file\n        const response = await fetch('/api/background-audio', {\n          method: 'PUT',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            audioURL: uploadURL,\n          }),\n        });\n\n        if (!response.ok) {\n          throw new Error('Failed to process audio upload');\n        }\n\n        const { objectPath } = await response.json();\n        const audioUrl = objectPath;\n\n        toast({\n          title: \"Audio uploaded successfully!\",\n          description: \"Your background audio file is ready to use.\",\n        });\n\n        onUploadComplete?.(audioUrl);\n        \n      } catch (error) {\n        console.error('Error processing audio upload:', error);\n        toast({\n          title: \"Upload failed\",\n          description: \"There was an error processing your audio file.\",\n          variant: \"destructive\",\n        });\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"text-center\">\n        <Music className=\"w-12 h-12 mx-auto text-gray-400 mb-4\" />\n        <h3 className=\"text-lg font-semibold text-gray-900 mb-2\">Upload Background Audio</h3>\n        <p className=\"text-sm text-gray-600 mb-4\">\n          Upload your custom audio file to play as background music. Supports MP3, WAV, and OGG formats.\n        </p>\n      </div>\n\n      <ObjectUploader\n        maxNumberOfFiles={1}\n        maxFileSize={50 * 1024 * 1024} // 50MB limit for audio files\n        onGetUploadParameters={handleGetUploadParameters}\n        onComplete={handleUploadComplete}\n        buttonClassName=\"w-full\"\n      >\n        {isUploading ? (\n          <div className=\"flex items-center justify-center\">\n            <Loader2 className=\"w-4 h-4 mr-2 animate-spin\" />\n            Processing audio...\n          </div>\n        ) : (\n          <div className=\"flex items-center justify-center\">\n            <Upload className=\"w-4 h-4 mr-2\" />\n            Upload Audio File\n          </div>\n        )}\n      </ObjectUploader>\n\n      <div className=\"text-xs text-gray-500\">\n        Supported formats: MP3, WAV, OGG • Max size: 50MB\n      </div>\n    </div>\n  );\n}","size_bytes":3740}},"version":1}